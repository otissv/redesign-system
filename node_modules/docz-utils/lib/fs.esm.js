import { extname } from 'path';
import 'prettier';
import 'signale';
import { format } from './format.esm.js';
import { createWriteStream, readFileSync } from 'fs-extra';
import { compile } from 'art-template';

const touch = (file, raw) => new Promise(async (resolve, reject) => {
    const content = /jsx?$/.test(extname(file)) ? await format(raw) : raw;
    const stream = createWriteStream(file);
    stream.write(content, 'utf-8');
    stream.on('finish', () => resolve());
    stream.on('error', err => reject(err));
    stream.end();
});
const compiled = (file, opts = {}) => {
    const raw = readFileSync(file, { encoding: 'utf-8' });
    return compile(raw, opts);
};

export { compiled, touch };
