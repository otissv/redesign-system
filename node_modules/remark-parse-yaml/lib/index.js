'use strict';

var map = require('unist-util-map');
var yaml = require('js-yaml');

var yamlPlugin = function yamlPlugin(options) {
    options = options || {};

    function transformer(ast) {
        return map(ast, function (node) {
            if (node.type == "yaml") {
                var parsedValue = yaml.safeLoad(node.value, 'utf8');
                var newNode = Object.assign({}, node, { data: { parsedValue: parsedValue } });
                return newNode;
            } else {
                return node;
            }
        });
    }

    // Stringify for yaml
    var Compiler = this.Compiler;

    if (Compiler != null) {
        var visitors = Compiler.prototype.visitors;
        if (visitors) {
            visitors.yaml = function (node) {
                if (node.data && node.data.parsedValue) {
                    var yml = yaml.safeDump(node.data.parsedValue);
                    return '---\n' + yml + '---';
                }
            };
        }
    }

    return transformer;
};

module.exports = yamlPlugin;