'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = resolvePath;
function resolvePath(basePath, relativePath) {
  var newSegments = basePath.split('/').filter(function (a) {
    return a;
  });
  var relativeSegments = relativePath.split('/').filter(function (a) {
    return a;
  });
  var segment = relativeSegments.shift();

  // For our use-case, the basePath is always a file, not a directory.
  // This means we can do this safely.
  if (segment === '..' || segment === '.') newSegments.pop();

  while (segment) {
    switch (segment) {
      case '.':
        break;
      case '..':
        if (newSegments.length < 1) {
          throw new Error('Trying to access a filepath outside our scope');
        }
        newSegments.pop();
        break;
      default:
        newSegments.push(segment);
    }
    segment = relativeSegments.shift();
  }
  return newSegments.join('/');
}