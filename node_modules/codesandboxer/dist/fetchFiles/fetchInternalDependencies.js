'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _fetchRelativeFile = require('../fetchRelativeFile');

var _fetchRelativeFile2 = _interopRequireDefault(_fetchRelativeFile);

var _ensureExtension = require('./ensureExtension');

var _ensureExtension2 = _interopRequireDefault(_ensureExtension);

var _resolvePath = require('../utils/resolvePath');

var _resolvePath2 = _interopRequireDefault(_resolvePath);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(internalImports, files, pkg, deps, gitInfo, importReplacements, config) {
    var accumulatedInternalDependencies = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : [];

    var newFiles, moreInternalImports, _loop, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, f, moreFiles;

    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _promise2.default.all(internalImports.map(function (path) {
              return (0, _fetchRelativeFile2.default)(path, pkg, importReplacements, gitInfo, config);
            }));

          case 2:
            newFiles = _context.sent;
            moreInternalImports = [];

            _loop = function _loop(f) {
              files[(0, _ensureExtension2.default)(f.path)] = { content: f.file };
              deps = (0, _extends3.default)({}, deps, f.deps);
              f.internalImports.forEach(function (m) {
                return moreInternalImports.push((0, _resolvePath2.default)(f.path, m));
              });
            };

            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _iteratorError = undefined;
            _context.prev = 8;

            for (_iterator = (0, _getIterator3.default)(newFiles); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              f = _step.value;

              _loop(f);
            }

            _context.next = 16;
            break;

          case 12:
            _context.prev = 12;
            _context.t0 = _context['catch'](8);
            _didIteratorError = true;
            _iteratorError = _context.t0;

          case 16:
            _context.prev = 16;
            _context.prev = 17;

            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }

          case 19:
            _context.prev = 19;

            if (!_didIteratorError) {
              _context.next = 22;
              break;
            }

            throw _iteratorError;

          case 22:
            return _context.finish(19);

          case 23:
            return _context.finish(16);

          case 24:
            accumulatedInternalDependencies = accumulatedInternalDependencies.concat(internalImports);

            moreInternalImports = moreInternalImports.filter(function (mpt) {
              return !accumulatedInternalDependencies.includes(mpt);
            });

            if (!(moreInternalImports.length > 0)) {
              _context.next = 33;
              break;
            }

            _context.next = 29;
            return fetchInternalDependencies(moreInternalImports, files, pkg, deps, gitInfo, importReplacements, config, accumulatedInternalDependencies);

          case 29:
            moreFiles = _context.sent;
            return _context.abrupt('return', {
              files: (0, _extends3.default)({}, files, moreFiles.files),
              deps: (0, _extends3.default)({}, deps, moreFiles.deps)
            });

          case 33:
            return _context.abrupt('return', { files: files, deps: deps });

          case 34:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this, [[8, 12, 16, 24], [17,, 19, 23]]);
  }));

  function fetchInternalDependencies(_x2, _x3, _x4, _x5, _x6, _x7, _x8) {
    return _ref.apply(this, arguments);
  }

  return fetchInternalDependencies;
}();