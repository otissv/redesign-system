{"ast":null,"code":"import _slicedToArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Table/Table.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment, useEffect, useMemo, useReducer, useRef } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport Base from '../Base/Base';\nimport { JsonView } from './JsonView';\nimport { TableView } from './TableView';\nimport { Toolbar } from '../Toolbar/Toolbar';\nimport { ToolbarAddButton } from '../Toolbar/ToolbarAddButton';\nimport { ToolbarCopyButton } from '../Toolbar/ToolbarCopyButton';\nimport { ToolbarDeleteButton } from '../Toolbar/ToolbarDeleteButton';\nimport { ToolbarDownloadButton } from '../Toolbar/ToolbarDownloadButton';\nimport { ToolbarEditButton } from '../Toolbar/ToolbarEditButton';\nimport { ToolbarExecuteButton } from '../Toolbar/ToolbarExecuteButton';\nimport { ToolbarVariablesButton } from '../Toolbar/ToolbarVariablesButton';\nimport { ToolbarViewsButton } from '../Toolbar/ToolbarViewsButton';\nimport { Typography } from '../Typography';\nimport { tableTheme } from './table.theme';\nimport { useCacheState } from '../reusable/cacheState';\nimport { TableCaption } from './TableCaption';\nvar SelectedText = styled.span(_templateObject());\nexport var Table = React.memo(function Table(_ref) {\n  var className = _ref.className,\n      caption = _ref.caption,\n      headings = _ref.headings,\n      hook = _ref.hook,\n      initialValue = _ref.initialValue,\n      name = _ref.name,\n      numbered = _ref.numbered,\n      onAdd = _ref.onAdd,\n      onCopy = _ref.onCopy,\n      onDelete = _ref.onDelete,\n      onDeleteSelected = _ref.onDeleteSelected,\n      onDownload = _ref.onDownload,\n      onEdit = _ref.onEdit,\n      onExecute = _ref.onExecute,\n      rows = _ref.rows,\n      title = _ref.title,\n      _ref$toolbar = _ref.toolbar,\n      toolbar = _ref$toolbar === void 0 ? [] : _ref$toolbar,\n      propsThemed = _ref.themed,\n      uid = _ref.uid,\n      propsRest = _objectWithoutProperties(_ref, [\"className\", \"caption\", \"headings\", \"hook\", \"initialValue\", \"name\", \"numbered\", \"onAdd\", \"onCopy\", \"onDelete\", \"onDeleteSelected\", \"onDownload\", \"onEdit\", \"onExecute\", \"rows\", \"title\", \"toolbar\", \"themed\", \"uid\"]);\n\n  var classNames = \"Table \".concat(className || '');\n  var themed = useMemo(function () {\n    return [tableTheme].concat(_toConsumableArray(propsThemed));\n  }, [tableTheme, propsThemed]);\n\n  var _hook = hook(),\n      loading = _hook.loading,\n      selected = _hook.selected,\n      dispatchHook = _hook.dispatch,\n      itemsToArray = _hook.itemsToArray;\n\n  var _itemList = useMemo(function () {\n    return initialValue || itemsToArray();\n  }, [initialValue, itemsToArray]);\n\n  var initialState = {\n    variables: {},\n    itemList: []\n  };\n\n  function reducer(state, actions) {\n    switch (actions.type) {\n      case 'SET_ITEM_LIST':\n        return _objectSpread({}, state, {\n          itemList: actions.itemList\n        });\n\n      case 'SET_VARIABLES':\n        return _objectSpread({}, state, {\n          variables: actions.variables\n        });\n\n      default:\n        return state;\n    }\n  }\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      itemList = _useReducer2[0].itemList,\n      dispatch = _useReducer2[1];\n\n  var _useCacheState = useCacheState(\"\".concat(uid, \"_Table\")),\n      _useCacheState2 = _slicedToArray(_useCacheState, 2),\n      currentView = _useCacheState2[0],\n      setCurrentView = _useCacheState2[1];\n\n  var _useCacheState3 = useCacheState(\"\".concat(uid, \"_showVariables\"), false),\n      _useCacheState4 = _slicedToArray(_useCacheState3, 2),\n      showVariables = _useCacheState4[0],\n      setShowVariables = _useCacheState4[1];\n\n  var variablesRef = useRef('');\n\n  var _headings = useMemo(function () {\n    return headings;\n  }, [headings]);\n\n  var _rows = typeof rows === 'function' ? rows(itemList) : rows;\n\n  useEffect(function () {\n    dispatch({\n      type: 'SET_ITEM_LIST',\n      itemList: _itemList // initialValue || _itemList,\n\n    });\n  }, [_itemList]);\n\n  function handleAdd(e) {\n    e.preventDefault();\n    onAdd && onAdd(e);\n  }\n\n  function handleDelete(e) {\n    e.preventDefault();\n    onDelete && onDelete(e);\n  }\n\n  function handleDeleteSelected(e) {\n    var result = window.confirm(\"Drop collections?\\n\".concat(selected.join('\\n')));\n\n    if (result) {\n      onDeleteSelected && onDeleteSelected(e);\n    }\n  }\n\n  function handleEdit(e) {\n    e.preventDefault();\n    onEdit && onEdit(e);\n  }\n\n  function handleExecute(e) {\n    var variablesObj = isEmpty(variablesRef.current) ? {} : JSON.parse(variablesRef.current);\n    onExecute(variablesObj).then(function (result) {\n      if (result) {\n        dispatchTable({\n          type: 'SET_ITEM_LIST',\n          itemList: result\n        });\n      }\n    });\n  }\n\n  function handleSwitchView(e, _ref2) {\n    var id = _ref2.id;\n    e.preventDefault();\n\n    if (id !== currentView) {\n      setCurrentView(id);\n    }\n  }\n\n  function handleVariables(e) {\n    e.preventDefault();\n    setShowVariables(!showVariables);\n  }\n\n  function handleVariablesChange(values) {\n    variablesRef.current = values; // debounce(() => setVariables(values), 1000)()\n  }\n\n  var SelectToolbar = useMemo(function () {\n    return function (_ref3) {\n      var selected = _ref3.selected,\n          handleDeleteSelected = _ref3.handleDeleteSelected;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(SelectedText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, selected, \" selected \"), React.createElement(ToolbarDeleteButton, {\n        onClick: handleDeleteSelected,\n        title: \"Delete Collection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }));\n    };\n  }, [selected, handleDeleteSelected]);\n  var toolbarContent = useMemo(function () {\n    return function (_ref4) {\n      var handleSwitchView = _ref4.handleSwitchView;\n      var buttons = {\n        add: function add(key) {\n          return React.createElement(ToolbarAddButton, {\n            key: \"add\",\n            onClick: handleAdd,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          });\n        },\n        copy: function copy(key) {\n          return React.createElement(ToolbarCopyButton, {\n            key: \"copy\",\n            data: _itemList,\n            onClick: onCopy,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          });\n        },\n        edit: function edit(key) {\n          return React.createElement(ToolbarEditButton, {\n            key: \"edit\",\n            onClick: handleEdit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          });\n        },\n        delete: function _delete(key) {\n          return React.createElement(ToolbarDeleteButton, {\n            key: \"delete\",\n            onClick: handleDelete,\n            title: \"Edit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          });\n        },\n        download: function download(key) {\n          return React.createElement(ToolbarDownloadButton, {\n            key: \"download\",\n            data: _itemList,\n            onClick: onDownload,\n            fileName: \"guru_download_\".concat(title, \".json\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          });\n        },\n        execute: function execute(key) {\n          return React.createElement(ToolbarExecuteButton, {\n            key: \"execute\",\n            onClick: handleExecute,\n            title: \"Execute\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          });\n        },\n        variables: function variables(key) {\n          return React.createElement(ToolbarVariablesButton, {\n            key: \"variables\",\n            onClick: handleVariables,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          });\n        },\n        views: function views(key) {\n          return React.createElement(ToolbarViewsButton, {\n            key: \"views\",\n            onClick: handleSwitchView,\n            currentView: currentView,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          });\n        }\n      };\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, toolbar.map(function (button) {\n        return typeof button === 'function' ? button({\n          handleSwitchView: handleSwitchView,\n          currentView: currentView,\n          handleAdd: handleAdd\n        }) : buttons[button] && buttons[button](button) || null;\n      }));\n    };\n  }, [handleSwitchView, handleSwitchView, currentView, handleAdd, onCopy, toolbar, handleDelete, handleEdit, handleVariables, handleExecute, onDownload, title, _itemList]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, toolbar.length > 0 ? React.createElement(Toolbar, {\n    items: selected,\n    onDeleteSelected: handleDeleteSelected,\n    onSwitchView: handleSwitchView,\n    selectToolbar: SelectToolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, toolbarContent) : null, React.createElement(Base, Object.assign({\n    el: \"table\",\n    className: classNames,\n    themed: themed\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }), caption ? React.createElement(TableCaption, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, caption) : null, React.createElement(TableView, {\n    dispatch: dispatchHook,\n    handleAdd: handleAdd,\n    handleDeleteSelected: handleDeleteSelected,\n    headings: _headings,\n    itemsToArray: itemsToArray,\n    loading: loading,\n    rows: _rows,\n    selected: selected,\n    tableName: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  })));\n});\n\nif (typeof Table !== 'undefined' && Table && Table === Object(Table) && Object.isExtensible(Table)) {\n  Object.defineProperty(Table, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Table\",\n      filename: \"src/Table/Table.js\"\n    }\n  });\n}\n\nTable.propTypes = {\n  caption: PropTypes.string,\n  className: PropTypes.node,\n  condensed: PropTypes.bool,\n  headings: PropTypes.node,\n  hook: PropTypes.func.isRequired,\n  hover: PropTypes.bool,\n  initialValue: PropTypes.object,\n  name: PropTypes.string,\n  onAdd: PropTypes.func,\n  onCopy: PropTypes.func,\n  onDelete: PropTypes.func,\n  onDeleteSelected: PropTypes.func,\n  onDownload: PropTypes.func,\n  onEdit: PropTypes.func,\n  onExecute: PropTypes.func,\n  rows: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  toolbar: PropTypes.arrayOf(PropTypes.string),\n  uid: PropTypes.string\n};\nTable.defaultProps = {\n  themed: []\n};\nvar _default = Table;\nexport default _default;\n\nif (typeof Table !== 'undefined' && Table && Table === Object(Table) && Object.isExtensible(Table)) {\n  Object.defineProperty(Table, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Table\",\n      filename: \"src/Table/Table.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(SelectedText, \"SelectedText\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/Table.js\");\n  reactHotLoader.register(Table, \"Table\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/Table.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/Table.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Table/Table.js"],"names":["React","Fragment","useEffect","useMemo","useReducer","useRef","styled","PropTypes","isEmpty","Base","JsonView","TableView","Toolbar","ToolbarAddButton","ToolbarCopyButton","ToolbarDeleteButton","ToolbarDownloadButton","ToolbarEditButton","ToolbarExecuteButton","ToolbarVariablesButton","ToolbarViewsButton","Typography","tableTheme","useCacheState","TableCaption","SelectedText","span","Table","memo","className","caption","headings","hook","initialValue","name","numbered","onAdd","onCopy","onDelete","onDeleteSelected","onDownload","onEdit","onExecute","rows","title","toolbar","propsThemed","themed","uid","propsRest","classNames","loading","selected","dispatchHook","dispatch","itemsToArray","_itemList","initialState","variables","itemList","reducer","state","actions","type","currentView","setCurrentView","showVariables","setShowVariables","variablesRef","_headings","_rows","handleAdd","e","preventDefault","handleDelete","handleDeleteSelected","result","window","confirm","join","handleEdit","handleExecute","variablesObj","current","JSON","parse","then","dispatchTable","handleSwitchView","id","handleVariables","handleVariablesChange","values","SelectToolbar","toolbarContent","buttons","add","key","copy","edit","delete","download","execute","views","map","button","length","propTypes","string","node","condensed","bool","func","isRequired","hover","object","arrayOf","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useMemo, useReducer, useRef } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport isEmpty from 'lodash/isEmpty'\n\nimport Base from '../Base/Base'\nimport { JsonView } from './JsonView'\nimport { TableView } from './TableView'\nimport { Toolbar } from '../Toolbar/Toolbar'\nimport { ToolbarAddButton } from '../Toolbar/ToolbarAddButton'\nimport { ToolbarCopyButton } from '../Toolbar/ToolbarCopyButton'\nimport { ToolbarDeleteButton } from '../Toolbar/ToolbarDeleteButton'\nimport { ToolbarDownloadButton } from '../Toolbar/ToolbarDownloadButton'\nimport { ToolbarEditButton } from '../Toolbar/ToolbarEditButton'\nimport { ToolbarExecuteButton } from '../Toolbar/ToolbarExecuteButton'\nimport { ToolbarVariablesButton } from '../Toolbar/ToolbarVariablesButton'\nimport { ToolbarViewsButton } from '../Toolbar/ToolbarViewsButton'\nimport { Typography } from '../Typography'\nimport { tableTheme } from './table.theme'\nimport { useCacheState } from '../reusable/cacheState'\nimport { TableCaption } from './TableCaption'\n\nconst SelectedText = styled.span`\n  display: inline-block;\n`\n\nexport const Table = React.memo(function Table({\n  className,\n  caption,\n  headings,\n  hook,\n  initialValue,\n  name,\n  numbered,\n  onAdd,\n  onCopy,\n  onDelete,\n  onDeleteSelected,\n  onDownload,\n  onEdit,\n  onExecute,\n  rows,\n  // selectedItems,\n  title,\n  toolbar = [],\n  themed: propsThemed,\n  uid,\n  ...propsRest\n}) {\n  const classNames = `Table ${className || ''}`\n  const themed = useMemo(() => [tableTheme, ...propsThemed], [\n    tableTheme,\n    propsThemed,\n  ])\n  const { loading, selected, dispatch: dispatchHook, itemsToArray } = hook()\n  const _itemList = useMemo(() => initialValue || itemsToArray(), [\n    initialValue,\n    itemsToArray,\n  ])\n\n  const initialState = {\n    variables: {},\n    itemList: [],\n  }\n\n  function reducer(state, actions) {\n    switch (actions.type) {\n      case 'SET_ITEM_LIST':\n        return { ...state, itemList: actions.itemList }\n      case 'SET_VARIABLES':\n        return { ...state, variables: actions.variables }\n      default:\n        return state\n    }\n  }\n  const [{ itemList }, dispatch] = useReducer(reducer, initialState)\n\n  const [currentView, setCurrentView] = useCacheState(`${uid}_Table`)\n  const [showVariables, setShowVariables] = useCacheState(\n    `${uid}_showVariables`,\n    false\n  )\n  const variablesRef = useRef('')\n\n  const _headings = useMemo(() => headings, [headings])\n  const _rows = typeof rows === 'function' ? rows(itemList) : rows\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_ITEM_LIST',\n      itemList: _itemList, // initialValue || _itemList,\n    })\n  }, [_itemList])\n\n  function handleAdd(e) {\n    e.preventDefault()\n    onAdd && onAdd(e)\n  }\n\n  function handleDelete(e) {\n    e.preventDefault()\n    onDelete && onDelete(e)\n  }\n\n  function handleDeleteSelected(e) {\n    const result = window.confirm(`Drop collections?\\n${selected.join('\\n')}`)\n\n    if (result) {\n      onDeleteSelected && onDeleteSelected(e)\n    }\n  }\n\n  function handleEdit(e) {\n    e.preventDefault()\n    onEdit && onEdit(e)\n  }\n\n  function handleExecute(e) {\n    const variablesObj = isEmpty(variablesRef.current)\n      ? {}\n      : JSON.parse(variablesRef.current)\n\n    onExecute(variablesObj).then(result => {\n      if (result) {\n        dispatchTable({\n          type: 'SET_ITEM_LIST',\n          itemList: result,\n        })\n      }\n    })\n  }\n\n  function handleSwitchView(e, { id }) {\n    e.preventDefault()\n    if (id !== currentView) {\n      setCurrentView(id)\n    }\n  }\n\n  function handleVariables(e) {\n    e.preventDefault()\n    setShowVariables(!showVariables)\n  }\n\n  function handleVariablesChange(values) {\n    variablesRef.current = values\n    // debounce(() => setVariables(values), 1000)()\n  }\n\n  const SelectToolbar = useMemo(\n    () => ({ selected, handleDeleteSelected }) => (\n      <div>\n        <SelectedText>{selected} selected </SelectedText>\n        <ToolbarDeleteButton\n          onClick={handleDeleteSelected}\n          title=\"Delete Collection\"\n        />\n      </div>\n    ),\n    [selected, handleDeleteSelected]\n  )\n\n  const toolbarContent = useMemo(\n    () => ({ handleSwitchView }) => {\n      const buttons = {\n        add: key => <ToolbarAddButton key=\"add\" onClick={handleAdd} />,\n        copy: key => (\n          <ToolbarCopyButton key=\"copy\" data={_itemList} onClick={onCopy} />\n        ),\n        edit: key => <ToolbarEditButton key=\"edit\" onClick={handleEdit} />,\n        delete: key => (\n          <ToolbarDeleteButton\n            key=\"delete\"\n            onClick={handleDelete}\n            title=\"Edit\"\n          />\n        ),\n        download: key => (\n          <ToolbarDownloadButton\n            key=\"download\"\n            data={_itemList}\n            onClick={onDownload}\n            fileName={`guru_download_${title}.json`}\n          />\n        ),\n        execute: key => (\n          <ToolbarExecuteButton\n            key=\"execute\"\n            onClick={handleExecute}\n            title=\"Execute\"\n          />\n        ),\n        variables: key => (\n          <ToolbarVariablesButton key=\"variables\" onClick={handleVariables} />\n        ),\n        views: key => (\n          <ToolbarViewsButton\n            key=\"views\"\n            onClick={handleSwitchView}\n            currentView={currentView}\n          />\n        ),\n      }\n      return (\n        <Fragment>\n          {toolbar.map(button => {\n            return typeof button === 'function'\n              ? button({ handleSwitchView, currentView, handleAdd })\n              : (buttons[button] && buttons[button](button)) || null\n          })}\n        </Fragment>\n      )\n    },\n    [\n      handleSwitchView,\n      handleSwitchView,\n      currentView,\n      handleAdd,\n      onCopy,\n      toolbar,\n      handleDelete,\n      handleEdit,\n      handleVariables,\n      handleExecute,\n      onDownload,\n      title,\n      _itemList,\n    ]\n  )\n\n  return (\n    <Fragment>\n      {toolbar.length > 0 ? (\n        <Toolbar\n          items={selected}\n          onDeleteSelected={handleDeleteSelected}\n          onSwitchView={handleSwitchView}\n          selectToolbar={SelectToolbar}>\n          {toolbarContent}\n        </Toolbar>\n      ) : null}\n      <Base el=\"table\" className={classNames} themed={themed} {...propsRest}>\n        {caption ? <TableCaption>{caption}</TableCaption> : null}\n        <TableView\n          dispatch={dispatchHook}\n          handleAdd={handleAdd}\n          handleDeleteSelected={handleDeleteSelected}\n          headings={_headings}\n          itemsToArray={itemsToArray}\n          loading={loading}\n          rows={_rows}\n          selected={selected}\n          tableName={name}\n        />\n      </Base>\n    </Fragment>\n  )\n})\n\nTable.propTypes = {\n  caption: PropTypes.string,\n  className: PropTypes.node,\n  condensed: PropTypes.bool,\n  headings: PropTypes.node,\n  hook: PropTypes.func.isRequired,\n  hover: PropTypes.bool,\n  initialValue: PropTypes.object,\n  name: PropTypes.string,\n  onAdd: PropTypes.func,\n  onCopy: PropTypes.func,\n  onDelete: PropTypes.func,\n  onDeleteSelected: PropTypes.func,\n  onDownload: PropTypes.func,\n  onEdit: PropTypes.func,\n  onExecute: PropTypes.func,\n  rows: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  toolbar: PropTypes.arrayOf(PropTypes.string),\n  uid: PropTypes.string,\n}\n\nTable.defaultProps = {\n  themed: [],\n}\n\nexport default Table\n"]},"metadata":{},"sourceType":"module"}