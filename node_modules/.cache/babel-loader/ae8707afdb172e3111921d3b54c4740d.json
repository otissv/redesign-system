{"ast":null,"code":"import _taggedTemplateLiteral from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarViewsButton.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-left: auto;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { ListAlt } from '../MaterialIcons/ListAlt';\nimport { Code } from '../MaterialIcons/Code';\nimport ButtonIcon from '../ButtonIcon/ButtonIcon';\nvar ToolbarViewsContainer = styled.div(_templateObject());\nexport var ToolbarViewsButton = React.memo(function ToolbarViewsButton(_ref) {\n  var currentView = _ref.currentView,\n      onClick = _ref.onClick;\n\n  function handleClick(e) {\n    e.preventDefault();\n    onClick && onClick(e);\n  }\n\n  var selectedStyle = useCallback(function (view) {\n    return currentView === view ? 'border-bottom: 1px solid #fff;' : '';\n  }, [currentView]);\n  var ComponentListAlt = useMemo(function () {\n    return ListAlt;\n  }, [ListAlt]);\n  var ComponentCode = useMemo(function () {\n    return Code;\n  }, [Code]);\n  return React.createElement(ToolbarViewsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ButtonIcon, {\n    icon: ComponentListAlt,\n    onClick: handleClick,\n    styled: selectedStyle('table'),\n    title: \"Table\",\n    uid: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(ButtonIcon, {\n    icon: ComponentCode,\n    onClick: handleClick,\n    styled: selectedStyle('json'),\n    title: \"JSON\",\n    uid: \"json\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n});\n\nif (typeof ToolbarViewsButton !== 'undefined' && ToolbarViewsButton && ToolbarViewsButton === Object(ToolbarViewsButton) && Object.isExtensible(ToolbarViewsButton)) {\n  Object.defineProperty(ToolbarViewsButton, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"ToolbarViewsButton\",\n      filename: \"src/Table/ToolbarViewsButton.js\"\n    }\n  });\n}\n\nvar _default = ToolbarViewsButton;\nexport default _default;\n\nif (typeof ToolbarViewsButton !== 'undefined' && ToolbarViewsButton && ToolbarViewsButton === Object(ToolbarViewsButton) && Object.isExtensible(ToolbarViewsButton)) {\n  Object.defineProperty(ToolbarViewsButton, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"ToolbarViewsButton\",\n      filename: \"src/Table/ToolbarViewsButton.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ToolbarViewsContainer, \"ToolbarViewsContainer\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarViewsButton.js\");\n  reactHotLoader.register(ToolbarViewsButton, \"ToolbarViewsButton\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarViewsButton.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarViewsButton.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarViewsButton.js"],"names":["React","useCallback","useMemo","styled","ListAlt","Code","ButtonIcon","ToolbarViewsContainer","div","ToolbarViewsButton","memo","currentView","onClick","handleClick","e","preventDefault","selectedStyle","view","ComponentListAlt","ComponentCode"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,IAAMC,qBAAqB,GAAGJ,MAAM,CAACK,GAAV,mBAA3B;AAKA,OAAO,IAAMC,kBAAkB,GAAGT,KAAK,CAACU,IAAN,CAAW,SAASD,kBAAT,OAG1C;AAAA,MAFDE,WAEC,QAFDA,WAEC;AAAA,MADDC,OACC,QADDA,OACC;;AACD,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,OAAO,IAAIA,OAAO,CAACE,CAAD,CAAlB;AACD;;AAED,MAAME,aAAa,GAAGf,WAAW,CAC/B,UAAAgB,IAAI;AAAA,WAAKN,WAAW,KAAKM,IAAhB,GAAuB,gCAAvB,GAA0D,EAA/D;AAAA,GAD2B,EAE/B,CAACN,WAAD,CAF+B,CAAjC;AAKA,MAAMO,gBAAgB,GAAGhB,OAAO,CAAC;AAAA,WAAME,OAAN;AAAA,GAAD,EAAgB,CAACA,OAAD,CAAhB,CAAhC;AACA,MAAMe,aAAa,GAAGjB,OAAO,CAAC;AAAA,WAAMG,IAAN;AAAA,GAAD,EAAa,CAACA,IAAD,CAAb,CAA7B;AAEA,SACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEa,gBADR;AAEE,IAAA,OAAO,EAAEL,WAFX;AAGE,IAAA,MAAM,EAAEG,aAAa,CAAC,OAAD,CAHvB;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,GAAG,EAAC,OALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEG,aADR;AAEE,IAAA,OAAO,EAAEN,WAFX;AAGE,IAAA,MAAM,EAAEG,aAAa,CAAC,MAAD,CAHvB;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,GAAG,EAAC,MALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAkBD,CAnCiC,CAA3B;;;;;;;;;;;;;eAqCQP,kB;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA1CMF,qB;0BAKOE,kB","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { ListAlt } from '../MaterialIcons/ListAlt'\nimport { Code } from '../MaterialIcons/Code'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\n\nconst ToolbarViewsContainer = styled.div`\n  display: flex;\n  margin-left: auto;\n`\n\nexport const ToolbarViewsButton = React.memo(function ToolbarViewsButton({\n  currentView,\n  onClick,\n}) {\n  function handleClick(e) {\n    e.preventDefault()\n    onClick && onClick(e)\n  }\n\n  const selectedStyle = useCallback(\n    view => (currentView === view ? 'border-bottom: 1px solid #fff;' : ''),\n    [currentView]\n  )\n\n  const ComponentListAlt = useMemo(() => ListAlt, [ListAlt])\n  const ComponentCode = useMemo(() => Code, [Code])\n\n  return (\n    <ToolbarViewsContainer>\n      <ButtonIcon\n        icon={ComponentListAlt}\n        onClick={handleClick}\n        styled={selectedStyle('table')}\n        title=\"Table\"\n        uid=\"table\"\n      />\n      <ButtonIcon\n        icon={ComponentCode}\n        onClick={handleClick}\n        styled={selectedStyle('json')}\n        title=\"JSON\"\n        uid=\"json\"\n      />\n    </ToolbarViewsContainer>\n  )\n})\n\nexport default ToolbarViewsButton\n"]},"metadata":{},"sourceType":"module"}