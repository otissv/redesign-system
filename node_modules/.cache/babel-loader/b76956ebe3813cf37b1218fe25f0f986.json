{"ast":null,"code":"import _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Container/Container.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { containerContextTheme } from './container.theme';\nimport Base from '../Base/Base';\nexport var Container = React.memo(function Container(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      propsThemed = _ref.themed,\n      propsRest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"themed\"]);\n\n  var classNames = \"Container \".concat(className || '');\n  var themed = useMemo(function () {\n    return [containerContextTheme].concat(_toConsumableArray(propsThemed));\n  }, [containerContextTheme, propsThemed]);\n  return React.createElement(Base, Object.assign({\n    className: classNames,\n    themed: themed\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), children);\n});\n\nif (typeof Container !== 'undefined' && Container && Container === Object(Container) && Object.isExtensible(Container)) {\n  Object.defineProperty(Container, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Container\",\n      filename: \"src/Container/Container.js\"\n    }\n  });\n}\n\nContainer.defaultProps = {\n  themed: []\n};\nContainer.propTypes = {\n  children: PropTypes.node,\n  css: PropTypes.string,\n  themed: PropTypes.array,\n  context: PropTypes.oneOf(['accent', 'primary', 'success', 'warning', 'danger'])\n};\nvar _default = Container;\nexport default _default;\n\nif (typeof Container !== 'undefined' && Container && Container === Object(Container) && Object.isExtensible(Container)) {\n  Object.defineProperty(Container, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Container\",\n      filename: \"src/Container/Container.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Container, \"Container\", \"/mnt/Storage/Projects/themed-styled-components/src/Container/Container.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Container/Container.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Container/Container.js"],"names":["React","useMemo","styled","PropTypes","containerContextTheme","Base","Container","memo","children","className","propsThemed","themed","propsRest","classNames","defaultProps","propTypes","node","css","string","array","context","oneOf"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,OAAO,IAAMC,SAAS,GAAGN,KAAK,CAACO,IAAN,CAAW,SAASD,SAAT,OAKjC;AAAA,MAJDE,QAIC,QAJDA,QAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFOC,WAEP,QAFDC,MAEC;AAAA,MADEC,SACF;;AACD,MAAMC,UAAU,uBAAgBJ,SAAS,IAAI,EAA7B,CAAhB;AACA,MAAME,MAAM,GAAGV,OAAO,CAAC;AAAA,YAAOG,qBAAP,4BAAiCM,WAAjC;AAAA,GAAD,EAAgD,CACpEN,qBADoE,EAEpEM,WAFoE,CAAhD,CAAtB;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEG,UAAjB;AAA6B,IAAA,MAAM,EAAEF;AAArC,KAAiDC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,QADH,CADF;AAKD,CAjBwB,CAAlB;;;;;;;;;;;;;AAmBPF,SAAS,CAACQ,YAAV,GAAyB;AACvBH,EAAAA,MAAM,EAAE;AADe,CAAzB;AAIAL,SAAS,CAACS,SAAV,GAAsB;AACpBP,EAAAA,QAAQ,EAAEL,SAAS,CAACa,IADA;AAEpBC,EAAAA,GAAG,EAAEd,SAAS,CAACe,MAFK;AAGpBP,EAAAA,MAAM,EAAER,SAAS,CAACgB,KAHE;AAIpBC,EAAAA,OAAO,EAAEjB,SAAS,CAACkB,KAAV,CAAgB,CACvB,QADuB,EAEvB,SAFuB,EAGvB,SAHuB,EAIvB,SAJuB,EAKvB,QALuB,CAAhB;AAJW,CAAtB;eAaef,S;AAAf;;;;;;;;;;;;;;;;;;;;;;0BApCaA,S","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport { containerContextTheme } from './container.theme'\nimport Base from '../Base/Base'\n\nexport const Container = React.memo(function Container({\n  children,\n  className,\n  themed: propsThemed,\n  ...propsRest\n}) {\n  const classNames = `Container ${className || ''}`\n  const themed = useMemo(() => [containerContextTheme, ...propsThemed], [\n    containerContextTheme,\n    propsThemed,\n  ])\n\n  return (\n    <Base className={classNames} themed={themed} {...propsRest}>\n      {children}\n    </Base>\n  )\n})\n\nContainer.defaultProps = {\n  themed: [],\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n  css: PropTypes.string,\n  themed: PropTypes.array,\n  context: PropTypes.oneOf([\n    'accent',\n    'primary',\n    'success',\n    'warning',\n    'danger',\n  ]),\n}\n\nexport default Container\n"]},"metadata":{},"sourceType":"module"}