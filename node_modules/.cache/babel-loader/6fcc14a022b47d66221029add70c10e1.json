{"ast":null,"code":"import _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarExecuteButton.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useMemo } from 'react';\nimport ButtonIcon from '../ButtonIcon/ButtonIcon';\nimport { PlayCircle } from '../MaterialIcons/PlayCircle';\nexport var ToolbarExecuteButton = React.memo(function ToolbarExecuteButton(_ref) {\n  var onClick = _ref.onClick,\n      propsRest = _objectWithoutProperties(_ref, [\"onClick\"]);\n\n  function handleClick(e) {\n    e.preventDefault();\n    onClick && onClick(e);\n  }\n\n  var icon = useMemo(function () {\n    return PlayCircle;\n  }, [PlayCircle]);\n  return React.createElement(ButtonIcon, Object.assign({\n    uid: \"execute\",\n    onClick: handleClick,\n    icon: icon\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n});\n\nif (typeof ToolbarExecuteButton !== 'undefined' && ToolbarExecuteButton && ToolbarExecuteButton === Object(ToolbarExecuteButton) && Object.isExtensible(ToolbarExecuteButton)) {\n  Object.defineProperty(ToolbarExecuteButton, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"ToolbarExecuteButton\",\n      filename: \"src/Table/ToolbarExecuteButton.js\"\n    }\n  });\n}\n\nvar _default = ToolbarExecuteButton;\nexport default _default;\n\nif (typeof ToolbarExecuteButton !== 'undefined' && ToolbarExecuteButton && ToolbarExecuteButton === Object(ToolbarExecuteButton) && Object.isExtensible(ToolbarExecuteButton)) {\n  Object.defineProperty(ToolbarExecuteButton, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"ToolbarExecuteButton\",\n      filename: \"src/Table/ToolbarExecuteButton.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ToolbarExecuteButton, \"ToolbarExecuteButton\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarExecuteButton.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarExecuteButton.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarExecuteButton.js"],"names":["React","useMemo","ButtonIcon","PlayCircle","ToolbarExecuteButton","memo","onClick","propsRest","handleClick","e","preventDefault","icon"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,OAAO,IAAMC,oBAAoB,GAAGJ,KAAK,CAACK,IAAN,CAAW,SAASD,oBAAT,OAG5C;AAAA,MAFDE,OAEC,QAFDA,OAEC;AAAA,MADEC,SACF;;AACD,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,OAAO,IAAIA,OAAO,CAACG,CAAD,CAAlB;AACD;;AAED,MAAME,IAAI,GAAGV,OAAO,CAAC;AAAA,WAAME,UAAN;AAAA,GAAD,EAAmB,CAACA,UAAD,CAAnB,CAApB;AAEA,SACE,oBAAC,UAAD;AACE,IAAA,GAAG,EAAC,SADN;AAEE,IAAA,OAAO,EAAEK,WAFX;AAGE,IAAA,IAAI,EAAEG;AAHR,KAIMJ,SAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CAnBmC,CAA7B;;;;;;;;;;;;;eAqBQH,oB;AAAf;;;;;;;;;;;;;;;;;;;;;;0BArBaA,oB","sourcesContent":["import React, { useMemo } from 'react'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\n\nimport { PlayCircle } from '../MaterialIcons/PlayCircle'\n\nexport const ToolbarExecuteButton = React.memo(function ToolbarExecuteButton({\n  onClick,\n  ...propsRest\n}) {\n  function handleClick(e) {\n    e.preventDefault()\n    onClick && onClick(e)\n  }\n\n  const icon = useMemo(() => PlayCircle, [PlayCircle])\n\n  return (\n    <ButtonIcon\n      uid=\"execute\"\n      onClick={handleClick}\n      icon={icon}\n      {...propsRest}\n    />\n  )\n})\n\nexport default ToolbarExecuteButton\n"]},"metadata":{},"sourceType":"module"}