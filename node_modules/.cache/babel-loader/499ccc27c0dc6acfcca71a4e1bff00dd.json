{"ast":null,"code":"import _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Notify/Notify.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Notifications } from './Notifications';\nimport difference from 'lodash/difference';\nimport cuid from 'cuid';\nexport var NotifyContext = React.createContext();\n\nif (typeof NotifyContext !== 'undefined' && NotifyContext && NotifyContext === Object(NotifyContext) && Object.isExtensible(NotifyContext)) {\n  Object.defineProperty(NotifyContext, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"NotifyContext\",\n      filename: \"src/Notify/Notify.js\"\n    }\n  });\n}\n\nexport var Notify = function Notify(_ref) {\n  var children = _ref.children,\n      messages = _ref.messages,\n      timeout = _ref.timeout,\n      themed = _ref.themed,\n      propsRest = _objectWithoutProperties(_ref, [\"children\", \"messages\", \"timeout\", \"themed\"]);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notifications = _useState2[0],\n      setNotifications = _useState2[1];\n\n  var newNotificationsRef = useRef([]);\n  useEffect(function () {\n    var _notification = children.map(function (child) {\n      console.log(child);\n      return {\n        id: child.key,\n        component: child,\n        sticky: child.sticky\n      };\n    });\n\n    newNotificationsRef.current = difference(_notification, notifications);\n    setNotifications([].concat(_toConsumableArray(notifications), _toConsumableArray(newNotificationsRef.current)));\n  }, [children]);\n  useEffect(function () {\n    var removeNotificationWithTimeout = function removeNotificationWithTimeout() {\n      setNotifications(notifications.filter(function (notification) {\n        return !newNotificationsRef.current.filter(function (n) {\n          return n.id === notification.id && !notification.sticky;\n        });\n      }));\n    };\n\n    setTimeout(removeNotificationWithTimeout, timeout);\n    return function () {\n      clearTimeout(removeNotificationWithTimeout);\n    };\n  }, [newNotificationsRef.current, timeout]);\n  var context = useMemo(function () {\n    return {\n      notifications: notifications,\n      setNotifications: setNotifications\n    };\n  }, [notifications]);\n  return React.createElement(NotifyContext.Provider, {\n    const: true,\n    value: context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Notifications, Object.assign({\n    themed: themed,\n    notification: notifications\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })));\n};\n\nif (typeof Notify !== 'undefined' && Notify && Notify === Object(Notify) && Object.isExtensible(Notify)) {\n  Object.defineProperty(Notify, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Notify\",\n      filename: \"src/Notify/Notify.js\"\n    }\n  });\n}\n\nNotify.propTypes = {\n  messages: PropTypes.array,\n  timeout: PropTypes.number\n};\nNotify.defaultProps = {\n  messages: [],\n  timeout: 10000,\n  themed: []\n};\nvar _default = Notify;\nexport default _default;\n\nif (typeof Notify !== 'undefined' && Notify && Notify === Object(Notify) && Object.isExtensible(Notify)) {\n  Object.defineProperty(Notify, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Notify\",\n      filename: \"src/Notify/Notify.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(NotifyContext, \"NotifyContext\", \"/mnt/Storage/Projects/themed-styled-components/src/Notify/Notify.js\");\n  reactHotLoader.register(Notify, \"Notify\", \"/mnt/Storage/Projects/themed-styled-components/src/Notify/Notify.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Notify/Notify.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Notify/Notify.js"],"names":["React","useContext","useEffect","useMemo","useRef","useState","PropTypes","styled","Notifications","difference","cuid","NotifyContext","createContext","Notify","children","messages","timeout","themed","propsRest","notifications","setNotifications","newNotificationsRef","_notification","map","child","console","log","id","key","component","sticky","current","removeNotificationWithTimeout","filter","notification","n","setTimeout","clearTimeout","context","propTypes","array","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Notifications } from './Notifications'\nimport difference from 'lodash/difference'\nimport cuid from 'cuid'\n\nexport const NotifyContext = React.createContext()\n\nexport const Notify = function Notify({\n  children,\n  messages,\n  timeout,\n  themed,\n  ...propsRest\n}) {\n  const [notifications, setNotifications] = useState([])\n  const newNotificationsRef = useRef([])\n\n  useEffect(() => {\n    const _notification = children.map(child => {\n      console.log(child)\n      return {\n        id: child.key,\n        component: child,\n        sticky: child.sticky,\n      }\n    })\n\n    newNotificationsRef.current = difference(_notification, notifications)\n    setNotifications([...notifications, ...newNotificationsRef.current])\n  }, [children])\n\n  useEffect(() => {\n    const removeNotificationWithTimeout = () => {\n      setNotifications(\n        notifications.filter(notification => {\n          return !newNotificationsRef.current.filter(\n            n => n.id === notification.id && !notification.sticky\n          )\n        })\n      )\n    }\n\n    setTimeout(removeNotificationWithTimeout, timeout)\n\n    return () => {\n      clearTimeout(removeNotificationWithTimeout)\n    }\n  }, [newNotificationsRef.current, timeout])\n\n  const context = useMemo(\n    () => ({\n      notifications,\n      setNotifications,\n    }),\n    [notifications]\n  )\n\n  return (\n    <NotifyContext.Provider const value={context}>\n      <Notifications\n        themed={themed}\n        notification={notifications}\n        {...propsRest}\n      />\n    </NotifyContext.Provider>\n  )\n}\n\nNotify.propTypes = {\n  messages: PropTypes.array,\n  timeout: PropTypes.number,\n}\n\nNotify.defaultProps = {\n  messages: [],\n  timeout: 10000,\n  themed: [],\n}\n\nexport default Notify\n"]},"metadata":{},"sourceType":"module"}