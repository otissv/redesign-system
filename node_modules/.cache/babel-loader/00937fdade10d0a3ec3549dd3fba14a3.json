{"ast":null,"code":"import _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Notify/Notifications.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport posed, { PoseGroup } from 'react-pose';\nimport { Close } from '../MaterialIcons/Close';\nimport Base from '../Base/Base';\nimport ButtonIcon from '../ButtonIcon/ButtonIcon';\nimport { Portal } from '../Portal';\nimport { notifyTheme, notifyPositionTheme, notifyNotificationTheme } from './notify.theme';\n\nfunction NotificationCloseButton(_ref) {\n  var onClose = _ref.onClose,\n      uid = _ref.uid;\n  return React.createElement(Base, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(ButtonIcon, {\n    onClick: onClose,\n    \"data-uid\": uid,\n    icon: Close,\n    title: \"Close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n}\n\nexport var Notifications = React.memo(function Notifications(_ref2) {\n  var animate = _ref2.animate,\n      children = _ref2.children,\n      className = _ref2.className,\n      notification = _ref2.notification,\n      onClose = _ref2.onClose,\n      propsThemed = _ref2.themed,\n      propsRest = _objectWithoutProperties(_ref2, [\"animate\", \"children\", \"className\", \"notification\", \"onClose\", \"themed\"]);\n\n  var classNames = \"Notifications \".concat(className || '');\n  var themed = useMemo(function () {\n    return [notifyTheme, notifyPositionTheme].concat(_toConsumableArray(propsThemed));\n  }, [notifyTheme, notifyPositionTheme, propsThemed]);\n  var themedNotification = useMemo(function () {\n    return [notifyNotificationTheme];\n  }, [notifyNotificationTheme]);\n  var rootRef = useRef(document.getElementsByTagName('body')[0]);\n\n  var _animate = useMemo(function () {\n    return animate || {\n      enter: {\n        y: 0,\n        transition: {\n          y: {\n            type: 'spring',\n            stiffness: 1000,\n            damping: 100\n          },\n          default: {\n            duration: 300\n          }\n        }\n      },\n      exit: {\n        y: -500,\n        transition: {\n          duration: 300\n        }\n      }\n    };\n  }, [animate]);\n\n  var items = notification.map(function (_ref3) {\n    var id = _ref3.id,\n        component = _ref3.component;\n    return React.createElement(Base, {\n      key: id,\n      themed: themedNotification,\n      animate: _animate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, component, React.createElement(NotificationCloseButton, {\n      onClose: onClose,\n      uid: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }).reverse();\n  return React.createElement(Portal, {\n    rootRef: rootRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Base, Object.assign({\n    className: classNames,\n    element: \"ul\",\n    themed: themed\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(PoseGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, items)));\n});\n\nif (typeof Notifications !== 'undefined' && Notifications && Notifications === Object(Notifications) && Object.isExtensible(Notifications)) {\n  Object.defineProperty(Notifications, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Notifications\",\n      filename: \"src/Notify/Notifications.js\"\n    }\n  });\n}\n\nNotifications.defaultProps = {\n  themed: []\n};\nNotifications.propTypes = {\n  children: PropTypes.any,\n  classes: PropTypes.array,\n  className: PropTypes.string,\n  items: PropTypes.object,\n  uid: PropTypes.string,\n  position: PropTypes.oneOf(['bottom-center', 'bottom-left', 'bottom-right', 'top-center', 'top-left', 'top-right']),\n  messages: PropTypes.array,\n  themed: PropTypes.array\n};\nvar _default = Notifications;\nexport default _default;\n\nif (typeof Notifications !== 'undefined' && Notifications && Notifications === Object(Notifications) && Object.isExtensible(Notifications)) {\n  Object.defineProperty(Notifications, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Notifications\",\n      filename: \"src/Notify/Notifications.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(NotificationCloseButton, \"NotificationCloseButton\", \"/mnt/Storage/Projects/themed-styled-components/src/Notify/Notifications.js\");\n  reactHotLoader.register(Notifications, \"Notifications\", \"/mnt/Storage/Projects/themed-styled-components/src/Notify/Notifications.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Notify/Notifications.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Notify/Notifications.js"],"names":["React","useEffect","useMemo","useRef","useState","ReactDOM","styled","PropTypes","posed","PoseGroup","Close","Base","ButtonIcon","Portal","notifyTheme","notifyPositionTheme","notifyNotificationTheme","NotificationCloseButton","onClose","uid","Notifications","memo","animate","children","className","notification","propsThemed","themed","propsRest","classNames","themedNotification","rootRef","document","getElementsByTagName","_animate","enter","y","transition","type","stiffness","damping","default","duration","exit","items","map","id","component","reverse","defaultProps","propTypes","any","classes","array","string","object","position","oneOf","messages"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport posed, { PoseGroup } from 'react-pose'\n\nimport { Close } from '../MaterialIcons/Close'\nimport Base from '../Base/Base'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\nimport { Portal } from '../Portal'\n\nimport {\n  notifyTheme,\n  notifyPositionTheme,\n  notifyNotificationTheme,\n} from './notify.theme'\n\nfunction NotificationCloseButton({ onClose, uid }) {\n  return (\n    <Base>\n      <ButtonIcon onClick={onClose} data-uid={uid} icon={Close} title=\"Close\" />\n    </Base>\n  )\n}\n\nexport const Notifications = React.memo(function Notifications({\n  animate,\n  children,\n  className,\n  notification,\n  onClose,\n  themed: propsThemed,\n  ...propsRest\n}) {\n  const classNames = `Notifications ${className || ''}`\n  const themed = useMemo(\n    () => [notifyTheme, notifyPositionTheme, ...propsThemed],\n    [notifyTheme, notifyPositionTheme, propsThemed]\n  )\n  const themedNotification = useMemo(() => [notifyNotificationTheme], [\n    notifyNotificationTheme,\n  ])\n\n  const rootRef = useRef(document.getElementsByTagName('body')[0])\n\n  const _animate = useMemo(() => {\n    return (\n      animate || {\n        enter: {\n          y: 0,\n          transition: {\n            y: { type: 'spring', stiffness: 1000, damping: 100 },\n            default: { duration: 300 },\n          },\n        },\n        exit: {\n          y: -500,\n          transition: { duration: 300 },\n        },\n      }\n    )\n  }, [animate])\n\n  const items = notification\n    .map(({ id, component }) => {\n      return (\n        <Base key={id} themed={themedNotification} animate={_animate}>\n          {component}\n          <NotificationCloseButton onClose={onClose} uid={id} />\n        </Base>\n      )\n    })\n    .reverse()\n\n  return (\n    <Portal rootRef={rootRef}>\n      <Base className={classNames} element=\"ul\" themed={themed} {...propsRest}>\n        <PoseGroup>{items}</PoseGroup>\n      </Base>\n    </Portal>\n  )\n})\n\nNotifications.defaultProps = {\n  themed: [],\n}\n\nNotifications.propTypes = {\n  children: PropTypes.any,\n  classes: PropTypes.array,\n  className: PropTypes.string,\n  items: PropTypes.object,\n  uid: PropTypes.string,\n  position: PropTypes.oneOf([\n    'bottom-center',\n    'bottom-left',\n    'bottom-right',\n    'top-center',\n    'top-left',\n    'top-right',\n  ]),\n  messages: PropTypes.array,\n  themed: PropTypes.array,\n}\n\nexport default Notifications\n"]},"metadata":{},"sourceType":"module"}