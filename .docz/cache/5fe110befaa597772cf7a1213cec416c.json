{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/theme/borders/border.theme.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/theme/borders/border.theme.js","mtime":1556308712132},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvdGhlbWVkLXN0eWxlZC1jb21wb25lbnRzL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9tbnQvU3RvcmFnZS9Qcm9qZWN0cy90aGVtZWQtc3R5bGVkLWNvbXBvbmVudHMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7CgppbXBvcnQgdXBwZXJGaXJzdCBmcm9tICdsb2Rhc2gvZnAvdXBwZXJGaXJzdCc7CmltcG9ydCB7IGJhc2VEZWZhdWx0cyB9IGZyb20gJy4uLy4uL3V0aWxzJzsKaW1wb3J0IG1lcmdlIGZyb20gJ2xvZGFzaC9mcC9tZXJnZSc7CmltcG9ydCBjYW1lbENhc2UgZnJvbSAnbG9kYXNoL2NhbWVsQ2FzZSc7CmV4cG9ydCBmdW5jdGlvbiBib3JkZXJUaGVtZSgpIHsKICB2YXIgX3JlZiA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogYmFzZURlZmF1bHRzLAogICAgICBib3JkZXIgPSBfcmVmLmJvcmRlciwKICAgICAgY29sb3IgPSBfcmVmLmNvbG9yOwoKICB2YXIgc3R5bGUgPSAnc29saWQnOwogIHZhciBkYXNoID0gJ2Rhc2hlZCc7CiAgdmFyIHRoaWNrV2lkdGggPSAnMnB4JzsKICB2YXIgdGhpY2tDb2xvciA9IGNvbG9yWydncmV5LTcwMCddOwogIHZhciB0aGluV2lkdGggPSAnMXB4JzsKICB2YXIgdGhpbkNvbG9yID0gY29sb3JbJ2dyZXktNzAwJ107CgogIHZhciBkZWZhdWx0cyA9IF9vYmplY3RTcHJlYWQoewogICAgbm9uZTogJ25vbmUnLAogICAgc3R5bGU6IHN0eWxlLAogICAgZGFzaDogZGFzaCwKICAgIHRoaWNrV2lkdGg6IHRoaWNrV2lkdGgsCiAgICB0aGlja0NvbG9yOiB0aGlja0NvbG9yLAogICAgdGhpbldpZHRoOiB0aGluV2lkdGgsCiAgICB0aGluQ29sb3I6IHRoaW5Db2xvciwKICAgIC8vIHRoaWNrCiAgICB0aGljazogIiIuY29uY2F0KHRoaWNrV2lkdGgsICIgIikuY29uY2F0KHN0eWxlLCAiICIpLmNvbmNhdCh0aGlja0NvbG9yKSwKICAgIHRoaWNrSW52ZXJ0OiAiIi5jb25jYXQodGhpY2tXaWR0aCwgIiAiKS5jb25jYXQoc3R5bGUsICIgIikuY29uY2F0KHRoaWNrQ29sb3IpLAogICAgdGhpY2tEYXNoZWQ6ICIiLmNvbmNhdCh0aGlja1dpZHRoLCAiICIpLmNvbmNhdChkYXNoLCAiICIpLmNvbmNhdCh0aGlja0NvbG9yKSwKICAgIHRoaWNrRGFzaGVkSW52ZXJ0OiAiIi5jb25jYXQodGhpY2tXaWR0aCwgIiAiKS5jb25jYXQoZGFzaCwgIiAiKS5jb25jYXQodGhpY2tDb2xvciksCiAgICB0aGlja1RyYW5zcGFyZW50OiAiIi5jb25jYXQodGhpY2tXaWR0aCwgIiAiKS5jb25jYXQoc3R5bGUsICIgcmdiYSgwLCAwLCAwLCAwKTsiKSwKICAgIC8vIHRoaW4KICAgIHRoaW46ICIiLmNvbmNhdCh0aGluV2lkdGgsICIgIikuY29uY2F0KHN0eWxlLCAiICIpLmNvbmNhdCh0aGluQ29sb3IpLAogICAgdGhpbkRhc2hlZDogIiIuY29uY2F0KHRoaW5XaWR0aCwgIiAiKS5jb25jYXQoZGFzaCwgIiAgIikuY29uY2F0KHRoaW5Db2xvciksCiAgICB0aGluRGFzaGVkSW52ZXJ0OiAiIi5jb25jYXQodGhpbldpZHRoLCAiICIpLmNvbmNhdChkYXNoLCAiICAiKS5jb25jYXQodGhpbkNvbG9yKSwKICAgIHRoaW5JbnZlcnQ6ICIiLmNvbmNhdCh0aGluV2lkdGgsICIgIikuY29uY2F0KHN0eWxlLCAiICIpLmNvbmNhdCh0aGluQ29sb3IpLAogICAgdGhpblRyYW5zcGFyZW50OiAiIi5jb25jYXQodGhpbldpZHRoLCAiICIpLmNvbmNhdChzdHlsZSwgIiByZ2JhKDAsIDAsIDAsIDApOyIpCiAgfSwgT2JqZWN0LmtleXMoY29sb3IpLnJlZHVjZShmdW5jdGlvbiAocHJldmlvdXMsIGtleSkgewogICAgdmFyIF9vYmplY3RTcHJlYWQyOwoKICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBwcmV2aW91cywgKF9vYmplY3RTcHJlYWQyID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfb2JqZWN0U3ByZWFkMiwga2V5LCBjb2xvcltrZXldKSwgX2RlZmluZVByb3BlcnR5KF9vYmplY3RTcHJlYWQyLCAiIi5jb25jYXQoY2FtZWxDYXNlKCJ0aGljayIuY29uY2F0KHVwcGVyRmlyc3Qoa2V5KSkpKSwgIiIuY29uY2F0KHRoaWNrV2lkdGgsICIgIikuY29uY2F0KHN0eWxlLCAiICIpLmNvbmNhdChjb2xvcltrZXldKSksIF9kZWZpbmVQcm9wZXJ0eShfb2JqZWN0U3ByZWFkMiwgIiIuY29uY2F0KGNhbWVsQ2FzZSgidGhpbiIuY29uY2F0KHVwcGVyRmlyc3Qoa2V5KSkpKSwgIiIuY29uY2F0KHRoaW5XaWR0aCwgIiAiKS5jb25jYXQoc3R5bGUsICIgIikuY29uY2F0KGNvbG9yW2tleV0pKSwgX2RlZmluZVByb3BlcnR5KF9vYmplY3RTcHJlYWQyLCAiIi5jb25jYXQoY2FtZWxDYXNlKCJ0aGlja0Rhc2hlZCIuY29uY2F0KHVwcGVyRmlyc3Qoa2V5KSkpKSwgIiIuY29uY2F0KHRoaWNrV2lkdGgsICIgIikuY29uY2F0KGRhc2gsICIgIikuY29uY2F0KGNvbG9yW2tleV0pKSwgX2RlZmluZVByb3BlcnR5KF9vYmplY3RTcHJlYWQyLCAiIi5jb25jYXQoY2FtZWxDYXNlKCJ0aGluRGFzaGVkIi5jb25jYXQodXBwZXJGaXJzdChrZXkpKSkpLCAiIi5jb25jYXQodGhpbldpZHRoLCAiICIpLmNvbmNhdChkYXNoLCAiICIpLmNvbmNhdChjb2xvcltrZXldKSksIF9vYmplY3RTcHJlYWQyKSk7CiAgfSwge30pKTsKCiAgcmV0dXJuIG1lcmdlKGJvcmRlcikoZGVmYXVsdHMpOwp9CgppZiAodHlwZW9mIGJvcmRlclRoZW1lICE9PSAndW5kZWZpbmVkJyAmJiBib3JkZXJUaGVtZSAmJiBib3JkZXJUaGVtZSA9PT0gT2JqZWN0KGJvcmRlclRoZW1lKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKGJvcmRlclRoZW1lKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShib3JkZXJUaGVtZSwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogImJvcmRlclRoZW1lIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvdGhlbWUvYm9yZGVycy9ib3JkZXIudGhlbWUuanMiCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoYm9yZGVyVGhlbWUsICJib3JkZXJUaGVtZSIsICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvdGhlbWVkLXN0eWxlZC1jb21wb25lbnRzL3NyYy90aGVtZS9ib3JkZXJzL2JvcmRlci50aGVtZS5qcyIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/theme/borders/border.theme.js"],"names":["upperFirst","baseDefaults","merge","camelCase","borderTheme","border","color","style","dash","thickWidth","thickColor","thinWidth","thinColor","defaults","none","thick","thickInvert","thickDashed","thickDashedInvert","thickTransparent","thin","thinDashed","thinDashedInvert","thinInvert","thinTransparent","Object","keys","reduce","previous","key"],"mappings":";;;;;;;;AAAA,OAAOA,UAAP,MAAuB,sBAAvB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,OAAO,SAASC,WAAT,GAAuD;AAAA,iFAAdH,YAAc;AAAA,MAAhCI,MAAgC,QAAhCA,MAAgC;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;;AAC5D,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,IAAI,GAAG,QAAb;AACA,MAAMC,UAAU,GAAG,KAAnB;AACA,MAAMC,UAAU,GAAGJ,KAAK,CAAC,UAAD,CAAxB;AACA,MAAMK,SAAS,GAAG,KAAlB;AACA,MAAMC,SAAS,GAAGN,KAAK,CAAC,UAAD,CAAvB;;AAEA,MAAMO,QAAQ;AACZC,IAAAA,IAAI,EAAE,MADM;AAEZP,IAAAA,KAAK,EAALA,KAFY;AAGZC,IAAAA,IAAI,EAAJA,IAHY;AAIZC,IAAAA,UAAU,EAAVA,UAJY;AAKZC,IAAAA,UAAU,EAAVA,UALY;AAMZC,IAAAA,SAAS,EAATA,SANY;AAOZC,IAAAA,SAAS,EAATA,SAPY;AASZ;AACAG,IAAAA,KAAK,YAAKN,UAAL,cAAmBF,KAAnB,cAA4BG,UAA5B,CAVO;AAWZM,IAAAA,WAAW,YAAKP,UAAL,cAAmBF,KAAnB,cAA4BG,UAA5B,CAXC;AAYZO,IAAAA,WAAW,YAAKR,UAAL,cAAmBD,IAAnB,cAA2BE,UAA3B,CAZC;AAaZQ,IAAAA,iBAAiB,YAAKT,UAAL,cAAmBD,IAAnB,cAA2BE,UAA3B,CAbL;AAcZS,IAAAA,gBAAgB,YAAKV,UAAL,cAAmBF,KAAnB,uBAdJ;AAgBZ;AACAa,IAAAA,IAAI,YAAKT,SAAL,cAAkBJ,KAAlB,cAA2BK,SAA3B,CAjBQ;AAkBZS,IAAAA,UAAU,YAAKV,SAAL,cAAkBH,IAAlB,eAA2BI,SAA3B,CAlBE;AAmBZU,IAAAA,gBAAgB,YAAKX,SAAL,cAAkBH,IAAlB,eAA2BI,SAA3B,CAnBJ;AAoBZW,IAAAA,UAAU,YAAKZ,SAAL,cAAkBJ,KAAlB,cAA2BK,SAA3B,CApBE;AAqBZY,IAAAA,eAAe,YAAKb,SAAL,cAAkBJ,KAAlB;AArBH,KAuBTkB,MAAM,CAACC,IAAP,CAAYpB,KAAZ,EAAmBqB,MAAnB,CACD,UAACC,QAAD,EAAWC,GAAX;AAAA;;AAAA,6BACKD,QADL,wDAEGC,GAFH,EAESvB,KAAK,CAACuB,GAAD,CAFd,6CAGM1B,SAAS,gBAASH,UAAU,CAAC6B,GAAD,CAAnB,EAHf,aAGkDpB,UAHlD,cAGgEF,KAHhE,cAIID,KAAK,CAACuB,GAAD,CAJT,8CAMM1B,SAAS,eAAQH,UAAU,CAAC6B,GAAD,CAAlB,EANf,aAMiDlB,SANjD,cAM8DJ,KAN9D,cAOID,KAAK,CAACuB,GAAD,CAPT,8CASM1B,SAAS,sBACGH,UAAU,CAAC6B,GAAD,CADb,EATf,aAWWpB,UAXX,cAWyBD,IAXzB,cAWiCF,KAAK,CAACuB,GAAD,CAXtC,8CAYM1B,SAAS,qBACEH,UAAU,CAAC6B,GAAD,CADZ,EAZf,aAcWlB,SAdX,cAcwBH,IAdxB,cAcgCF,KAAK,CAACuB,GAAD,CAdrC;AAAA,GADC,EAiBD,EAjBC,CAvBS,CAAd;;AA4CA,SAAO3B,KAAK,CAACG,MAAD,CAAL,CAAcQ,QAAd,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;;0BArDeT,W","sourcesContent":["import upperFirst from 'lodash/fp/upperFirst'\nimport { baseDefaults } from '../../utils'\nimport merge from 'lodash/fp/merge'\nimport camelCase from 'lodash/camelCase'\n\nexport function borderTheme({ border, color } = baseDefaults) {\n  const style = 'solid'\n  const dash = 'dashed'\n  const thickWidth = '2px'\n  const thickColor = color['grey-700']\n  const thinWidth = '1px'\n  const thinColor = color['grey-700']\n\n  const defaults = {\n    none: 'none',\n    style,\n    dash,\n    thickWidth,\n    thickColor,\n    thinWidth,\n    thinColor,\n\n    // thick\n    thick: `${thickWidth} ${style} ${thickColor}`,\n    thickInvert: `${thickWidth} ${style} ${thickColor}`,\n    thickDashed: `${thickWidth} ${dash} ${thickColor}`,\n    thickDashedInvert: `${thickWidth} ${dash} ${thickColor}`,\n    thickTransparent: `${thickWidth} ${style} rgba(0, 0, 0, 0);`,\n\n    // thin\n    thin: `${thinWidth} ${style} ${thinColor}`,\n    thinDashed: `${thinWidth} ${dash}  ${thinColor}`,\n    thinDashedInvert: `${thinWidth} ${dash}  ${thinColor}`,\n    thinInvert: `${thinWidth} ${style} ${thinColor}`,\n    thinTransparent: `${thinWidth} ${style} rgba(0, 0, 0, 0);`,\n\n    ...Object.keys(color).reduce(\n      (previous, key) => ({\n        ...previous,\n        [key]: color[key],\n        [`${camelCase(`thick${upperFirst(key)}`)}`]: `${thickWidth} ${style} ${\n          color[key]\n        }`,\n        [`${camelCase(`thin${upperFirst(key)}`)}`]: `${thinWidth} ${style} ${\n          color[key]\n        }`,\n        [`${camelCase(\n          `thickDashed${upperFirst(key)}`\n        )}`]: `${thickWidth} ${dash} ${color[key]}`,\n        [`${camelCase(\n          `thinDashed${upperFirst(key)}`\n        )}`]: `${thinWidth} ${dash} ${color[key]}`,\n      }),\n      {}\n    ),\n  }\n\n  return merge(border)(defaults)\n}\n"]}]}