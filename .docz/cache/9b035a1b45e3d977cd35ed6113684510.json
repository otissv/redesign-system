{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/Toolbar/ToolbarButton.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/Toolbar/ToolbarButton.js","mtime":1556788286536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Toolbar/ToolbarButton.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background: none;\\n  border: none;\\n  outline: none;\\n  white-space: nowrap;\\n  color: #fff;\\n  border-bottom: 1px solid hsl(0, 0%, 12%);\\n  padding: 1rem;\\n  /* &:hover {\\n    border-bottom: 1px solid #1e87f0;\\n  } */\\n  position: relative;\\n  height: 3.5rem;\\n  cursor: pointer;\\n  \", \";\\n  \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { sharedStyles } from '../utils';\nimport { ThemeContext } from '../ThemeContext';\nvar ButtonIcon = styled.button(_templateObject(), sharedStyles, function (props) {\n  return props.styled;\n});\nexport var ToolbarButton = React.memo(function ToolbarButton(_ref) {\n  var Component = _ref.Component,\n      uid = _ref.uid,\n      label = _ref.label,\n      onClick = _ref.onClick,\n      title = _ref.title,\n      propsRest = _objectWithoutProperties(_ref, [\"Component\", \"uid\", \"label\", \"onClick\", \"title\"]);\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  return React.createElement(ButtonIcon, Object.assign({\n    \"data-uid\": uid,\n    onClick: onClick,\n    title: title,\n    theme: theme\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Component, {\n    width: \"1.5rem\",\n    height: \"1.5rem\",\n    css: \"transform: translateY(4px); padding: 1rem; margin: 1px\",\n    hoverColor: !label ? '#4ea1f3' : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), label);\n});\n\nif (typeof ToolbarButton !== 'undefined' && ToolbarButton && ToolbarButton === Object(ToolbarButton) && Object.isExtensible(ToolbarButton)) {\n  Object.defineProperty(ToolbarButton, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"ToolbarButton\",\n      filename: \"src/Toolbar/ToolbarButton.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ButtonIcon, \"ButtonIcon\", \"/mnt/Storage/Projects/themed-styled-components/src/Toolbar/ToolbarButton.js\");\n  reactHotLoader.register(ToolbarButton, \"ToolbarButton\", \"/mnt/Storage/Projects/themed-styled-components/src/Toolbar/ToolbarButton.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Toolbar/ToolbarButton.js"],"names":["React","useContext","styled","sharedStyles","ThemeContext","ButtonIcon","button","props","ToolbarButton","memo","Component","uid","label","onClick","title","propsRest","theme"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,IAAMC,UAAU,GAAGH,MAAM,CAACI,MAAV,oBAcZH,YAdY,EAeZ,UAAAI,KAAK,EAAI;AACT,SAAOA,KAAK,CAACL,MAAb;AACD,CAjBa,CAAhB;AAoBA,OAAO,IAAMM,aAAa,GAAGR,KAAK,CAACS,IAAN,CAAW,SAASD,aAAT,OAOrC;AAAA,MANDE,SAMC,QANDA,SAMC;AAAA,MALDC,GAKC,QALDA,GAKC;AAAA,MAJDC,KAIC,QAJDA,KAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADEC,SACF;;AAAA,oBACiBd,UAAU,CAACG,YAAD,CAD3B;AAAA,MACOY,KADP,eACOA,KADP;;AAGD,SACE,oBAAC,UAAD;AACE,gBAAUL,GADZ;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,KAAK,EAAEE;AAJT,KAKMD,SALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAME,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,GAAG,EAAC,wDAHN;AAIE,IAAA,UAAU,EAAE,CAACH,KAAD,GAAS,SAAT,GAAqB,IAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAYGA,KAZH,CADF;AAgBD,CA1B4B,CAAtB;;;;;;;;;;;;;;;;;;;;;;0BApBDP,U;0BAoBOG,a","sourcesContent":["import React, { useContext } from 'react'\nimport styled from 'styled-components'\n\nimport { sharedStyles } from '../utils'\nimport { ThemeContext } from '../ThemeContext'\n\nconst ButtonIcon = styled.button`\n  background: none;\n  border: none;\n  outline: none;\n  white-space: nowrap;\n  color: #fff;\n  border-bottom: 1px solid hsl(0, 0%, 12%);\n  padding: 1rem;\n  /* &:hover {\n    border-bottom: 1px solid #1e87f0;\n  } */\n  position: relative;\n  height: 3.5rem;\n  cursor: pointer;\n  ${sharedStyles};\n  ${props => {\n    return props.styled\n  }};\n`\n\nexport const ToolbarButton = React.memo(function ToolbarButton({\n  Component,\n  uid,\n  label,\n  onClick,\n  title,\n  ...propsRest\n}) {\n  const { theme } = useContext(ThemeContext)\n\n  return (\n    <ButtonIcon\n      data-uid={uid}\n      onClick={onClick}\n      title={title}\n      theme={theme}\n      {...propsRest}>\n      <Component\n        width=\"1.5rem\"\n        height=\"1.5rem\"\n        css=\"transform: translateY(4px); padding: 1rem; margin: 1px\"\n        hoverColor={!label ? '#4ea1f3' : null}\n      />\n      {label}\n    </ButtonIcon>\n  )\n})\n"]}]}