{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/Textarea/Textarea.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/Textarea/Textarea.js","mtime":1557778588179},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Textarea/Textarea.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Base from '../Base/Base';\nimport { textareaTheme, textareaAppearanceTheme, textareaWidthsTheme } from './textarea.theme';\nexport var Textarea = React.memo(function Textarea(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      propsRest = _objectWithoutProperties(_ref, [\"children\", \"className\"]);\n\n  var classNames = \"Textarea \".concat(className || '');\n  var themed = useMemo(function () {\n    return [textareaTheme, textareaAppearanceTheme, textareaWidthsTheme];\n  }, [textareaTheme, textareaAppearanceTheme, textareaWidthsTheme]);\n  return React.createElement(Base, Object.assign({\n    el: \"textarea\",\n    className: classNames,\n    themed: themed,\n    disabled: propsRest.appearance === 'disabled'\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), children);\n});\n\nif (typeof Textarea !== 'undefined' && Textarea && Textarea === Object(Textarea) && Object.isExtensible(Textarea)) {\n  Object.defineProperty(Textarea, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Textarea\",\n      filename: \"src/Textarea/Textarea.js\"\n    }\n  });\n}\n\nTextarea.propTypes = {\n  active: PropTypes.bool,\n  appearance: PropTypes.oneOf(['primary', 'secondary', 'accent', 'action', 'danger', 'success', 'warning', 'disabled']),\n  widths: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge'])\n};\nvar _default = Textarea;\nexport default _default;\n\nif (typeof Textarea !== 'undefined' && Textarea && Textarea === Object(Textarea) && Object.isExtensible(Textarea)) {\n  Object.defineProperty(Textarea, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Textarea\",\n      filename: \"src/Textarea/Textarea.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Textarea, \"Textarea\", \"/mnt/Storage/Projects/themed-styled-components/src/Textarea/Textarea.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Textarea/Textarea.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Textarea/Textarea.js"],"names":["React","useMemo","styled","PropTypes","Base","textareaTheme","textareaAppearanceTheme","textareaWidthsTheme","Textarea","memo","children","className","propsRest","classNames","themed","appearance","propTypes","active","bool","oneOf","widths"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,SACEC,aADF,EAEEC,uBAFF,EAGEC,mBAHF,QAIO,kBAJP;AAMA,OAAO,IAAMC,QAAQ,GAAGR,KAAK,CAACS,IAAN,CAAW,SAASD,QAAT,OAIhC;AAAA,MAHDE,QAGC,QAHDA,QAGC;AAAA,MAFDC,SAEC,QAFDA,SAEC;AAAA,MADEC,SACF;;AACD,MAAMC,UAAU,sBAAeF,SAAS,IAAI,EAA5B,CAAhB;AACA,MAAMG,MAAM,GAAGb,OAAO,CACpB;AAAA,WAAM,CAACI,aAAD,EAAgBC,uBAAhB,EAAyCC,mBAAzC,CAAN;AAAA,GADoB,EAEpB,CAACF,aAAD,EAAgBC,uBAAhB,EAAyCC,mBAAzC,CAFoB,CAAtB;AAKA,SACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,SAAS,EAAEM,UAFb;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,QAAQ,EAAEF,SAAS,CAACG,UAAV,KAAyB;AAJrC,KAKMH,SALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGF,QANH,CADF;AAUD,CArBuB,CAAjB;;;;;;;;;;;;;AAuBPF,QAAQ,CAACQ,SAAT,GAAqB;AACnBC,EAAAA,MAAM,EAAEd,SAAS,CAACe,IADC;AAEnBH,EAAAA,UAAU,EAAEZ,SAAS,CAACgB,KAAV,CAAgB,CAC1B,SAD0B,EAE1B,WAF0B,EAG1B,QAH0B,EAI1B,QAJ0B,EAK1B,QAL0B,EAM1B,SAN0B,EAO1B,SAP0B,EAQ1B,UAR0B,CAAhB,CAFO;AAYnBC,EAAAA,MAAM,EAAEjB,SAAS,CAACgB,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,QAAvC,CAAhB;AAZW,CAArB;eAeeX,Q;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAtCaA,Q","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport Base from '../Base/Base'\n\nimport {\n  textareaTheme,\n  textareaAppearanceTheme,\n  textareaWidthsTheme,\n} from './textarea.theme'\n\nexport const Textarea = React.memo(function Textarea({\n  children,\n  className,\n  ...propsRest\n}) {\n  const classNames = `Textarea ${className || ''}`\n  const themed = useMemo(\n    () => [textareaTheme, textareaAppearanceTheme, textareaWidthsTheme],\n    [textareaTheme, textareaAppearanceTheme, textareaWidthsTheme]\n  )\n\n  return (\n    <Base\n      el=\"textarea\"\n      className={classNames}\n      themed={themed}\n      disabled={propsRest.appearance === 'disabled'}\n      {...propsRest}>\n      {children}\n    </Base>\n  )\n})\n\nTextarea.propTypes = {\n  active: PropTypes.bool,\n  appearance: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'accent',\n    'action',\n    'danger',\n    'success',\n    'warning',\n    'disabled',\n  ]),\n  widths: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']),\n}\n\nexport default Textarea\n"]}]}