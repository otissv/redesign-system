{"remainingRequest":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js??ref--11-1!/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/redesign/src/Form/Form.tsx","dependencies":[{"path":"/mnt/Storage/Projects/redesign/src/Form/Form.tsx","mtime":1561664324599},{"path":"/mnt/Storage/Projects/redesign/node_modules/cache-loader/dist/cjs.js","mtime":1558371898492},{"path":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1558369220865},{"path":"/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/Storage/Projects/redesign/src/Form/Form.tsx"],"names":["React","Fragment","useMemo","useReducerDevtools","useForm","FormControl","Base","formTheme","Form","className","children","initialState","onChange","onBlur","onSubmit","name","themed","propRest","classNames","_themed","modelState","model","formDispatch","dispatch","handleSubmit","formRest","render","Fields","handleBlur","handleChange","handleFocus","console","log","fields","map","label","attributes","component","heading","id","fieldRest","value","checked","attributesRest","fieldProps","parent","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useMemo } from 'react';\nimport { useReducerDevtools } from '../reusable/devtools';\nimport { useForm } from '../reusable/form';\n\nimport { FormControl } from '../FormControl';\nimport {\n  FormInterface,\n  FormFieldsType,\n  FormFieldInterface,\n} from './form.types';\nimport { Base } from '../Base';\nimport { formTheme } from './form.theme';\n//TODO: add hide boolean / function\n//TODO: add error component\n\nexport function Form({\n  className,\n  children,\n  initialState,\n  onChange,\n  onBlur,\n  onSubmit,\n  name,\n  themed,\n  ...propRest\n}: FormInterface) {\n  const classNames = `Form ${className}`;\n  const _themed = useMemo(() => [formTheme, ...themed], [formTheme, themed]);\n\n  const {\n    model: modelState,\n    dispatch: formDispatch,\n    handleSubmit,\n    ...formRest\n  } = useForm({\n    initialState,\n    onSubmit,\n    onChange,\n    onBlur,\n  });\n\n  const [model, dispatch] = useReducerDevtools(\n    [modelState, formDispatch],\n    initialState,\n    name || 'Form'\n  );\n\n  const render =\n    typeof children === 'function'\n      ? children({ dispatch, model, handleSubmit, ...formRest })\n      : children;\n\n  return (\n    <Base\n      className={classNames}\n      noValidate\n      onSubmit={handleSubmit}\n      themed={_themed}\n      {...propRest}\n    >\n      <Fields model={model} {...formRest} />\n      {render}\n    </Base>\n  );\n}\n\nexport const Fields: FormFieldsType = function Fields({\n  handleBlur,\n  handleChange,\n  handleFocus,\n  model,\n}) {\n  console.log(model);\n  return model.fields.map(\n    ({\n      label,\n      attributes = {},\n      children,\n      component,\n      heading,\n      id,\n      ...fieldRest\n    }) => {\n      const { value, name, checked, ...attributesRest } = attributes;\n\n      const fieldProps: FormFieldInterface = {\n        handleBlur,\n        handleChange,\n        handleFocus,\n        label,\n        id,\n        model: { fields: children },\n        parent: id,\n      };\n\n      const render = component ? (\n        component({\n          attributes,\n          children,\n          ...fieldProps,\n        })\n      ) : children ? (\n        <div {...attributesRest}>{Fields(fieldProps)}</div>\n      ) : (\n        <FormControl\n          attributes={attributes}\n          id={id}\n          onBlur={handleBlur}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          label={label}\n          field={fieldRest}\n          model={model}\n        />\n      );\n\n      return <Fragment key={id}>{render}</Fragment>;\n    }\n  );\n};\n\nForm.defaultProps = {\n  className: '',\n  themed: [],\n};\n\nexport default Form;\n"]}]}