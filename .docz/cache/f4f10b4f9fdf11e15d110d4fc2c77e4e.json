{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionItem.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionItem.js","mtime":1556623332065},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _slicedToArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionItem.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useContext, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Base } from '../Base';\nimport { accordionItemTheme } from './accordion.theme';\nimport { setTheme, sharedStyles } from '../utils';\nexport var AccordionItemContext = React.createContext('');\n\nif (typeof AccordionItemContext !== 'undefined' && AccordionItemContext && AccordionItemContext === Object(AccordionItemContext) && Object.isExtensible(AccordionItemContext)) {\n  Object.defineProperty(AccordionItemContext, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"AccordionItemContext\",\n      filename: \"src/_Accordion/AccordionItem.js\"\n    }\n  });\n}\n\nexport function useAccordionItem() {\n  return useContext(AccordionItemContext);\n}\n\nif (typeof useAccordionItem !== 'undefined' && useAccordionItem && useAccordionItem === Object(useAccordionItem) && Object.isExtensible(useAccordionItem)) {\n  Object.defineProperty(useAccordionItem, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"useAccordionItem\",\n      filename: \"src/_Accordion/AccordionItem.js\"\n    }\n  });\n}\n\nexport var AccordionItem = React.memo(function AccordionItem(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      value = _ref.uid,\n      propsRest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"uid\"]);\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      uid = _useState2[0],\n      setUid = _useState2[1];\n\n  var context = useMemo(function () {\n    return {\n      uid: uid,\n      setUid: setUid\n    };\n  }, [uid, setUid]);\n  return React.createElement(AccordionItemContext.Provider, {\n    value: context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, children);\n});\n\nif (typeof AccordionItem !== 'undefined' && AccordionItem && AccordionItem === Object(AccordionItem) && Object.isExtensible(AccordionItem)) {\n  Object.defineProperty(AccordionItem, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"AccordionItem\",\n      filename: \"src/_Accordion/AccordionItem.js\"\n    }\n  });\n}\n\nAccordionItem.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object,\n  uid: PropTypes.string\n};\nexport var accordionItem = styled(AccordionItem);\n\nif (typeof accordionItem !== 'undefined' && accordionItem && accordionItem === Object(accordionItem) && Object.isExtensible(accordionItem)) {\n  Object.defineProperty(accordionItem, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"accordionItem\",\n      filename: \"src/_Accordion/AccordionItem.js\"\n    }\n  });\n}\n\nvar _default = AccordionItem;\nexport default _default;\n\nif (typeof AccordionItem !== 'undefined' && AccordionItem && AccordionItem === Object(AccordionItem) && Object.isExtensible(AccordionItem)) {\n  Object.defineProperty(AccordionItem, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"AccordionItem\",\n      filename: \"src/_Accordion/AccordionItem.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AccordionItemContext, \"AccordionItemContext\", \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionItem.js\");\n  reactHotLoader.register(useAccordionItem, \"useAccordionItem\", \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionItem.js\");\n  reactHotLoader.register(AccordionItem, \"AccordionItem\", \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionItem.js\");\n  reactHotLoader.register(accordionItem, \"accordionItem\", \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionItem.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionItem.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionItem.js"],"names":["React","useContext","useMemo","useState","styled","PropTypes","Base","accordionItemTheme","setTheme","sharedStyles","AccordionItemContext","createContext","useAccordionItem","AccordionItem","memo","children","className","value","uid","propsRest","setUid","context","propTypes","node","isRequired","theme","object","string","accordionItem"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,UAAvC;AAEA,OAAO,IAAMC,oBAAoB,GAAGV,KAAK,CAACW,aAAN,CAAoB,EAApB,CAA7B;;;;;;;;;;;;;AAEP,OAAO,SAASC,gBAAT,GAA4B;AACjC,SAAOX,UAAU,CAACS,oBAAD,CAAjB;AACD;;;;;;;;;;;;;AAED,OAAO,IAAMG,aAAa,GAAGb,KAAK,CAACc,IAAN,CAAW,SAASD,aAAT,OAKrC;AAAA,MAJDE,QAIC,QAJDA,QAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFIC,KAEJ,QAFDC,GAEC;AAAA,MADEC,SACF;;AAAA,kBACqBhB,QAAQ,CAACc,KAAD,CAD7B;AAAA;AAAA,MACMC,GADN;AAAA,MACWE,MADX;;AAED,MAAMC,OAAO,GAAGnB,OAAO,CAAC;AAAA,WAAO;AAAEgB,MAAAA,GAAG,EAAHA,GAAF;AAAOE,MAAAA,MAAM,EAANA;AAAP,KAAP;AAAA,GAAD,EAA0B,CAACF,GAAD,EAAME,MAAN,CAA1B,CAAvB;AAEA,SACE,oBAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAEC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QADH,CADF;AAKD,CAd4B,CAAtB;;;;;;;;;;;;;AAgBPF,aAAa,CAACS,SAAd,GAA0B;AACxBP,EAAAA,QAAQ,EAAEV,SAAS,CAACkB,IAAV,CAAeC,UADD;AAExBC,EAAAA,KAAK,EAAEpB,SAAS,CAACqB,MAFO;AAGxBR,EAAAA,GAAG,EAAEb,SAAS,CAACsB;AAHS,CAA1B;AAMA,OAAO,IAAMC,aAAa,GAAGxB,MAAM,CAACS,aAAD,CAA5B;;;;;;;;;;;;;eACQA,a;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA7BaH,oB;0BAEGE,gB;0BAIHC,a;0BAsBAe,a","sourcesContent":["import React, { useContext, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport { Base } from '../Base'\nimport { accordionItemTheme } from './accordion.theme'\nimport { setTheme, sharedStyles } from '../utils'\n\nexport const AccordionItemContext = React.createContext('')\n\nexport function useAccordionItem() {\n  return useContext(AccordionItemContext)\n}\n\nexport const AccordionItem = React.memo(function AccordionItem({\n  children,\n  className,\n  uid: value,\n  ...propsRest\n}) {\n  const [uid, setUid] = useState(value)\n  const context = useMemo(() => ({ uid, setUid }), [uid, setUid])\n\n  return (\n    <AccordionItemContext.Provider value={context}>\n      {children}\n    </AccordionItemContext.Provider>\n  )\n})\n\nAccordionItem.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object,\n  uid: PropTypes.string,\n}\n\nexport const accordionItem = styled(AccordionItem)\nexport default AccordionItem\n"]}]}