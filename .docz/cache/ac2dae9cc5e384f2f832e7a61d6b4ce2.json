{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/Accordion/AccordionButton.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/Accordion/AccordionButton.js","mtime":1558340356589},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Accordion/AccordionButton.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Button } from '../Button/Button';\nimport { ChevronRight } from '../MaterialIcons/ChevronRight';\nimport { icon } from '../Icon';\nimport { useAccordion } from './AccordionContext';\nimport { useAccordionItem } from './AccordionItem';\nimport { accordionButtonTheme, accordionButtonIconTheme } from './accordion.theme';\nexport function AccordionButton(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      onFocus = _ref.onFocus,\n      handleOnClick = _ref.handleOnClick,\n      propsThemed = _ref.themed,\n      propsRest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"onFocus\", \"handleOnClick\", \"themed\"]);\n\n  var classNames = \"AccordionButton \".concat(className || '');\n\n  var _useAccordion = useAccordion(),\n      active = _useAccordion.active,\n      setActiveItem = _useAccordion.setActiveItem;\n\n  var _useAccordionItem = useAccordionItem(),\n      uid = _useAccordionItem.uid;\n\n  function handleClick(e) {\n    e.preventDefault();\n    handleOnClick ? handleOnClick(e) : setActiveItem(e.target.dataset.uid);\n  }\n\n  function handleFocus(e) {\n    e.preventDefault();\n    onFocus ? onFocus(e) : setActiveItem(e.target.dataset.uid);\n  }\n\n  var themed = useMemo(function () {\n    return [accordionButtonTheme].concat(_toConsumableArray(propsThemed));\n  }, [accordionButtonTheme].concat(_toConsumableArray(propsThemed)));\n  var iconThemed = useMemo(function () {\n    return [accordionButtonIconTheme].concat(_toConsumableArray(propsThemed));\n  }, [accordionButtonIconTheme].concat(_toConsumableArray(propsThemed)));\n  return React.createElement(Button, Object.assign({\n    className: classNames,\n    onClick: handleClick,\n    \"data-uid\": uid,\n    onFocus: handleFocus,\n    stretch: true,\n    themed: themed\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), children, React.createElement(ChevronRight, {\n    \"data-uid\": uid,\n    className: \"AccordionButtonIcon\",\n    active: active === uid,\n    css: \"padding: 0;\",\n    themed: iconThemed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n}\n\nif (typeof AccordionButton !== 'undefined' && AccordionButton && AccordionButton === Object(AccordionButton) && Object.isExtensible(AccordionButton)) {\n  Object.defineProperty(AccordionButton, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"AccordionButton\",\n      filename: \"src/Accordion/AccordionButton.js\"\n    }\n  });\n}\n\nAccordionButton.defaultProps = {\n  themed: []\n};\nAccordionButton.propTypes = {\n  children: PropTypes.node,\n  appearance: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'accent', 'action', 'danger', 'success', 'warning', 'disabled']),\n  size: PropTypes.oneOf(['small', 'large']),\n  stretch: PropTypes.bool,\n  themed: PropTypes.array,\n  theme: PropTypes.array\n};\nvar _default = AccordionButton;\nexport default _default;\n\nif (typeof AccordionButton !== 'undefined' && AccordionButton && AccordionButton === Object(AccordionButton) && Object.isExtensible(AccordionButton)) {\n  Object.defineProperty(AccordionButton, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"AccordionButton\",\n      filename: \"src/Accordion/AccordionButton.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AccordionButton, \"AccordionButton\", \"/mnt/Storage/Projects/themed-styled-components/src/Accordion/AccordionButton.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Accordion/AccordionButton.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Accordion/AccordionButton.js"],"names":["React","useMemo","PropTypes","styled","Button","ChevronRight","icon","useAccordion","useAccordionItem","accordionButtonTheme","accordionButtonIconTheme","AccordionButton","children","className","onFocus","handleOnClick","propsThemed","themed","propsRest","classNames","active","setActiveItem","uid","handleClick","e","preventDefault","target","dataset","handleFocus","iconThemed","defaultProps","propTypes","node","appearance","oneOf","size","stretch","bool","array","theme"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { Button } from '../Button/Button'\nimport { ChevronRight } from '../MaterialIcons/ChevronRight'\n\nimport { icon } from '../Icon'\nimport { useAccordion } from './AccordionContext'\nimport { useAccordionItem } from './AccordionItem'\nimport {\n  accordionButtonTheme,\n  accordionButtonIconTheme,\n} from './accordion.theme'\n\nexport function AccordionButton({\n  children,\n  className,\n  onFocus,\n  handleOnClick,\n  themed: propsThemed,\n  ...propsRest\n}) {\n  const classNames = `AccordionButton ${className || ''}`\n  const { active, setActiveItem } = useAccordion()\n  const { uid } = useAccordionItem()\n\n  function handleClick(e) {\n    e.preventDefault()\n    handleOnClick ? handleOnClick(e) : setActiveItem(e.target.dataset.uid)\n  }\n\n  function handleFocus(e) {\n    e.preventDefault()\n    onFocus ? onFocus(e) : setActiveItem(e.target.dataset.uid)\n  }\n\n  const themed = useMemo(() => [accordionButtonTheme, ...propsThemed], [\n    accordionButtonTheme,\n    ...propsThemed,\n  ])\n\n  const iconThemed = useMemo(() => [accordionButtonIconTheme, ...propsThemed], [\n    accordionButtonIconTheme,\n    ...propsThemed,\n  ])\n\n  return (\n    <Button\n      className={classNames}\n      onClick={handleClick}\n      data-uid={uid}\n      onFocus={handleFocus}\n      stretch\n      themed={themed}\n      {...propsRest}>\n      {children}\n      <ChevronRight\n        data-uid={uid}\n        className=\"AccordionButtonIcon\"\n        active={active === uid}\n        css=\"padding: 0;\"\n        themed={iconThemed}\n      />\n    </Button>\n  )\n}\n\nAccordionButton.defaultProps = {\n  themed: [],\n}\n\nAccordionButton.propTypes = {\n  children: PropTypes.node,\n  appearance: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'tertiary',\n    'accent',\n    'action',\n    'danger',\n    'success',\n    'warning',\n    'disabled',\n  ]),\n  size: PropTypes.oneOf(['small', 'large']),\n  stretch: PropTypes.bool,\n  themed: PropTypes.array,\n  theme: PropTypes.array,\n}\n\nexport default AccordionButton\n"]}]}