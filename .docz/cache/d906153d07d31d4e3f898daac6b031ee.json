{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/Input/InputGroup.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/Input/InputGroup.js","mtime":1558116262327},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Input/InputGroup.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Base from '../Base/Base';\nimport { inputGroupTheme } from './inputGroup.theme';\nimport { inputAppearanceTheme, inputSizeTheme, inputWidthsTheme } from './input.theme';\nexport var InputGroup = React.memo(function InputGroup(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      valid = _ref.valid,\n      propsThemed = _ref.themed,\n      propsRest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"valid\", \"themed\"]);\n\n  var classNames = \"InputGroup \".concat(className || '');\n  var themed = useMemo(function () {\n    return [inputAppearanceTheme, inputSizeTheme, inputWidthsTheme, inputGroupTheme].concat(_toConsumableArray(propsThemed));\n  }, [inputGroupTheme, inputAppearanceTheme, inputSizeTheme, inputWidthsTheme]);\n  return React.createElement(Base, {\n    role: \"group\",\n    className: classNames,\n    themed: themed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, children);\n});\n\nif (typeof InputGroup !== 'undefined' && InputGroup && InputGroup === Object(InputGroup) && Object.isExtensible(InputGroup)) {\n  Object.defineProperty(InputGroup, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"InputGroup\",\n      filename: \"src/Input/InputGroup.js\"\n    }\n  });\n}\n\nInputGroup.defaultProps = {\n  themed: []\n};\nvar _default = InputGroup;\nexport default _default;\n\nif (typeof InputGroup !== 'undefined' && InputGroup && InputGroup === Object(InputGroup) && Object.isExtensible(InputGroup)) {\n  Object.defineProperty(InputGroup, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"InputGroup\",\n      filename: \"src/Input/InputGroup.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(InputGroup, \"InputGroup\", \"/mnt/Storage/Projects/themed-styled-components/src/Input/InputGroup.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Input/InputGroup.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Input/InputGroup.js"],"names":["React","useMemo","styled","PropTypes","Base","inputGroupTheme","inputAppearanceTheme","inputSizeTheme","inputWidthsTheme","InputGroup","memo","children","className","valid","propsThemed","themed","propsRest","classNames","defaultProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SACEC,oBADF,EAEEC,cAFF,EAGEC,gBAHF,QAIO,eAJP;AAMA,OAAO,IAAMC,UAAU,GAAGT,KAAK,CAACU,IAAN,CAAW,SAASD,UAAT,OAMlC;AAAA,MALDE,QAKC,QALDA,QAKC;AAAA,MAJDC,SAIC,QAJDA,SAIC;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFOC,WAEP,QAFDC,MAEC;AAAA,MADEC,SACF;;AACD,MAAMC,UAAU,wBAAiBL,SAAS,IAAI,EAA9B,CAAhB;AACA,MAAMG,MAAM,GAAGd,OAAO,CACpB;AAAA,YACEK,oBADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEH,eAJF,4BAKKS,WALL;AAAA,GADoB,EAQpB,CAACT,eAAD,EAAkBC,oBAAlB,EAAwCC,cAAxC,EAAwDC,gBAAxD,CARoB,CAAtB;AAWA,SACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAES,UAA9B;AAA0C,IAAA,MAAM,EAAEF,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF;AAKD,CAxByB,CAAnB;;;;;;;;;;;;;AA0BPF,UAAU,CAACS,YAAX,GAA0B;AACxBH,EAAAA,MAAM,EAAE;AADgB,CAA1B;eAIeN,U;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA9BaA,U","sourcesContent":["import React, { useMemo } from 'react'\n\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport Base from '../Base/Base'\nimport { inputGroupTheme } from './inputGroup.theme'\nimport {\n  inputAppearanceTheme,\n  inputSizeTheme,\n  inputWidthsTheme,\n} from './input.theme'\n\nexport const InputGroup = React.memo(function InputGroup({\n  children,\n  className,\n  valid,\n  themed: propsThemed,\n  ...propsRest\n}) {\n  const classNames = `InputGroup ${className || ''}`\n  const themed = useMemo(\n    () => [\n      inputAppearanceTheme,\n      inputSizeTheme,\n      inputWidthsTheme,\n      inputGroupTheme,\n      ...propsThemed,\n    ],\n    [inputGroupTheme, inputAppearanceTheme, inputSizeTheme, inputWidthsTheme]\n  )\n\n  return (\n    <Base role=\"group\" className={classNames} themed={themed}>\n      {children}\n    </Base>\n  )\n})\n\nInputGroup.defaultProps = {\n  themed: [],\n}\n\nexport default InputGroup\n"]}]}