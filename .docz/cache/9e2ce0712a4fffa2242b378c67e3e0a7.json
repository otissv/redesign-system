{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/CoverImg/CoverImg.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/CoverImg/CoverImg.js","mtime":1557590857690},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvdGhlbWVkLXN0eWxlZC1jb21wb25lbnRzL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSAiL21udC9TdG9yYWdlL1Byb2plY3RzL3RoZW1lZC1zdHlsZWQtY29tcG9uZW50cy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOwp2YXIgX2pzeEZpbGVOYW1lID0gIi9tbnQvU3RvcmFnZS9Qcm9qZWN0cy90aGVtZWQtc3R5bGVkLWNvbXBvbmVudHMvc3JjL0NvdmVySW1nL0NvdmVySW1nLmpzIjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCmltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnOwppbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJzsKaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJzsKaW1wb3J0IHsgQmFzZSB9IGZyb20gJy4uL0Jhc2UnOwppbXBvcnQgeyBjb3ZlckltZ1RoZW1lIH0gZnJvbSAnLi9jb3ZlckltZy50aGVtZSc7CmV4cG9ydCB2YXIgQ292ZXJJbWcgPSBSZWFjdC5tZW1vKGZ1bmN0aW9uIENvdmVySW1nKF9yZWYpIHsKICB2YXIgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuLAogICAgICBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZSwKICAgICAgcHJvcHNUaGVtZWQgPSBfcmVmLnRoZW1lZCwKICAgICAgcHJvcHNSZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsIFsiY2hpbGRyZW4iLCAiY2xhc3NOYW1lIiwgInRoZW1lZCJdKTsKCiAgLy8gY29tcG9uZW50RGlkTW91bnQoKSB7CiAgLy8gICAvLyB0aGlzLmVsZW1lbnQgPSBoZWxwZXJzLmdldEVsZW1lbnQodGhpcy5wcm9wcy5raXRpZCk7CiAgLy8gICAvLyB0aGlzLnVwZGF0ZUltZyh0aGlzLmVsZW1lbnQpOwogIC8vICAgLy8gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMudXBkYXRlSW1nKTsKICAvLyB9CiAgLy8gY29tcG9uZW50V2lsbFVubW91bnQoKSB7CiAgLy8gICAvLyB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy51cGRhdGVJbWcpOwogIC8vIH0KICAvLyB1cGRhdGVJbWcoKSB7CiAgLy8gICAvLyBjb25zdCBwcm9wcyA9IHRoaXMucHJvcHM7CiAgLy8gICAvLyBjb25zdCBlbGVtZW50ID0gdGhpcy5lbGVtZW50OwogIC8vICAgLy8gbGV0IHNjcmVlbiA9IGhlbHBlcnMuYnJlYWtwb2ludHMoKS5zY3JlZW47CiAgLy8gICAvLyBsZXQgbG9ja2VkID0gZmFsc2U7CiAgLy8gICAvLyBpZiAoIWxvY2tlZCkgewogIC8vICAgLy8gICBjb25zdCB1cGRhdGVFbGVtZW50ID0gKG1lZGlhKSA9PiB7CiAgLy8gICAvLyAgICAgaWYgKHByb3BzLmNvdmVyKSB7CiAgLy8gICAvLyAgICAgICBlbGVtZW50LnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IHByb3BzW21lZGlhXS5zcmMgIGB1cmwoJHtwcm9wc1ttZWRpYV0uc3JjfSlgIDogYHVybCgke3Byb3BzLnNyY30pYDsKICAvLyAgIC8vICAgICB9IGVsc2UgewogIC8vICAgLy8gICAgICAgZWxlbWVudC5zcmMgPSBwcm9wc1ttZWRpYV0uc3JjIHx8IHByb3BzLnNyYzsKICAvLyAgIC8vICAgICAgIGVsZW1lbnQuYWx0ID0gcHJvcHNbbWVkaWFdLmFsdCB8fCBwcm9wcy5hbHQ7CiAgLy8gICAvLyAgICAgfQogIC8vICAgLy8gICAgIGVsZW1lbnQuc3R5bGUud2lkdGggPSBwcm9wc1ttZWRpYV0ud2lkdGggfHwgcHJvcHMud2lkdGg7CiAgLy8gICAvLyAgICAgZWxlbWVudC5zdHlsZS5oZWlnaHQgPSBwcm9wc1ttZWRpYV0uaGVpZ2h0IHx8IHByb3BzLmhlaWdodDsKICAvLyAgIC8vICAgfTsKICAvLyAgIC8vICAgaWYgKHByb3BzLnNtYWxsIHx8IHByb3BzLm1lZGl1bSB8fCBwcm9wcy5sYXJnZSB8fCBwcm9wcy54bGFyZ2UpIHsKICAvLyAgIC8vICAgICBpZiAoc2NyZWVuLnNtYWxsKSB7CiAgLy8gICAvLyAgICAgICB1cGRhdGVFbGVtZW50KCdzbWFsbCcpOwogIC8vICAgLy8gICAgIH0gZWxzZSBpZiAoc2NyZWVuLm1lZGl1bSkgewogIC8vICAgLy8gICAgICAgdXBkYXRlRWxlbWVudCgnbWVkaXVtJyk7CiAgLy8gICAvLyAgICAgfSBlbHNlIGlmIChzY3JlZW4ubGFyZ2UpIHsKICAvLyAgIC8vICAgICAgIHVwZGF0ZUVsZW1lbnQoJ2xhcmdlJyk7CiAgLy8gICAvLyAgICAgfSBlbHNlIGlmIChzY3JlZW4ueGxhcmdlKSB7CiAgLy8gICAvLyAgICAgICB1cGRhdGVFbGVtZW50KCd4bGFyZ2UnKTsKICAvLyAgIC8vICAgICB9CiAgLy8gICAvLyAgIH0KICAvLyAgIC8vIH0KICAvLyB9CiAgdmFyIGNsYXNzTmFtZXMgPSAiQ292ZXJJbWcgIi5jb25jYXQoY2xhc3NOYW1lIHx8ICcnKTsKICB2YXIgdGhlbWVkID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gW2NvdmVySW1nVGhlbWVdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkocHJvcHNUaGVtZWQpKTsKICB9LCBbY292ZXJJbWdUaGVtZSwgcHJvcHNUaGVtZWRdKTsKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChCYXNlLCBPYmplY3QuYXNzaWduKHsKICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcywKICAgIHRoZW1lZDogdGhlbWVkCiAgfSwgcHJvcHNSZXN0LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA2MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCBjaGlsZHJlbik7Cn0pOwoKaWYgKHR5cGVvZiBDb3ZlckltZyAhPT0gJ3VuZGVmaW5lZCcgJiYgQ292ZXJJbWcgJiYgQ292ZXJJbWcgPT09IE9iamVjdChDb3ZlckltZykgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShDb3ZlckltZykpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ292ZXJJbWcsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJDb3ZlckltZyIsCiAgICAgIGZpbGVuYW1lOiAic3JjL0NvdmVySW1nL0NvdmVySW1nLmpzIgogICAgfQogIH0pOwp9CgpDb3ZlckltZy5kZWZhdWx0UHJvcHMgPSB7CiAgY292ZXI6IHRydWUsCiAgaGVpZ2h0OiAnMzAwcHgnLAogIHBvc2l0aW9uOiAnNTAlIDUwJScsCiAgcmVwZWF0OiBmYWxzZSwKICB0aGVtZWQ6IFtdLAogIHdpZHRoOiAnMTAwJScKfTsKQ292ZXJJbWcucHJvcFR5cGVzID0gewogIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSwKICBjb3ZlcjogUHJvcFR5cGVzLmJvb2wsCiAgcmVwZWF0OiBQcm9wVHlwZXMuYm9vbCwKICBwb3NpdGlvbjogUHJvcFR5cGVzLnN0cmluZywKICBoZWlnaHQ6IFByb3BUeXBlcy5zdHJpbmcsCiAgbGFyZ2U6IFByb3BUeXBlcy5zaGFwZSh7CiAgICBzcmM6IFByb3BUeXBlcy5zdHJpbmcsCiAgICB3aWR0aDogUHJvcFR5cGVzLnN0cmluZywKICAgIGhlaWdodDogUHJvcFR5cGVzLnN0cmluZwogIH0pLAogIG1lZGl1bTogUHJvcFR5cGVzLnNoYXBlKHsKICAgIHNyYzogUHJvcFR5cGVzLnN0cmluZywKICAgIHdpZHRoOiBQcm9wVHlwZXMuc3RyaW5nLAogICAgaGVpZ2h0OiBQcm9wVHlwZXMuc3RyaW5nCiAgfSksCiAgc21hbGw6IFByb3BUeXBlcy5zaGFwZSh7CiAgICBzcmM6IFByb3BUeXBlcy5zdHJpbmcsCiAgICB3aWR0aDogUHJvcFR5cGVzLnN0cmluZywKICAgIGhlaWdodDogUHJvcFR5cGVzLnN0cmluZwogIH0pLAogIHNyYzogUHJvcFR5cGVzLnN0cmluZywKICB3aWR0aDogUHJvcFR5cGVzLnN0cmluZywKICB4bGFyZ2U6IFByb3BUeXBlcy5zaGFwZSh7CiAgICBzcmM6IFByb3BUeXBlcy5zdHJpbmcsCiAgICB3aWR0aDogUHJvcFR5cGVzLnN0cmluZywKICAgIGhlaWdodDogUHJvcFR5cGVzLnN0cmluZwogIH0pCn07CmV4cG9ydCB2YXIgY292ZXJJbWcgPSBzdHlsZWQoQ292ZXJJbWcpOwoKaWYgKHR5cGVvZiBjb3ZlckltZyAhPT0gJ3VuZGVmaW5lZCcgJiYgY292ZXJJbWcgJiYgY292ZXJJbWcgPT09IE9iamVjdChjb3ZlckltZykgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShjb3ZlckltZykpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY292ZXJJbWcsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJjb3ZlckltZyIsCiAgICAgIGZpbGVuYW1lOiAic3JjL0NvdmVySW1nL0NvdmVySW1nLmpzIgogICAgfQogIH0pOwp9Cgp2YXIgX2RlZmF1bHQgPSBDb3ZlckltZzsKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CgppZiAodHlwZW9mIENvdmVySW1nICE9PSAndW5kZWZpbmVkJyAmJiBDb3ZlckltZyAmJiBDb3ZlckltZyA9PT0gT2JqZWN0KENvdmVySW1nKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKENvdmVySW1nKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDb3ZlckltZywgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIkNvdmVySW1nIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvQ292ZXJJbWcvQ292ZXJJbWcuanMiCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoQ292ZXJJbWcsICJDb3ZlckltZyIsICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvdGhlbWVkLXN0eWxlZC1jb21wb25lbnRzL3NyYy9Db3ZlckltZy9Db3ZlckltZy5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGNvdmVySW1nLCAiY292ZXJJbWciLCAiL21udC9TdG9yYWdlL1Byb2plY3RzL3RoZW1lZC1zdHlsZWQtY29tcG9uZW50cy9zcmMvQ292ZXJJbWcvQ292ZXJJbWcuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL21udC9TdG9yYWdlL1Byb2plY3RzL3RoZW1lZC1zdHlsZWQtY29tcG9uZW50cy9zcmMvQ292ZXJJbWcvQ292ZXJJbWcuanMiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/CoverImg/CoverImg.js"],"names":["React","useMemo","styled","PropTypes","Base","coverImgTheme","CoverImg","memo","children","className","propsThemed","themed","propsRest","classNames","defaultProps","cover","height","position","repeat","width","propTypes","node","bool","string","large","shape","src","medium","small","xlarge","coverImg"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport { Base } from '../Base'\nimport { coverImgTheme } from './coverImg.theme'\n\nexport const CoverImg = React.memo(function CoverImg({\n  children,\n  className,\n  themed: propsThemed,\n  ...propsRest\n}) {\n  // componentDidMount() {\n  //   // this.element = helpers.getElement(this.props.kitid);\n  //   // this.updateImg(this.element);\n  //   // window.addEventListener('resize', this.updateImg);\n  // }\n\n  // componentWillUnmount() {\n  //   // window.removeEventListener('resize', this.updateImg);\n  // }\n\n  // updateImg() {\n  //   // const props = this.props;\n  //   // const element = this.element;\n  //   // let screen = helpers.breakpoints().screen;\n  //   // let locked = false;\n  //   // if (!locked) {\n  //   //   const updateElement = (media) => {\n  //   //     if (props.cover) {\n  //   //       element.style.backgroundImage = props[media].src  `url(${props[media].src})` : `url(${props.src})`;\n  //   //     } else {\n  //   //       element.src = props[media].src || props.src;\n  //   //       element.alt = props[media].alt || props.alt;\n  //   //     }\n  //   //     element.style.width = props[media].width || props.width;\n  //   //     element.style.height = props[media].height || props.height;\n  //   //   };\n  //   //   if (props.small || props.medium || props.large || props.xlarge) {\n  //   //     if (screen.small) {\n  //   //       updateElement('small');\n  //   //     } else if (screen.medium) {\n  //   //       updateElement('medium');\n  //   //     } else if (screen.large) {\n  //   //       updateElement('large');\n  //   //     } else if (screen.xlarge) {\n  //   //       updateElement('xlarge');\n  //   //     }\n  //   //   }\n  //   // }\n  // }\n\n  const classNames = `CoverImg ${className || ''}`\n  const themed = useMemo(() => [coverImgTheme, ...propsThemed], [\n    coverImgTheme,\n    propsThemed,\n  ])\n\n  return (\n    <Base className={classNames} themed={themed} {...propsRest}>\n      {children}\n    </Base>\n  )\n})\n\nCoverImg.defaultProps = {\n  cover: true,\n  height: '300px',\n  position: '50% 50%',\n  repeat: false,\n  themed: [],\n  width: '100%',\n}\n\nCoverImg.propTypes = {\n  children: PropTypes.node,\n  cover: PropTypes.bool,\n  repeat: PropTypes.bool,\n  position: PropTypes.string,\n\n  height: PropTypes.string,\n  large: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string,\n  }),\n  medium: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string,\n  }),\n  small: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string,\n  }),\n  src: PropTypes.string,\n  width: PropTypes.string,\n  xlarge: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string,\n  }),\n}\n\nexport const coverImg = styled(CoverImg)\nexport default CoverImg\n"]}]}