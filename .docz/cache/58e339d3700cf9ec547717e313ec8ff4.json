{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--6-1!/mnt/Storage/Projects/themed-styled-components/node_modules/@mdx-js/loader/index.js??ref--6-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/Table/table.mdx","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/Table/table.mdx","mtime":1556786555730},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/@mdx-js/loader/index.js","mtime":1555872603664},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Table/table.mdx\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\n/* @jsx mdx */\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { Playground, Props } from 'docz';\nimport { Flex } from '../Flex/Flex';\nimport styled from 'styled-components';\nimport { ThemeProvider } from '../ThemeContext';\nimport Table from './Table';\nimport { useTable } from './table.example.js';\nimport { TableRowSelect } from './TableRowSelect';\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  };\n};\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, Object.assign({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), mdx(\"h1\", Object.assign({\n    \"id\": \"table\"\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), \"Table\"), mdx(Props, {\n    of: Table,\n    mdxType: \"Props\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), mdx(\"h2\", Object.assign({\n    \"id\": \"default\"\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), \"Default\"), mdx(Playground, {\n    __position: 1,\n    __code: '<ThemeProvider>\\n  <Table\\n    name=\\\"TableDeafult\\\"\\n    caption=\\\"Table caption\\\"\\n    headings={[\\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }, index) => ({\\n        row: [\\n          {\\n            key: \\'index\\',\\n            component: ({ handleChange, selected }) => <td>{index}</td>,\\n          },\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => <td>{endpoint}</td>,\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>',\n    __scope: {\n      props: this ? this.props : props,\n      Playground: Playground,\n      Props: Props,\n      Flex: Flex,\n      styled: styled,\n      ThemeProvider: ThemeProvider,\n      Table: Table,\n      useTable: useTable,\n      TableRowSelect: TableRowSelect\n    },\n    __codesandbox: \"undefined\",\n    mdxType: \"Playground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, mdx(ThemeProvider, {\n    mdxType: \"ThemeProvider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, mdx(Table, {\n    name: \"TableDeafult\",\n    caption: \"Table caption\",\n    headings: ['ID', 'Name', 'Endpoint'],\n    hook: useTable,\n    rows: function rows(items) {\n      return items.map(function (_ref2, index) {\n        var id = _ref2.id,\n            name = _ref2.name,\n            endpoint = _ref2.endpoint;\n        return {\n          row: [{\n            key: 'index',\n            component: function component(_ref3) {\n              var handleChange = _ref3.handleChange,\n                  selected = _ref3.selected;\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 57\n                },\n                __self: this\n              }, index);\n            }\n          }, {\n            key: 'id',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 60\n                },\n                __self: this\n              }, id);\n            }\n          }, {\n            key: 'name',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 63\n                },\n                __self: this\n              }, name);\n            }\n          }, {\n            key: 'endpoint',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 66\n                },\n                __self: this\n              }, endpoint);\n            }\n          }]\n        };\n      });\n    },\n    mdxType: \"Table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), mdx(\"h2\", Object.assign({\n    \"id\": \"selectable\"\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), \"Selectable\"), mdx(Playground, {\n    __position: 2,\n    __code: '<ThemeProvider>\\n  <Table\\n    name=\\\"TableSelect\\\"\\n    selectable\\n    headings={[\\'\\', \\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }) => ({\\n        row: [\\n          {\\n            key: \\'select\\',\\n            component: ({ handleChange, selected }) => (\\n              <TableRowSelect\\n                id={id}\\n                handleChange={handleChange}\\n                selected={selected}\\n              />\\n            ),\\n          },\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => <td>{endpoint}</td>,\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>',\n    __scope: {\n      props: this ? this.props : props,\n      Playground: Playground,\n      Props: Props,\n      Flex: Flex,\n      styled: styled,\n      ThemeProvider: ThemeProvider,\n      Table: Table,\n      useTable: useTable,\n      TableRowSelect: TableRowSelect\n    },\n    __codesandbox: \"undefined\",\n    mdxType: \"Playground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, mdx(ThemeProvider, {\n    mdxType: \"ThemeProvider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, mdx(Table, {\n    name: \"TableSelect\",\n    selectable: true,\n    headings: ['', 'ID', 'Name', 'Endpoint'],\n    hook: useTable,\n    rows: function rows(items) {\n      return items.map(function (_ref4) {\n        var id = _ref4.id,\n            name = _ref4.name,\n            endpoint = _ref4.endpoint;\n        return {\n          row: [{\n            key: 'select',\n            component: function component(_ref5) {\n              var handleChange = _ref5.handleChange,\n                  selected = _ref5.selected;\n              return mdx(TableRowSelect, {\n                id: id,\n                handleChange: handleChange,\n                selected: selected,\n                mdxType: \"TableRowSelect\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 96\n                },\n                __self: this\n              });\n            }\n          }, {\n            key: 'id',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 99\n                },\n                __self: this\n              }, id);\n            }\n          }, {\n            key: 'name',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 102\n                },\n                __self: this\n              }, name);\n            }\n          }, {\n            key: 'endpoint',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 105\n                },\n                __self: this\n              }, endpoint);\n            }\n          }]\n        };\n      });\n    },\n    mdxType: \"Table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), mdx(\"h2\", Object.assign({\n    \"id\": \"hover\"\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), \"Hover\"), mdx(Playground, {\n    __position: 3,\n    __code: '<ThemeProvider>\\n  <Table\\n    name=\\\"TableHover\\\"\\n    hover\\n    headings={[\\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }) => ({\\n        row: [\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => <td>{endpoint}</td>,\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>',\n    __scope: {\n      props: this ? this.props : props,\n      Playground: Playground,\n      Props: Props,\n      Flex: Flex,\n      styled: styled,\n      ThemeProvider: ThemeProvider,\n      Table: Table,\n      useTable: useTable,\n      TableRowSelect: TableRowSelect\n    },\n    __codesandbox: \"undefined\",\n    mdxType: \"Playground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, mdx(ThemeProvider, {\n    mdxType: \"ThemeProvider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, mdx(Table, {\n    name: \"TableHover\",\n    hover: true,\n    headings: ['ID', 'Name', 'Endpoint'],\n    hook: useTable,\n    rows: function rows(items) {\n      return items.map(function (_ref6) {\n        var id = _ref6.id,\n            name = _ref6.name,\n            endpoint = _ref6.endpoint;\n        return {\n          row: [{\n            key: 'id',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 132\n                },\n                __self: this\n              }, id);\n            }\n          }, {\n            key: 'name',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135\n                },\n                __self: this\n              }, name);\n            }\n          }, {\n            key: 'endpoint',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 138\n                },\n                __self: this\n              }, endpoint);\n            }\n          }]\n        };\n      });\n    },\n    mdxType: \"Table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))), mdx(\"h2\", Object.assign({\n    \"id\": \"condensed\"\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), \"Condensed\"), mdx(Playground, {\n    __position: 4,\n    __code: '<ThemeProvider>\\n  <Table\\n    name=\\\"TableCondensed\\\"\\n    condensed\\n    headings={[\\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }) => ({\\n        row: [\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => <td>{endpoint}</td>,\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>',\n    __scope: {\n      props: this ? this.props : props,\n      Playground: Playground,\n      Props: Props,\n      Flex: Flex,\n      styled: styled,\n      ThemeProvider: ThemeProvider,\n      Table: Table,\n      useTable: useTable,\n      TableRowSelect: TableRowSelect\n    },\n    __codesandbox: \"undefined\",\n    mdxType: \"Playground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, mdx(ThemeProvider, {\n    mdxType: \"ThemeProvider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, mdx(Table, {\n    name: \"TableCondensed\",\n    condensed: true,\n    headings: ['ID', 'Name', 'Endpoint'],\n    hook: useTable,\n    rows: function rows(items) {\n      return items.map(function (_ref7) {\n        var id = _ref7.id,\n            name = _ref7.name,\n            endpoint = _ref7.endpoint;\n        return {\n          row: [{\n            key: 'id',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 165\n                },\n                __self: this\n              }, id);\n            }\n          }, {\n            key: 'name',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 168\n                },\n                __self: this\n              }, name);\n            }\n          }, {\n            key: 'endpoint',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 171\n                },\n                __self: this\n              }, endpoint);\n            }\n          }]\n        };\n      });\n    },\n    mdxType: \"Table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }))), mdx(\"h2\", Object.assign({\n    \"id\": \"toolbar\"\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), \"Toolbar\"), mdx(Playground, {\n    __position: 5,\n    __code: '<ThemeProvider>\\n  <Table\\n    name=\\\"TableToolbar\\\"\\n    caption=\\\"Table caption\\\"\\n    headings={[\\'\\', \\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    toolbar={[\\'copy\\', \\'download\\', \\'views\\']}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }, index) => ({\\n        row: [\\n          {\\n            key: \\'select\\',\\n            component: ({ handleChange, selected }) => (\\n              <TableRowSelect\\n                id={id}\\n                handleChange={handleChange}\\n                selected={selected}\\n              />\\n            ),\\n          },\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => <td>{endpoint}</td>,\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>',\n    __scope: {\n      props: this ? this.props : props,\n      Playground: Playground,\n      Props: Props,\n      Flex: Flex,\n      styled: styled,\n      ThemeProvider: ThemeProvider,\n      Table: Table,\n      useTable: useTable,\n      TableRowSelect: TableRowSelect\n    },\n    __codesandbox: \"undefined\",\n    mdxType: \"Playground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, mdx(ThemeProvider, {\n    mdxType: \"ThemeProvider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, mdx(Table, {\n    name: \"TableToolbar\",\n    caption: \"Table caption\",\n    headings: ['', 'ID', 'Name', 'Endpoint'],\n    hook: useTable,\n    toolbar: ['copy', 'download', 'views'],\n    rows: function rows(items) {\n      return items.map(function (_ref8, index) {\n        var id = _ref8.id,\n            name = _ref8.name,\n            endpoint = _ref8.endpoint;\n        return {\n          row: [{\n            key: 'select',\n            component: function component(_ref9) {\n              var handleChange = _ref9.handleChange,\n                  selected = _ref9.selected;\n              return mdx(TableRowSelect, {\n                id: id,\n                handleChange: handleChange,\n                selected: selected,\n                mdxType: \"TableRowSelect\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 201\n                },\n                __self: this\n              });\n            }\n          }, {\n            key: 'id',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 204\n                },\n                __self: this\n              }, id);\n            }\n          }, {\n            key: 'name',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 207\n                },\n                __self: this\n              }, name);\n            }\n          }, {\n            key: 'endpoint',\n            component: function component() {\n              return mdx(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 210\n                },\n                __self: this\n              }, endpoint);\n            }\n          }]\n        };\n      });\n    },\n    mdxType: \"Table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }))));\n}\n\nif (typeof MDXContent !== 'undefined' && MDXContent && MDXContent === Object(MDXContent) && Object.isExtensible(MDXContent)) {\n  Object.defineProperty(MDXContent, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"MDXContent\",\n      filename: \"src/Table/table.mdx\"\n    }\n  });\n}\n\nMDXContent.isMDXComponent = true;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(makeShortcode, \"makeShortcode\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/table.mdx\");\n  reactHotLoader.register(layoutProps, \"layoutProps\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/table.mdx\");\n  reactHotLoader.register(MDXLayout, \"MDXLayout\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/table.mdx\");\n  reactHotLoader.register(MDXContent, \"MDXContent\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/table.mdx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Table/table.mdx"],"names":["React","mdx","Playground","Props","Flex","styled","ThemeProvider","Table","useTable","TableRowSelect","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","items","map","index","id","endpoint","row","key","component","handleChange","selected","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport { Flex } from '../Flex/Flex'\nimport styled from 'styled-components'\nimport { ThemeProvider } from '../ThemeContext'\nimport Table from './Table'\nimport { useTable } from './table.example.js'\nimport { TableRowSelect } from './TableRowSelect'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"table\"\n    }}>{`Table`}</h1>\n    <Props of={Table} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"default\"\n    }}>{`Default`}</h2>\n    <Playground __position={1} __code={'<ThemeProvider>\\n  <Table\\n    name=\\\"TableDeafult\\\"\\n    caption=\\\"Table caption\\\"\\n    headings={[\\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }, index) => ({\\n        row: [\\n          {\\n            key: \\'index\\',\\n            component: ({ handleChange, selected }) => <td>{index}</td>,\\n          },\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => <td>{endpoint}</td>,\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table name='TableDeafult' caption=\"Table caption\" headings={['ID', 'Name', 'Endpoint']} hook={useTable} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }, index) => ({\n          row: [{\n            key: 'index',\n            component: ({\n              handleChange,\n              selected\n            }) => <td>{index}</td>\n          }, {\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td>{endpoint}</td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"selectable\"\n    }}>{`Selectable`}</h2>\n    <Playground __position={2} __code={'<ThemeProvider>\\n  <Table\\n    name=\\\"TableSelect\\\"\\n    selectable\\n    headings={[\\'\\', \\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }) => ({\\n        row: [\\n          {\\n            key: \\'select\\',\\n            component: ({ handleChange, selected }) => (\\n              <TableRowSelect\\n                id={id}\\n                handleChange={handleChange}\\n                selected={selected}\\n              />\\n            ),\\n          },\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => <td>{endpoint}</td>,\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table name=\"TableSelect\" selectable headings={['', 'ID', 'Name', 'Endpoint']} hook={useTable} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }) => ({\n          row: [{\n            key: 'select',\n            component: ({\n              handleChange,\n              selected\n            }) => <TableRowSelect id={id} handleChange={handleChange} selected={selected} mdxType=\"TableRowSelect\" />\n          }, {\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td>{endpoint}</td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"hover\"\n    }}>{`Hover`}</h2>\n    <Playground __position={3} __code={'<ThemeProvider>\\n  <Table\\n    name=\\\"TableHover\\\"\\n    hover\\n    headings={[\\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }) => ({\\n        row: [\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => <td>{endpoint}</td>,\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table name=\"TableHover\" hover headings={['ID', 'Name', 'Endpoint']} hook={useTable} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }) => ({\n          row: [{\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td>{endpoint}</td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"condensed\"\n    }}>{`Condensed`}</h2>\n    <Playground __position={4} __code={'<ThemeProvider>\\n  <Table\\n    name=\\\"TableCondensed\\\"\\n    condensed\\n    headings={[\\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }) => ({\\n        row: [\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => <td>{endpoint}</td>,\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table name=\"TableCondensed\" condensed headings={['ID', 'Name', 'Endpoint']} hook={useTable} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }) => ({\n          row: [{\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td>{endpoint}</td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"toolbar\"\n    }}>{`Toolbar`}</h2>\n    <Playground __position={5} __code={'<ThemeProvider>\\n  <Table\\n    name=\\\"TableToolbar\\\"\\n    caption=\\\"Table caption\\\"\\n    headings={[\\'\\', \\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    toolbar={[\\'copy\\', \\'download\\', \\'views\\']}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }, index) => ({\\n        row: [\\n          {\\n            key: \\'select\\',\\n            component: ({ handleChange, selected }) => (\\n              <TableRowSelect\\n                id={id}\\n                handleChange={handleChange}\\n                selected={selected}\\n              />\\n            ),\\n          },\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => <td>{endpoint}</td>,\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table name='TableToolbar' caption=\"Table caption\" headings={['', 'ID', 'Name', 'Endpoint']} hook={useTable} toolbar={['copy', 'download', 'views']} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }, index) => ({\n          row: [{\n            key: 'select',\n            component: ({\n              handleChange,\n              selected\n            }) => <TableRowSelect id={id} handleChange={handleChange} selected={selected} mdxType=\"TableRowSelect\" />\n          }, {\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td>{endpoint}</td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}