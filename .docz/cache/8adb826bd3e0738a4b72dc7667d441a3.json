{"remainingRequest":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js??ref--11-1!/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/redesign/src/FormControl/FormCheckedControl.tsx","dependencies":[{"path":"/mnt/Storage/Projects/redesign/src/FormControl/FormCheckedControl.tsx","mtime":1561591144874},{"path":"/mnt/Storage/Projects/redesign/node_modules/cache-loader/dist/cjs.js","mtime":1558371898492},{"path":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1558369220865},{"path":"/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vc3JjL0Zvcm1Db250cm9sL0Zvcm1DaGVja2VkQ29udHJvbC50c3giOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWxbImRlZmF1bHQiXS5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogIHJldHVybiBhOwp9OwoKaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgZm9ybUNvbnRyb2xUaGVtZSB9IGZyb20gJy4vZm9ybS1jb250cm9sLnRoZW1lJzsKaW1wb3J0IHsgRm9ybUxhYmVsIH0gZnJvbSAnLi9Gb3JtTGFiZWwnOwppbXBvcnQgeyBUeXBvZ3JhcGh5IH0gZnJvbSAnLi4vVHlwb2dyYXBoeSc7CmltcG9ydCB7IEJhc2UgfSBmcm9tICcuLi9CYXNlJzsKaW1wb3J0IHsgRm9ybVZhbGlkYXRpb24gfSBmcm9tICcuL0Zvcm1WYWxpZGF0aW9uJzsKZXhwb3J0IGZ1bmN0aW9uIENoZWNrQm94KF9yZWYpIHsKICB2YXIgdmFsaWQgPSBfcmVmLnZhbGlkLAogICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbInZhbGlkIl0pOwoKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgiaW5wdXQiLCBPYmplY3QuYXNzaWduKHt9LCBwcm9wcywgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSk7Cn0KCmlmICh0eXBlb2YgQ2hlY2tCb3ggIT09ICd1bmRlZmluZWQnICYmIENoZWNrQm94ICYmIENoZWNrQm94ID09PSBPYmplY3QoQ2hlY2tCb3gpICYmIE9iamVjdC5pc0V4dGVuc2libGUoQ2hlY2tCb3gpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENoZWNrQm94LCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiQ2hlY2tCb3giLAogICAgICBmaWxlbmFtZTogInNyYy9Gb3JtQ29udHJvbC9Gb3JtQ2hlY2tlZENvbnRyb2wudHN4IgogICAgfQogIH0pOwp9CgpleHBvcnQgZnVuY3Rpb24gRm9ybUNoZWNrZWRDb250cm9sKF9yZWYyKSB7CiAgdmFyIGF0dHJpYnV0ZXMgPSBfcmVmMi5hdHRyaWJ1dGVzLAogICAgICBjbGFzc05hbWUgPSBfcmVmMi5jbGFzc05hbWUsCiAgICAgIGZpZWxkID0gX3JlZjIuZmllbGQsCiAgICAgIGlkID0gX3JlZjIuaWQsCiAgICAgIGxhYmVsID0gX3JlZjIubGFiZWwsCiAgICAgIGxhYmVsUHJvcHMgPSBfcmVmMi5sYWJlbFByb3BzLAogICAgICBtb2RlbCA9IF9yZWYyLm1vZGVsLAogICAgICBwYXJlbnQgPSBfcmVmMi5wYXJlbnQsCiAgICAgIHRoZW1lZCA9IF9yZWYyLnRoZW1lZCwKICAgICAgcHJvcHNSZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYyLCBbImF0dHJpYnV0ZXMiLCAiY2xhc3NOYW1lIiwgImZpZWxkIiwgImlkIiwgImxhYmVsIiwgImxhYmVsUHJvcHMiLCAibW9kZWwiLCAicGFyZW50IiwgInRoZW1lZCJdKTsKCiAgdmFyIGNsYXNzTmFtZXMgPSAiRm9ybUNoZWNrZWRDb250cm9sICIuY29uY2F0KGNsYXNzTmFtZSk7CgogIHZhciBfdGhlbWVkID0gUmVhY3QudXNlTWVtbyhmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gW2Zvcm1Db250cm9sVGhlbWVdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhlbWVkKSk7CiAgfSwgW2Zvcm1Db250cm9sVGhlbWUsIHRoZW1lZF0pOwoKICB2YXIgZGVzY3JpcHRpb24gPSBmaWVsZC5kZXNjcmlwdGlvbiwKICAgICAgaXNWYWxpZCA9IGZpZWxkLmlzVmFsaWQ7CgogIHZhciBhcHBlYXJhbmNlID0gYXR0cmlidXRlcy5hcHBlYXJhbmNlLAogICAgICBjaGVja2VkID0gYXR0cmlidXRlcy5jaGVja2VkLAogICAgICBhdHRyaWJ1dGVzUmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhhdHRyaWJ1dGVzLCBbImFwcGVhcmFuY2UiLCAiY2hlY2tlZCJdKTsKCiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQmFzZSwgT2JqZWN0LmFzc2lnbih7CiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMsCiAgICB0aGVtZWQ6IF90aGVtZWQKICB9LCBwcm9wc1Jlc3QsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRm9ybUxhYmVsLCBPYmplY3QuYXNzaWduKHsKICAgIGlkOiBpZAogIH0sIGxhYmVsUHJvcHMsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ2hlY2tCb3gsIE9iamVjdC5hc3NpZ24oewogICAgaWQ6IGlkLAogICAgImRhdGEtcGFyZW50IjogcGFyZW50LAogICAgY2hlY2tlZDogY2hlY2tlZCB8fCBmYWxzZQogIH0sIGF0dHJpYnV0ZXNSZXN0LCBwcm9wc1Jlc3QsIHsKICAgIGFwcGVhcmFuY2U6ICFpc1ZhbGlkID8gJ2Vycm9yJyA6IGFwcGVhcmFuY2UsCiAgICB2YWxpZDogaXNWYWxpZCwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQ0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSkpLCBsYWJlbCksIGRlc2NyaXB0aW9uICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVHlwb2dyYXBoeSwgewogICAgbWFyZ2luVG9wOiAxLAogICAgc3R5bGVkOiAiY29sb3I6ICNhMGEwYTA7IiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDU3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgZGVzY3JpcHRpb24pLCBSZWFjdC5jcmVhdGVFbGVtZW50KEZvcm1WYWxpZGF0aW9uLCB7CiAgICBhdHRyaWJ1dGVzOiBhdHRyaWJ1dGVzLAogICAgZmllbGQ6IGZpZWxkLAogICAgbW9kZWw6IG1vZGVsLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNjIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSk7Cn0KCl9fc2lnbmF0dXJlX18oRm9ybUNoZWNrZWRDb250cm9sLCAidXNlTWVtb3tfdGhlbWVkfSIpOwoKaWYgKHR5cGVvZiBGb3JtQ2hlY2tlZENvbnRyb2wgIT09ICd1bmRlZmluZWQnICYmIEZvcm1DaGVja2VkQ29udHJvbCAmJiBGb3JtQ2hlY2tlZENvbnRyb2wgPT09IE9iamVjdChGb3JtQ2hlY2tlZENvbnRyb2wpICYmIE9iamVjdC5pc0V4dGVuc2libGUoRm9ybUNoZWNrZWRDb250cm9sKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShGb3JtQ2hlY2tlZENvbnRyb2wsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJGb3JtQ2hlY2tlZENvbnRyb2wiLAogICAgICBmaWxlbmFtZTogInNyYy9Gb3JtQ29udHJvbC9Gb3JtQ2hlY2tlZENvbnRyb2wudHN4IgogICAgfQogIH0pOwp9CgpGb3JtQ2hlY2tlZENvbnRyb2wuZGVmYXVsdFByb3BzID0gewogIGNsYXNzTmFtZTogJycsCiAgdGhlbWVkOiBbXQp9Owp2YXIgX2RlZmF1bHQgPSBGb3JtQ2hlY2tlZENvbnRyb2w7CmV4cG9ydCBkZWZhdWx0IF9kZWZhdWx0OwoKaWYgKHR5cGVvZiBGb3JtQ2hlY2tlZENvbnRyb2wgIT09ICd1bmRlZmluZWQnICYmIEZvcm1DaGVja2VkQ29udHJvbCAmJiBGb3JtQ2hlY2tlZENvbnRyb2wgPT09IE9iamVjdChGb3JtQ2hlY2tlZENvbnRyb2wpICYmIE9iamVjdC5pc0V4dGVuc2libGUoRm9ybUNoZWNrZWRDb250cm9sKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShGb3JtQ2hlY2tlZENvbnRyb2wsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJGb3JtQ2hlY2tlZENvbnRyb2wiLAogICAgICBmaWxlbmFtZTogInNyYy9Gb3JtQ29udHJvbC9Gb3JtQ2hlY2tlZENvbnRyb2wudHN4IgogICAgfQogIH0pOwp9Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKENoZWNrQm94LCAiQ2hlY2tCb3giLCAiL21udC9TdG9yYWdlL1Byb2plY3RzL3JlZGVzaWduL3NyYy9Gb3JtQ29udHJvbC9Gb3JtQ2hlY2tlZENvbnRyb2wudHN4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoRm9ybUNoZWNrZWRDb250cm9sLCAiRm9ybUNoZWNrZWRDb250cm9sIiwgIi9tbnQvU3RvcmFnZS9Qcm9qZWN0cy9yZWRlc2lnbi9zcmMvRm9ybUNvbnRyb2wvRm9ybUNoZWNrZWRDb250cm9sLnRzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF9kZWZhdWx0LCAiZGVmYXVsdCIsICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vc3JjL0Zvcm1Db250cm9sL0Zvcm1DaGVja2VkQ29udHJvbC50c3giKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/mnt/Storage/Projects/redesign/src/FormControl/FormCheckedControl.tsx"],"names":["React","formControlTheme","FormLabel","Typography","Base","FormValidation","CheckBox","valid","props","FormCheckedControl","attributes","className","field","id","label","labelProps","model","parent","themed","propsRest","classNames","_themed","useMemo","description","isValid","appearance","checked","attributesRest","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,QAAT,OAMJ;AAAA,MALDC,KAKC,QALDA,KAKC;AAAA,MAJEC,KAIF;;AACD,SAAO,+CAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;;;;;;;;;;;;AAED,OAAO,SAASC,kBAAT,QAWkB;AAAA,MAVvBC,UAUuB,SAVvBA,UAUuB;AAAA,MATvBC,SASuB,SATvBA,SASuB;AAAA,MARvBC,KAQuB,SARvBA,KAQuB;AAAA,MAPvBC,EAOuB,SAPvBA,EAOuB;AAAA,MANvBC,KAMuB,SANvBA,KAMuB;AAAA,MALvBC,UAKuB,SALvBA,UAKuB;AAAA,MAJvBC,KAIuB,SAJvBA,KAIuB;AAAA,MAHvBC,MAGuB,SAHvBA,MAGuB;AAAA,MAFvBC,MAEuB,SAFvBA,MAEuB;AAAA,MADpBC,SACoB;;AACvB,MAAMC,UAAU,gCAAyBT,SAAzB,CAAhB;;AACA,MAAMU,OAAO,GAAGrB,KAAK,CAACsB,OAAN,CAAc;AAAA,YAAOrB,gBAAP,4BAA4BiB,MAA5B;AAAA,GAAd,EAAmD,CACjEjB,gBADiE,EAEjEiB,MAFiE,CAAnD,CAAhB;;AAFuB,MAOfK,WAPe,GAOUX,KAPV,CAOfW,WAPe;AAAA,MAOFC,OAPE,GAOUZ,KAPV,CAOFY,OAPE;;AAAA,MAQfC,UARe,GAQ4Bf,UAR5B,CAQfe,UARe;AAAA,MAQHC,OARG,GAQ4BhB,UAR5B,CAQHgB,OARG;AAAA,MAQSC,cART,4BAQ4BjB,UAR5B;;AAUvB,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEU,UAAjB;AAA6B,IAAA,MAAM,EAAEC;AAArC,KAAkDF,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAEN;AAAf,KAAuBE,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,QAAD;AACE,IAAA,EAAE,EAAEF,EADN;AAEE,mBAAaI,MAFf;AAGE,IAAA,OAAO,EAAES,OAAO,IAAI;AAHtB,KAIMC,cAJN,EAKMR,SALN;AAME,IAAA,UAAU,EAAE,CAACK,OAAD,GAAW,OAAX,GAAqBC,UANnC;AAOE,IAAA,KAAK,EAAED,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAUGV,KAVH,CADF,EAcGS,WAAW,IACV,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE,CAAvB;AAA0B,IAAA,MAAM,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,WADH,CAfJ,EAoBE,oBAAC,cAAD;AAAgB,IAAA,UAAU,EAAEb,UAA5B;AAAwC,IAAA,KAAK,EAAEE,KAA/C;AAAsD,IAAA,KAAK,EAAEI,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF;AAwBD;;cA7CeP,kB;;;;;;;;;;;;;AA+ChBA,kBAAkB,CAACmB,YAAnB,GAAkC;AAChCjB,EAAAA,SAAS,EAAE,EADqB;AAEhCO,EAAAA,MAAM,EAAE;AAFwB,CAAlC;eAKeT,kB;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA9DgBH,Q;0BAUAG,kB","sourcesContent":["import React from 'react';\n\nimport { formControlTheme } from './form-control.theme';\nimport { FormLabel } from './FormLabel';\nimport { Typography } from '../Typography';\nimport { FormControlInterface } from '../Form';\nimport { Base } from '../Base';\nimport { FormValidation } from './FormValidation';\n\nexport function CheckBox({\n  valid,\n  ...props\n}: {\n  valid: false;\n  [key: string]: any;\n}) {\n  return <input {...props} />;\n}\n\nexport function FormCheckedControl({\n  attributes,\n  className,\n  field,\n  id,\n  label,\n  labelProps,\n  model,\n  parent,\n  themed,\n  ...propsRest\n}: FormControlInterface) {\n  const classNames = `FormCheckedControl ${className}`;\n  const _themed = React.useMemo(() => [formControlTheme, ...themed], [\n    formControlTheme,\n    themed,\n  ]);\n\n  const { description, isValid } = field;\n  const { appearance, checked, ...attributesRest } = attributes;\n\n  return (\n    <Base className={classNames} themed={_themed} {...propsRest}>\n      <FormLabel id={id} {...labelProps}>\n        <CheckBox\n          id={id}\n          data-parent={parent}\n          checked={checked || false}\n          {...attributesRest}\n          {...propsRest}\n          appearance={!isValid ? 'error' : appearance}\n          valid={isValid}\n        />\n        {label}\n      </FormLabel>\n\n      {description && (\n        <Typography marginTop={1} styled=\"color: #a0a0a0;\">\n          {description}\n        </Typography>\n      )}\n\n      <FormValidation attributes={attributes} field={field} model={model} />\n    </Base>\n  );\n}\n\nFormCheckedControl.defaultProps = {\n  className: '',\n  themed: [],\n};\n\nexport default FormCheckedControl;\n"]}]}