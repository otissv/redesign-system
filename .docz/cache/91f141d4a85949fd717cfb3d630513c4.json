{"remainingRequest":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js??ref--11-1!/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/redesign/src/Badge/Badge.tsx","dependencies":[{"path":"/mnt/Storage/Projects/redesign/src/Badge/Badge.tsx","mtime":1561583680067},{"path":"/mnt/Storage/Projects/redesign/node_modules/cache-loader/dist/cjs.js","mtime":1558371898492},{"path":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1558369220865},{"path":"/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vc3JjL0JhZGdlL0JhZGdlLnRzeCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdLnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgppbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IEJhc2UgZnJvbSAnLi4vQmFzZS9CYXNlJzsKaW1wb3J0IHsgYmFkZ2VUaGVtZSwgYmFkZ2VBcHBlYXJhbmNlVGhlbWUsIGJhZGdlUGlsbFRoZW1lIH0gZnJvbSAnLi9iYWRnZS50aGVtZSc7CmV4cG9ydCBmdW5jdGlvbiBCYWRnZShfcmVmKSB7CiAgdmFyIGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbiwKICAgICAgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsCiAgICAgIHRoZW1lZCA9IF9yZWYudGhlbWVkLAogICAgICBwcm9wc1Jlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgWyJjaGlsZHJlbiIsICJjbGFzc05hbWUiLCAidGhlbWVkIl0pOwoKICB2YXIgY2xhc3NOYW1lcyA9ICJCYWRnZSAiLmNvbmNhdChjbGFzc05hbWUpOwoKICB2YXIgX3RoZW1lZCA9IHVzZU1lbW8oZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIFtiYWRnZVRoZW1lLCBiYWRnZUFwcGVhcmFuY2VUaGVtZSwgYmFkZ2VQaWxsVGhlbWVdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhlbWVkKSk7CiAgfSwgW2JhZGdlVGhlbWUsIGJhZGdlQXBwZWFyYW5jZVRoZW1lLCBiYWRnZVBpbGxUaGVtZSwgdGhlbWVkXSk7CgogIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEJhc2UsIE9iamVjdC5hc3NpZ24oewogICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzLAogICAgdGhlbWVkOiBfdGhlbWVkCiAgfSwgcHJvcHNSZXN0LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCBjaGlsZHJlbik7Cn0KCl9fc2lnbmF0dXJlX18oQmFkZ2UsICJ1c2VNZW1ve190aGVtZWR9Iik7CgppZiAodHlwZW9mIEJhZGdlICE9PSAndW5kZWZpbmVkJyAmJiBCYWRnZSAmJiBCYWRnZSA9PT0gT2JqZWN0KEJhZGdlKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKEJhZGdlKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShCYWRnZSwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIkJhZGdlIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvQmFkZ2UvQmFkZ2UudHN4IgogICAgfQogIH0pOwp9CgpCYWRnZS5kZWZhdWx0UHJvcHMgPSB7CiAgY2xhc3NOYW1lOiAnJywKICB0aGVtZWQ6IFtdCn07CnZhciBfZGVmYXVsdCA9IEJhZGdlOwpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKCmlmICh0eXBlb2YgQmFkZ2UgIT09ICd1bmRlZmluZWQnICYmIEJhZGdlICYmIEJhZGdlID09PSBPYmplY3QoQmFkZ2UpICYmIE9iamVjdC5pc0V4dGVuc2libGUoQmFkZ2UpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEJhZGdlLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiQmFkZ2UiLAogICAgICBmaWxlbmFtZTogInNyYy9CYWRnZS9CYWRnZS50c3giCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoQmFkZ2UsICJCYWRnZSIsICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vc3JjL0JhZGdlL0JhZGdlLnRzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF9kZWZhdWx0LCAiZGVmYXVsdCIsICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vc3JjL0JhZGdlL0JhZGdlLnRzeCIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/mnt/Storage/Projects/redesign/src/Badge/Badge.tsx"],"names":["React","useMemo","Base","badgeTheme","badgeAppearanceTheme","badgePillTheme","Badge","children","className","themed","propsRest","classNames","_themed","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAGA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SACEC,UADF,EAEEC,oBAFF,EAGEC,cAHF,QAIO,eAJP;AAMA,OAAO,SAASC,KAAT,OAKY;AAAA,MAJjBC,QAIiB,QAJjBA,QAIiB;AAAA,MAHjBC,SAGiB,QAHjBA,SAGiB;AAAA,MAFjBC,MAEiB,QAFjBA,MAEiB;AAAA,MADdC,SACc;;AACjB,MAAMC,UAAU,mBAAYH,SAAZ,CAAhB;;AACA,MAAMI,OAAO,GAAGX,OAAO,CACrB;AAAA,YAAOE,UAAP,EAAmBC,oBAAnB,EAAyCC,cAAzC,4BAA4DI,MAA5D;AAAA,GADqB,EAErB,CAACN,UAAD,EAAaC,oBAAb,EAAmCC,cAAnC,EAAmDI,MAAnD,CAFqB,CAAvB;;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEE,UAAjB;AAA6B,IAAA,MAAM,EAAEC;AAArC,KAAkDF,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGH,QADH,CADF;AAKD;;cAjBeD,K;;;;;;;;;;;;;AAmBhBA,KAAK,CAACO,YAAN,GAAqB;AACnBL,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;eAKeH,K;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAxBgBA,K","sourcesContent":["import React, { useMemo } from 'react';\nimport { BadgeInterface } from './badge.types';\n\nimport Base from '../Base/Base';\nimport {\n  badgeTheme,\n  badgeAppearanceTheme,\n  badgePillTheme,\n} from './badge.theme';\n\nexport function Badge({\n  children,\n  className,\n  themed,\n  ...propsRest\n}: BadgeInterface) {\n  const classNames = `Badge ${className}`;\n  const _themed = useMemo(\n    () => [badgeTheme, badgeAppearanceTheme, badgePillTheme, ...themed],\n    [badgeTheme, badgeAppearanceTheme, badgePillTheme, themed]\n  );\n\n  return (\n    <Base className={classNames} themed={_themed} {...propsRest}>\n      {children}\n    </Base>\n  );\n}\n\nBadge.defaultProps = {\n  className: '',\n  themed: [],\n};\n\nexport default Badge;\n"]}]}