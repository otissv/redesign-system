{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/GoogleMaps/GoogleMaps.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/GoogleMaps/GoogleMaps.js","mtime":1557778588069},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/GoogleMaps/GoogleMaps.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useMemo } from 'react';\nimport Base from '../Base/Base';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nexport function googleMapsTheme(_ref) {\n  var height = _ref.height,\n      width = _ref.width,\n      _ref$theme = _ref.theme,\n      animation = _ref$theme.animation,\n      color = _ref$theme.color,\n      font = _ref$theme.font;\n  return {\n    position: 'relative',\n    textAlign: 'right',\n    height: width,\n    width: height,\n    '.gmap_canvas': {\n      overflow: 'hidden',\n      background: 'none !important',\n      height: 'inherit',\n      width: 'inherit'\n    }\n  };\n}\n\nif (typeof googleMapsTheme !== 'undefined' && googleMapsTheme && googleMapsTheme === Object(googleMapsTheme) && Object.isExtensible(googleMapsTheme)) {\n  Object.defineProperty(googleMapsTheme, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"googleMapsTheme\",\n      filename: \"src/GoogleMaps/GoogleMaps.js\"\n    }\n  });\n}\n\nexport var GoogleMaps = React.memo(function GoogleMaps(_ref2) {\n  var children = _ref2.children,\n      className = _ref2.className,\n      location = _ref2.location,\n      propsThemed = _ref2.themed,\n      propsRest = _objectWithoutProperties(_ref2, [\"children\", \"className\", \"location\", \"themed\"]);\n\n  var classNames = \"GoogleMaps \".concat(className || '');\n  var themed = useMemo(function () {\n    return [googleMapsTheme].concat(_toConsumableArray(propsThemed));\n  }, [googleMapsTheme, propsThemed]);\n  var query = encodeURIComponent(location);\n  return React.createElement(Base, Object.assign({\n    className: classNames,\n    themed: themed\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"gmap_canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"iframe\", {\n    width: propsRest.width,\n    height: propsRest.height,\n    id: \"gmap_canvas\",\n    src: \"https://maps.google.com/maps?q=\".concat(query, \"&t=&z=13&ie=UTF8&iwloc=&output=embed\"),\n    frameBorder: \"0\",\n    scrolling: \"no\",\n    marginHeight: \"0\",\n    marginWidth: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n});\n\nif (typeof GoogleMaps !== 'undefined' && GoogleMaps && GoogleMaps === Object(GoogleMaps) && Object.isExtensible(GoogleMaps)) {\n  Object.defineProperty(GoogleMaps, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"GoogleMaps\",\n      filename: \"src/GoogleMaps/GoogleMaps.js\"\n    }\n  });\n}\n\nGoogleMaps.propTypes = {\n  location: PropTypes.string,\n  height: PropTypes.string,\n  width: PropTypes.string,\n  themed: PropTypes.arrayOf([PropTypes.func])\n};\nGoogleMaps.defaultProps = {\n  height: '300',\n  width: '100%',\n  themed: []\n};\nvar _default = GoogleMaps;\nexport default _default;\n\nif (typeof GoogleMaps !== 'undefined' && GoogleMaps && GoogleMaps === Object(GoogleMaps) && Object.isExtensible(GoogleMaps)) {\n  Object.defineProperty(GoogleMaps, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"GoogleMaps\",\n      filename: \"src/GoogleMaps/GoogleMaps.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(googleMapsTheme, \"googleMapsTheme\", \"/mnt/Storage/Projects/themed-styled-components/src/GoogleMaps/GoogleMaps.js\");\n  reactHotLoader.register(GoogleMaps, \"GoogleMaps\", \"/mnt/Storage/Projects/themed-styled-components/src/GoogleMaps/GoogleMaps.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/GoogleMaps/GoogleMaps.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/GoogleMaps/GoogleMaps.js"],"names":["React","useMemo","Base","styled","PropTypes","googleMapsTheme","height","width","theme","animation","color","font","position","textAlign","overflow","background","GoogleMaps","memo","children","className","location","propsThemed","themed","propsRest","classNames","query","encodeURIComponent","propTypes","string","arrayOf","func","defaultProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,SAASC,eAAT,OAIJ;AAAA,MAHDC,MAGC,QAHDA,MAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,wBADDC,KACC;AAAA,MADQC,SACR,cADQA,SACR;AAAA,MADmBC,KACnB,cADmBA,KACnB;AAAA,MAD0BC,IAC1B,cAD0BA,IAC1B;AACD,SAAO;AACLC,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,SAAS,EAAE,OAFN;AAGLP,IAAAA,MAAM,EAAEC,KAHH;AAILA,IAAAA,KAAK,EAAED,MAJF;AAML,oBAAgB;AACdQ,MAAAA,QAAQ,EAAE,QADI;AAEdC,MAAAA,UAAU,EAAE,iBAFE;AAGdT,MAAAA,MAAM,EAAE,SAHM;AAIdC,MAAAA,KAAK,EAAE;AAJO;AANX,GAAP;AAaD;;;;;;;;;;;;;AAED,OAAO,IAAMS,UAAU,GAAGhB,KAAK,CAACiB,IAAN,CAAW,SAASD,UAAT,QAMlC;AAAA,MALDE,QAKC,SALDA,QAKC;AAAA,MAJDC,SAIC,SAJDA,SAIC;AAAA,MAHDC,QAGC,SAHDA,QAGC;AAAA,MAFOC,WAEP,SAFDC,MAEC;AAAA,MADEC,SACF;;AACD,MAAMC,UAAU,wBAAiBL,SAAS,IAAI,EAA9B,CAAhB;AACA,MAAMG,MAAM,GAAGrB,OAAO,CAAC;AAAA,YAAOI,eAAP,4BAA2BgB,WAA3B;AAAA,GAAD,EAA0C,CAC9DhB,eAD8D,EAE9DgB,WAF8D,CAA1C,CAAtB;AAKA,MAAMI,KAAK,GAAGC,kBAAkB,CAACN,QAAD,CAAhC;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEI,UAAjB;AAA6B,IAAA,MAAM,EAAEF;AAArC,KAAiDC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAK,IAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAEA,SAAS,CAAChB,KADnB;AAEE,IAAA,MAAM,EAAEgB,SAAS,CAACjB,MAFpB;AAGE,IAAA,EAAE,EAAC,aAHL;AAIE,IAAA,GAAG,2CAAoCmB,KAApC,yCAJL;AAKE,IAAA,WAAW,EAAC,GALd;AAME,IAAA,SAAS,EAAC,IANZ;AAOE,IAAA,YAAY,EAAC,GAPf;AAQE,IAAA,WAAW,EAAC,GARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAgBD,CA/ByB,CAAnB;;;;;;;;;;;;;AAiCPT,UAAU,CAACW,SAAX,GAAuB;AACrBP,EAAAA,QAAQ,EAAEhB,SAAS,CAACwB,MADC;AAErBtB,EAAAA,MAAM,EAAEF,SAAS,CAACwB,MAFG;AAGrBrB,EAAAA,KAAK,EAAEH,SAAS,CAACwB,MAHI;AAIrBN,EAAAA,MAAM,EAAElB,SAAS,CAACyB,OAAV,CAAkB,CAACzB,SAAS,CAAC0B,IAAX,CAAlB;AAJa,CAAvB;AAOAd,UAAU,CAACe,YAAX,GAA0B;AACxBzB,EAAAA,MAAM,EAAE,KADgB;AAExBC,EAAAA,KAAK,EAAE,MAFiB;AAGxBe,EAAAA,MAAM,EAAE;AAHgB,CAA1B;eAMeN,U;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAlEgBX,e;0BAoBHW,U","sourcesContent":["import React, { useMemo } from 'react'\n\nimport Base from '../Base/Base'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nexport function googleMapsTheme({\n  height,\n  width,\n  theme: { animation, color, font },\n}) {\n  return {\n    position: 'relative',\n    textAlign: 'right',\n    height: width,\n    width: height,\n\n    '.gmap_canvas': {\n      overflow: 'hidden',\n      background: 'none !important',\n      height: 'inherit',\n      width: 'inherit',\n    },\n  }\n}\n\nexport const GoogleMaps = React.memo(function GoogleMaps({\n  children,\n  className,\n  location,\n  themed: propsThemed,\n  ...propsRest\n}) {\n  const classNames = `GoogleMaps ${className || ''}`\n  const themed = useMemo(() => [googleMapsTheme, ...propsThemed], [\n    googleMapsTheme,\n    propsThemed,\n  ])\n\n  const query = encodeURIComponent(location)\n\n  return (\n    <Base className={classNames} themed={themed} {...propsRest}>\n      <div class=\"gmap_canvas\">\n        <iframe\n          width={propsRest.width}\n          height={propsRest.height}\n          id=\"gmap_canvas\"\n          src={`https://maps.google.com/maps?q=${query}&t=&z=13&ie=UTF8&iwloc=&output=embed`}\n          frameBorder=\"0\"\n          scrolling=\"no\"\n          marginHeight=\"0\"\n          marginWidth=\"0\"\n        />\n      </div>\n    </Base>\n  )\n})\n\nGoogleMaps.propTypes = {\n  location: PropTypes.string,\n  height: PropTypes.string,\n  width: PropTypes.string,\n  themed: PropTypes.arrayOf([PropTypes.func]),\n}\n\nGoogleMaps.defaultProps = {\n  height: '300',\n  width: '100%',\n  themed: [],\n}\n\nexport default GoogleMaps\n"]}]}