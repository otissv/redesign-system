{"remainingRequest":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js??ref--11-1!/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/redesign/src/reusable/cacheState/useCacheState.ts","dependencies":[{"path":"/mnt/Storage/Projects/redesign/src/reusable/cacheState/useCacheState.ts","mtime":1561589822636},{"path":"/mnt/Storage/Projects/redesign/node_modules/cache-loader/dist/cjs.js","mtime":1558371898492},{"path":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1558369220865},{"path":"/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9tbnQvU3RvcmFnZS9Qcm9qZWN0cy9yZWRlc2lnbi9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdLnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgppbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnOwpleHBvcnQgZnVuY3Rpb24gdXNlQ2FjaGVTdGF0ZShrZXksIGluaXRpYWxTdGF0ZSwgc3RvcmFnZSkgewogIHZhciBfdXNlU3RhdGUgPSB1c2VTdGF0ZShpbml0aWFsU3RhdGUpLAogICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgc3RhdGUgPSBfdXNlU3RhdGUyWzBdLAogICAgICBzZXRTdGF0ZSA9IF91c2VTdGF0ZTJbMV07CgogIHZhciB3aW5kb3dTdG9yYWdlID0gc3RvcmFnZSA9PT0gJ3Nlc3Npb25TdG9yYWdlJyA/IHdpbmRvdy5zZXNzaW9uU3RvcmFnZSA6IHdpbmRvdy5sb2NhbFN0b3JhZ2U7CiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHsKICAgIHZhciBjYWNoZWQgPSB3aW5kb3dTdG9yYWdlLmdldEl0ZW0oa2V5KTsKICAgIHZhciBkYXRhID0gIWNhY2hlZCA/IGNhY2hlZCA6IEpTT04ucGFyc2UoY2FjaGVkKTsKICAgIHNldEl0ZW0oZGF0YSB8fCBpbml0aWFsU3RhdGUpOwogIH0sIFtdKTsKCiAgZnVuY3Rpb24gc2V0SXRlbShuZXdTdGF0ZSkgewogICAgaWYgKG5ld1N0YXRlID09PSBzdGF0ZSkgcmV0dXJuOwogICAgdmFyIGRhdGEgPSBKU09OLnN0cmluZ2lmeShuZXdTdGF0ZSk7CiAgICBzZXRTdGF0ZShuZXdTdGF0ZSk7CiAgICByZXR1cm4gd2luZG93U3RvcmFnZS5zZXRJdGVtKGtleSwgZGF0YSk7CiAgfQoKICBmdW5jdGlvbiByZW1vdmVJdGVtKCkgewogICAgc2V0U3RhdGUodW5kZWZpbmVkKTsKICAgIHdpbmRvd1N0b3JhZ2UucmVtb3ZlSXRlbShrZXkpOwogIH0KCiAgcmV0dXJuIHVzZU1lbW8oZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgc3RhdGU6IHN0YXRlLAogICAgICBzZXRJdGVtOiBzZXRJdGVtLAogICAgICByZW1vdmVJdGVtOiByZW1vdmVJdGVtCiAgICB9OwogIH0sIFtbc3RhdGUsIHNldEl0ZW0sIHJlbW92ZUl0ZW1dXSk7Cn0KCl9fc2lnbmF0dXJlX18odXNlQ2FjaGVTdGF0ZSwgInVzZVN0YXRle1tzdGF0ZSwgc2V0U3RhdGVdKGluaXRpYWxTdGF0ZSl9XG51c2VFZmZlY3R7fVxudXNlTWVtb3t9Iik7CgppZiAodHlwZW9mIHVzZUNhY2hlU3RhdGUgIT09ICd1bmRlZmluZWQnICYmIHVzZUNhY2hlU3RhdGUgJiYgdXNlQ2FjaGVTdGF0ZSA9PT0gT2JqZWN0KHVzZUNhY2hlU3RhdGUpICYmIE9iamVjdC5pc0V4dGVuc2libGUodXNlQ2FjaGVTdGF0ZSkpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkodXNlQ2FjaGVTdGF0ZSwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogInVzZUNhY2hlU3RhdGUiLAogICAgICBmaWxlbmFtZTogInNyYy9yZXVzYWJsZS9jYWNoZVN0YXRlL3VzZUNhY2hlU3RhdGUudHMiCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIodXNlQ2FjaGVTdGF0ZSwgInVzZUNhY2hlU3RhdGUiLCAiL21udC9TdG9yYWdlL1Byb2plY3RzL3JlZGVzaWduL3NyYy9yZXVzYWJsZS9jYWNoZVN0YXRlL3VzZUNhY2hlU3RhdGUudHMiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/mnt/Storage/Projects/redesign/src/reusable/cacheState/useCacheState.ts"],"names":["useState","useEffect","useMemo","useCacheState","key","initialState","storage","state","setState","windowStorage","window","sessionStorage","localStorage","cached","getItem","data","JSON","parse","setItem","newState","stringify","removeItem","undefined"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AAEA,OAAO,SAASC,aAAT,CACLC,GADK,EAELC,YAFK,EAGLC,OAHK,EAIL;AAAA,kBAC0BN,QAAQ,CAACK,YAAD,CADlC;AAAA;AAAA,MACOE,KADP;AAAA,MACcC,QADd;;AAGA,MAAMC,aAAa,GACjBH,OAAO,KAAK,gBAAZ,GAA+BI,MAAM,CAACC,cAAtC,GAAuDD,MAAM,CAACE,YADhE;AAGAX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMY,MAAM,GAAGJ,aAAa,CAACK,OAAd,CAAsBV,GAAtB,CAAf;AACA,QAAMW,IAAI,GAAG,CAACF,MAAD,GAAUA,MAAV,GAAmBG,IAAI,CAACC,KAAL,CAAWJ,MAAX,CAAhC;AAEAK,IAAAA,OAAO,CAACH,IAAI,IAAIV,YAAT,CAAP;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,WAASa,OAAT,CAAiBC,QAAjB,EAA8B;AAC5B,QAAIA,QAAQ,KAAKZ,KAAjB,EAAwB;AACxB,QAAMQ,IAAI,GAAGC,IAAI,CAACI,SAAL,CAAeD,QAAf,CAAb;AAEAX,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACA,WAAOV,aAAa,CAACS,OAAd,CAAsBd,GAAtB,EAA2BW,IAA3B,CAAP;AACD;;AAED,WAASM,UAAT,GAAsB;AACpBb,IAAAA,QAAQ,CAACc,SAAD,CAAR;AACAb,IAAAA,aAAa,CAACY,UAAd,CAAyBjB,GAAzB;AACD;;AAED,SAAOF,OAAO,CAAC;AAAA,WAAO;AAAEK,MAAAA,KAAK,EAALA,KAAF;AAASW,MAAAA,OAAO,EAAPA,OAAT;AAAkBG,MAAAA,UAAU,EAAVA;AAAlB,KAAP;AAAA,GAAD,EAAyC,CACrD,CAACd,KAAD,EAAQW,OAAR,EAAiBG,UAAjB,CADqD,CAAzC,CAAd;AAGD;;cAjCelB,a;;;;;;;;;;;;;;;;;;;;;;0BAAAA,a","sourcesContent":["import { useState, useEffect, useMemo } from 'react';\n\nexport function useCacheState<T>(\n  key: string,\n  initialState?: T,\n  storage?: string\n) {\n  const [state, setState] = useState(initialState);\n\n  const windowStorage =\n    storage === 'sessionStorage' ? window.sessionStorage : window.localStorage;\n\n  useEffect(() => {\n    const cached = windowStorage.getItem(key);\n    const data = !cached ? cached : JSON.parse(cached);\n\n    setItem(data || initialState);\n  }, []);\n\n  function setItem(newState: T) {\n    if (newState === state) return;\n    const data = JSON.stringify(newState);\n\n    setState(newState);\n    return windowStorage.setItem(key, data);\n  }\n\n  function removeItem() {\n    setState(undefined);\n    windowStorage.removeItem(key);\n  }\n\n  return useMemo(() => ({ state, setItem, removeItem }), [\n    [state, setItem, removeItem],\n  ]);\n}\n"]}]}