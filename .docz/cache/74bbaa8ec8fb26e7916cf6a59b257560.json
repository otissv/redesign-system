{"remainingRequest":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js??ref--11-1!/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/redesign/src/reusable/collectionHash/collectionHashReducer.ts","dependencies":[{"path":"/mnt/Storage/Projects/redesign/src/reusable/collectionHash/collectionHashReducer.ts","mtime":1561629330573},{"path":"/mnt/Storage/Projects/redesign/node_modules/cache-loader/dist/cjs.js","mtime":1558371898492},{"path":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1558369220865},{"path":"/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL21udC9TdG9yYWdlL1Byb2plY3RzL3JlZGVzaWduL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQiOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWxbImRlZmF1bHQiXS5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogIHJldHVybiBhOwp9OwoKaW1wb3J0IHsgdXNlUmVkdWNlciB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgQ09MTEVDVElPTl9IQVNIX0lOSVRJQUxfU1RBVEUgfSBmcm9tICcuL2NvbGxlY3Rpb25IYXNoQ29uc3RhbnRzJzsKCnZhciBidWlsZEluaXRpYWxWYWx1ZSA9IGZ1bmN0aW9uIGJ1aWxkSW5pdGlhbFZhbHVlKGluaXRpYWxTdGF0ZSkgewogIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBDT0xMRUNUSU9OX0hBU0hfSU5JVElBTF9TVEFURSwgaW5pdGlhbFN0YXRlKTsKfTsKCmV4cG9ydCB2YXIgY3JlYXRlSW5pdGlhbFN0YXRlID0gZnVuY3Rpb24gY3JlYXRlSW5pdGlhbFN0YXRlKGluaXRpYWxTdGF0ZSkgewogIHJldHVybiBidWlsZEluaXRpYWxWYWx1ZShpbml0aWFsU3RhdGUpOwp9OwoKaWYgKHR5cGVvZiBjcmVhdGVJbml0aWFsU3RhdGUgIT09ICd1bmRlZmluZWQnICYmIGNyZWF0ZUluaXRpYWxTdGF0ZSAmJiBjcmVhdGVJbml0aWFsU3RhdGUgPT09IE9iamVjdChjcmVhdGVJbml0aWFsU3RhdGUpICYmIE9iamVjdC5pc0V4dGVuc2libGUoY3JlYXRlSW5pdGlhbFN0YXRlKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjcmVhdGVJbml0aWFsU3RhdGUsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJjcmVhdGVJbml0aWFsU3RhdGUiLAogICAgICBmaWxlbmFtZTogInNyYy9yZXVzYWJsZS9jb2xsZWN0aW9uSGFzaC9jb2xsZWN0aW9uSGFzaFJlZHVjZXIudHMiCiAgICB9CiAgfSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBpdGVtc1RvQXJyYXkoaXRlbXMpIHsKICB2YXIgbGlzdCA9IFtdOwoKICBmb3IgKHZhciBpdGVtIGluIGl0ZW1zKSB7CiAgICBsaXN0LnB1c2goaXRlbXNbaXRlbV0pOwogIH0KCiAgcmV0dXJuIGxpc3Q7Cn0KCmlmICh0eXBlb2YgaXRlbXNUb0FycmF5ICE9PSAndW5kZWZpbmVkJyAmJiBpdGVtc1RvQXJyYXkgJiYgaXRlbXNUb0FycmF5ID09PSBPYmplY3QoaXRlbXNUb0FycmF5KSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKGl0ZW1zVG9BcnJheSkpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaXRlbXNUb0FycmF5LCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiaXRlbXNUb0FycmF5IiwKICAgICAgZmlsZW5hbWU6ICJzcmMvcmV1c2FibGUvY29sbGVjdGlvbkhhc2gvY29sbGVjdGlvbkhhc2hSZWR1Y2VyLnRzIgogICAgfQogIH0pOwp9CgpleHBvcnQgdmFyIHVzZUNvbGxlY3Rpb25IYXNoUmVkdWNlciA9IGZ1bmN0aW9uIHVzZUNvbGxlY3Rpb25IYXNoUmVkdWNlcihleHRlbmRSZWR1Y2VyLCBpbml0aWFsU3RhdGUpIHsKICB2YXIgaW5pdGlhbFZhbHVlID0gYnVpbGRJbml0aWFsVmFsdWUoaW5pdGlhbFN0YXRlKTsKCiAgZnVuY3Rpb24gcmVtb3ZlSXRlbShsaXN0LCBpdGVtc1RvUmVtb3ZlKSB7CiAgICB2YXIgaXRlbXMgPSB7fTsKCiAgICBmb3IgKHZhciBpdGVtIGluIGxpc3QpIHsKICAgICAgaWYgKCFpdGVtc1RvUmVtb3ZlLmluY2x1ZGVzKGl0ZW0pKSB7CiAgICAgICAgaXRlbXNbaXRlbV0gPSBsaXN0W2l0ZW1dOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIGl0ZW1zOwogIH0KCiAgZnVuY3Rpb24gdHJhbnNmb3JtQ29sbGVjdGlvblRvT2JqZWN0KGl0ZW1zKSB7CiAgICBpZiAoIUFycmF5LmlzQXJyYXkoaXRlbXMpKSB7CiAgICAgIHJldHVybiB1bmRlZmluZWQ7CiAgICB9CgogICAgdmFyIHJlZHVjZXIgPSBmdW5jdGlvbiByZWR1Y2VyKGFjYywgaXRlbSkgewogICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgYWNjLCBfZGVmaW5lUHJvcGVydHkoe30sIGl0ZW1baW5pdGlhbFZhbHVlLnVpZF0sIGl0ZW0pKTsKICAgIH07CgogICAgcmV0dXJuIGl0ZW1zLnJlZHVjZShyZWR1Y2VyLCB7fSk7CiAgfQoKICBmdW5jdGlvbiByZWR1Y2VyKHN0YXRlLCBhY3Rpb24sIGluaXRpYWxWYWx1ZSwgZXh0ZW5kUmVkdWNlcikgewogICAgdmFyIG5vdEFycmF5ID0gZnVuY3Rpb24gbm90QXJyYXkodmFsdWUpIHsKICAgICAgcmV0dXJuICFBcnJheS5pc0FycmF5KHZhbHVlKTsKICAgIH07CgogICAgdmFyIG5vdFN0cmluZyA9IGZ1bmN0aW9uIG5vdFN0cmluZyh2YWx1ZSkgewogICAgICByZXR1cm4gdHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJzsKICAgIH07CgogICAgdmFyIG5vdERlZmluZWQgPSBmdW5jdGlvbiBub3REZWZpbmVkKHZhbHVlKSB7CiAgICAgIHJldHVybiB2YWx1ZSA9PSBudWxsOwogICAgfTsKCiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7CiAgICAgIGNhc2UgJ0lOU0VSVF9JVEVNUyc6CiAgICAgICAgewogICAgICAgICAgdmFyIGl0ZW1zID0gQXJyYXkuaXNBcnJheShhY3Rpb24uaXRlbXMpID8gdHJhbnNmb3JtQ29sbGVjdGlvblRvT2JqZWN0KGFjdGlvbi5pdGVtcykgOiBfZGVmaW5lUHJvcGVydHkoe30sIGFjdGlvbi5pdGVtc1tpbml0aWFsVmFsdWUudWlkXSwgYWN0aW9uLml0ZW1zKTsKICAgICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZSwgewogICAgICAgICAgICBpdGVtczogX29iamVjdFNwcmVhZCh7fSwgc3RhdGUuaXRlbXMsIGl0ZW1zKQogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgY2FzZSAnUkVEVUNFUic6CiAgICAgICAgewogICAgICAgICAgcmV0dXJuIGFjdGlvbi5yZWR1Y2VyKHN0YXRlKTsKICAgICAgICB9CgogICAgICBjYXNlICdSRU1PVkVfSVRFTVMnOgogICAgICAgIHsKICAgICAgICAgIGlmIChub3RBcnJheShhY3Rpb24ucmVtb3ZlKSkgewogICAgICAgICAgICByZXR1cm4gc3RhdGU7CiAgICAgICAgICB9CgogICAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLCB7CiAgICAgICAgICAgIGFjdGl2ZTogYWN0aW9uLnJlbW92ZS5pbmNsdWRlcyhzdGF0ZS5hY3RpdmUpID8gJycgOiBzdGF0ZS5hY3RpdmUsCiAgICAgICAgICAgIHNlbGVjdGVkOiBzdGF0ZS5zZWxlY3RlZC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICByZXR1cm4gIWFjdGlvbi5yZW1vdmUuaW5jbHVkZXMoaXRlbSk7CiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBpdGVtczogcmVtb3ZlSXRlbShzdGF0ZS5pdGVtcywgYWN0aW9uLnJlbW92ZSkKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgIGNhc2UgJ1JFUExBQ0VfSVRFTVMnOgogICAgICAgIHsKICAgICAgICAgIHZhciB0cmFuc2Zvcm1lZERhdGEgPSB0cmFuc2Zvcm1Db2xsZWN0aW9uVG9PYmplY3QoYWN0aW9uLml0ZW1zKTsKICAgICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZSwgewogICAgICAgICAgICBpdGVtczogdHJhbnNmb3JtZWREYXRhCiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICBjYXNlICdSRVNFVCc6CiAgICAgICAgewogICAgICAgICAgcmV0dXJuIGluaXRpYWxWYWx1ZTsKICAgICAgICB9CgogICAgICBjYXNlICdTRVRfQUNUSVZFJzoKICAgICAgICB7CiAgICAgICAgICBpZiAobm90U3RyaW5nKGFjdGlvbi5hY3RpdmUpKSB7CiAgICAgICAgICAgIHJldHVybiBzdGF0ZTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgc3RhdGUsIHsKICAgICAgICAgICAgYWN0aXZlOiBub3REZWZpbmVkKGFjdGlvbi5hY3RpdmUpID8gJycgOiBhY3Rpb24uYWN0aXZlLnRyaW0oKQogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgY2FzZSAnU0VUX0xPQURJTkcnOgogICAgICAgIHsKICAgICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZSwgewogICAgICAgICAgICBsb2FkaW5nOiAhIWFjdGlvbi5sb2FkaW5nCiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICBjYXNlICdTRVRfU0VMRUNURUQnOgogICAgICAgIHsKICAgICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZSwgewogICAgICAgICAgICBzZWxlY3RlZDogYWN0aW9uLnNlbGVjdGVkCiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICBjYXNlICdUT0dHTEVfU0VMRUNURURfSVRFTVMnOgogICAgICAgIHsKICAgICAgICAgIHZhciBzZWxlY3RlZCA9IF90b0NvbnN1bWFibGVBcnJheShzdGF0ZS5zZWxlY3RlZCk7CgogICAgICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlOwogICAgICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7CiAgICAgICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7CgogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gYWN0aW9uLnNlbGVjdGVkW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkgewogICAgICAgICAgICAgIHZhciBzZWxlY3QgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgICAgICB2YXIgaW5kZXggPSBzZWxlY3RlZC5pbmRleE9mKHNlbGVjdCk7CgogICAgICAgICAgICAgIHZhciBfc2VsZWN0ID0gc2VsZWN0LnRyaW0oKTsKCiAgICAgICAgICAgICAgaWYgKHN0YXRlLml0ZW1zW2luZGV4XSkgewogICAgICAgICAgICAgICAgc2VsZWN0ZWQgPSBpbmRleCA9PT0gMCA/IHNlbGVjdGVkLnNsaWNlKDEpIDogaW5kZXggPT09IHNlbGVjdGVkLmxlbmd0aCAtIDEgPyBzZWxlY3RlZC5zbGljZSgwLCBzZWxlY3RlZC5sZW5ndGggLSAxKSA6IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoc2VsZWN0ZWQuc2xpY2UoMCwgaW5kZXgpKSwgX3RvQ29uc3VtYWJsZUFycmF5KHNlbGVjdGVkLnNsaWNlKGluZGV4ICsgMSkpKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgc2VsZWN0ZWQucHVzaChfc2VsZWN0KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7CiAgICAgICAgICAgIF9pdGVyYXRvckVycm9yID0gZXJyOwogICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yWyJyZXR1cm4iXSAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICBfaXRlcmF0b3JbInJldHVybiJdKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikgewogICAgICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLCB7CiAgICAgICAgICAgIHNlbGVjdGVkOiBzZWxlY3RlZAogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgY2FzZSAnVVBEQVRFX0lURU0nOgogICAgICAgIHsKICAgICAgICAgIGlmICghc3RhdGUuaXRlbXNbYWN0aW9uLnNlbGVjdF0pIHsKICAgICAgICAgICAgcmV0dXJuIHN0YXRlOwogICAgICAgICAgfQoKICAgICAgICAgIHZhciBpdGVtID0gX2RlZmluZVByb3BlcnR5KHt9LCBhY3Rpb24uaXRlbS5uYW1lIHx8IGFjdGlvbi5zZWxlY3QsIF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLml0ZW1zW2FjdGlvbi5zZWxlY3RdLCBhY3Rpb24uaXRlbSkpOwoKICAgICAgICAgIHZhciB1cGRhdGVJdGVtSW5MaXN0ID0gZnVuY3Rpb24gdXBkYXRlSXRlbUluTGlzdCgpIHsKICAgICAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLml0ZW1zLCBpdGVtKTsKICAgICAgICAgIH07CgogICAgICAgICAgdmFyIHJlbW92ZUNsb25lQW5kVXBkYXRlSXRlbSA9IGZ1bmN0aW9uIHJlbW92ZUNsb25lQW5kVXBkYXRlSXRlbSgpIHsKICAgICAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHJlbW92ZUl0ZW0oc3RhdGUuaXRlbXMsIFthY3Rpb24uc2VsZWN0XSksIGl0ZW0pOwogICAgICAgICAgfTsKCiAgICAgICAgICB2YXIgdXBkYXRlZEl0ZW1zID0gYWN0aW9uLml0ZW1baW5pdGlhbFZhbHVlLnVpZF0gPyByZW1vdmVDbG9uZUFuZFVwZGF0ZUl0ZW0oKSA6IHVwZGF0ZUl0ZW1Jbkxpc3QoKTsKCiAgICAgICAgICB2YXIgc2V0U2VsZWN0ZWRJdGVtID0gZnVuY3Rpb24gc2V0U2VsZWN0ZWRJdGVtKGxpc3QsIGl0ZW0sIHVwZGF0ZSkgewogICAgICAgICAgICB2YXIgcmVwbGFjZVNlbGVjdGVkSXRlbSA9IGZ1bmN0aW9uIHJlcGxhY2VTZWxlY3RlZEl0ZW0oKSB7CiAgICAgICAgICAgICAgdmFyIGluZGV4ID0gbGlzdC5pbmRleE9mKGl0ZW0pOwogICAgICAgICAgICAgIHJldHVybiBpbmRleCA9PT0gMCA/IFt1cGRhdGVdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkobGlzdC5zbGljZSgxKSkpIDogaW5kZXggPT09IGxpc3QubGVuZ3RoIC0gMSA/IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkobGlzdC5zbGljZSgwLCBsaXN0Lmxlbmd0aCAtIDEpKSwgW3VwZGF0ZV0pIDogW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShsaXN0LnNsaWNlKDAsIGluZGV4KSksIFt1cGRhdGVdLCBfdG9Db25zdW1hYmxlQXJyYXkobGlzdC5zbGljZShpbmRleCArIDEpKSk7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICByZXR1cm4gc3RhdGUuc2VsZWN0ZWQuaW5jbHVkZXMoYWN0aW9uLnNlbGVjdCkgPyByZXBsYWNlU2VsZWN0ZWRJdGVtKCkgOiBzdGF0ZS5zZWxlY3RlZDsKICAgICAgICAgIH07CgogICAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLCB7CiAgICAgICAgICAgIGFjdGl2ZTogc3RhdGUuYWN0aXZlID09PSBhY3Rpb24uc2VsZWN0ID8gYWN0aW9uLml0ZW0ubmFtZSA6IHN0YXRlLmFjdGl2ZSwKICAgICAgICAgICAgc2VsZWN0ZWQ6IHNldFNlbGVjdGVkSXRlbShzdGF0ZS5zZWxlY3RlZCwgYWN0aW9uLnNlbGVjdCwgYWN0aW9uLml0ZW0ubmFtZSksCiAgICAgICAgICAgIGl0ZW1zOiB1cGRhdGVkSXRlbXMKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgIGRlZmF1bHQ6CiAgICAgICAgcmV0dXJuIGV4dGVuZFJlZHVjZXIgPyBleHRlbmRSZWR1Y2VyKHN0YXRlLCBhY3Rpb24pIDogc3RhdGU7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBjcnVkUmVkdWNlcihzdGF0ZSwgYWN0aW9uKSB7CiAgICByZXR1cm4gcmVkdWNlcihzdGF0ZSwgYWN0aW9uLCBpbml0aWFsVmFsdWUsIGV4dGVuZFJlZHVjZXIpOwogIH0KCiAgcmV0dXJuIHVzZVJlZHVjZXIoY3J1ZFJlZHVjZXIsIGluaXRpYWxWYWx1ZSk7Cn07CgpfX3NpZ25hdHVyZV9fKHVzZUNvbGxlY3Rpb25IYXNoUmVkdWNlciwgInVzZVJlZHVjZXJ7KGluaXRpYWxWYWx1ZSl9Iik7CgppZiAodHlwZW9mIHVzZUNvbGxlY3Rpb25IYXNoUmVkdWNlciAhPT0gJ3VuZGVmaW5lZCcgJiYgdXNlQ29sbGVjdGlvbkhhc2hSZWR1Y2VyICYmIHVzZUNvbGxlY3Rpb25IYXNoUmVkdWNlciA9PT0gT2JqZWN0KHVzZUNvbGxlY3Rpb25IYXNoUmVkdWNlcikgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZSh1c2VDb2xsZWN0aW9uSGFzaFJlZHVjZXIpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHVzZUNvbGxlY3Rpb25IYXNoUmVkdWNlciwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogInVzZUNvbGxlY3Rpb25IYXNoUmVkdWNlciIsCiAgICAgIGZpbGVuYW1lOiAic3JjL3JldXNhYmxlL2NvbGxlY3Rpb25IYXNoL2NvbGxlY3Rpb25IYXNoUmVkdWNlci50cyIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihidWlsZEluaXRpYWxWYWx1ZSwgImJ1aWxkSW5pdGlhbFZhbHVlIiwgIi9tbnQvU3RvcmFnZS9Qcm9qZWN0cy9yZWRlc2lnbi9zcmMvcmV1c2FibGUvY29sbGVjdGlvbkhhc2gvY29sbGVjdGlvbkhhc2hSZWR1Y2VyLnRzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoY3JlYXRlSW5pdGlhbFN0YXRlLCAiY3JlYXRlSW5pdGlhbFN0YXRlIiwgIi9tbnQvU3RvcmFnZS9Qcm9qZWN0cy9yZWRlc2lnbi9zcmMvcmV1c2FibGUvY29sbGVjdGlvbkhhc2gvY29sbGVjdGlvbkhhc2hSZWR1Y2VyLnRzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoaXRlbXNUb0FycmF5LCAiaXRlbXNUb0FycmF5IiwgIi9tbnQvU3RvcmFnZS9Qcm9qZWN0cy9yZWRlc2lnbi9zcmMvcmV1c2FibGUvY29sbGVjdGlvbkhhc2gvY29sbGVjdGlvbkhhc2hSZWR1Y2VyLnRzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIodXNlQ29sbGVjdGlvbkhhc2hSZWR1Y2VyLCAidXNlQ29sbGVjdGlvbkhhc2hSZWR1Y2VyIiwgIi9tbnQvU3RvcmFnZS9Qcm9qZWN0cy9yZWRlc2lnbi9zcmMvcmV1c2FibGUvY29sbGVjdGlvbkhhc2gvY29sbGVjdGlvbkhhc2hSZWR1Y2VyLnRzIik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/mnt/Storage/Projects/redesign/src/reusable/collectionHash/collectionHashReducer.ts"],"names":["useReducer","COLLECTION_HASH_INITIAL_STATE","buildInitialValue","initialState","createInitialState","itemsToArray","items","list","item","push","useCollectionHashReducer","extendReducer","initialValue","removeItem","itemsToRemove","includes","transformCollectionToObject","Array","isArray","undefined","reducer","acc","uid","reduce","state","action","notArray","value","notString","notDefined","type","remove","active","selected","filter","transformedData","trim","loading","select","index","indexOf","_select","slice","length","name","updateItemInList","removeCloneAndUpdateItem","updatedItems","setSelectedItem","update","replaceSelectedItem","crudReducer"],"mappings":"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","sourcesContent":["import { useReducer } from 'react';\nimport { COLLECTION_HASH_INITIAL_STATE } from './collectionHashConstants';\nimport {\n  BuildInitialValueType,\n  CollectionHashActionType,\n  CollectionHashInitialValueType,\n  CollectionHashReducerType,\n  CollectionHashStateType,\n  ReducerType,\n} from './collectionHash.types';\n\nconst buildInitialValue: BuildInitialValueType = initialState => ({\n  ...COLLECTION_HASH_INITIAL_STATE,\n  ...initialState,\n});\n\nexport const createInitialState: BuildInitialValueType = initialState =>\n  buildInitialValue(initialState);\n\nexport function itemsToArray(items: { [key: string]: any }) {\n  let list = [];\n\n  for (let item in items) {\n    list.push(items[item]);\n  }\n\n  return list;\n}\n\nexport const useCollectionHashReducer: CollectionHashReducerType = function useCollectionHashReducer(\n  extendReducer,\n  initialState\n) {\n  const initialValue: CollectionHashInitialValueType = buildInitialValue(\n    initialState\n  );\n\n  function removeItem(list: { [key: string]: string }, itemsToRemove: any[]) {\n    let items: { [key: string]: string } = {};\n\n    for (let item in list) {\n      if (!itemsToRemove.includes(item)) {\n        items[item] = list[item];\n      }\n    }\n\n    return items;\n  }\n\n  function transformCollectionToObject(items: any[]) {\n    if (!Array.isArray(items)) {\n      return undefined;\n    }\n\n    const reducer = (acc: { [key: string]: string }, item: any) => ({\n      ...acc,\n      [item[initialValue.uid]]: item,\n    });\n    return items.reduce(reducer, {});\n  }\n\n  function reducer(\n    state: CollectionHashStateType,\n    action: CollectionHashActionType,\n    initialValue: CollectionHashInitialValueType,\n    extendReducer: ReducerType\n  ) {\n    const notArray = (value: any) => !Array.isArray(value);\n    const notString = (value: any) => typeof value !== 'string';\n    const notDefined = (value: any) => value == null;\n\n    switch (action.type) {\n      case 'INSERT_ITEMS': {\n        const items = Array.isArray(action.items)\n          ? transformCollectionToObject(action.items)\n          : {\n              [action.items[initialValue.uid]]: action.items,\n            };\n        return {\n          ...state,\n          items: {\n            ...state.items,\n            ...items,\n          },\n        };\n      }\n\n      case 'REDUCER': {\n        return action.reducer(state);\n      }\n\n      case 'REMOVE_ITEMS': {\n        if (notArray(action.remove)) {\n          return state;\n        }\n\n        return {\n          ...state,\n          active: action.remove.includes(state.active) ? '' : state.active,\n          selected: state.selected.filter(\n            item => !action.remove.includes(item)\n          ),\n          items: removeItem(state.items, action.remove),\n        };\n      }\n\n      case 'REPLACE_ITEMS': {\n        const transformedData = transformCollectionToObject(action.items);\n        return {\n          ...state,\n          items: transformedData,\n        };\n      }\n\n      case 'RESET': {\n        return initialValue;\n      }\n\n      case 'SET_ACTIVE': {\n        if (notString(action.active)) {\n          return state;\n        }\n\n        return {\n          ...state,\n          active: notDefined(action.active) ? '' : action.active.trim(),\n        };\n      }\n\n      case 'SET_LOADING': {\n        return {\n          ...state,\n          loading: !!action.loading,\n        };\n      }\n\n      case 'SET_SELECTED': {\n        return {\n          ...state,\n          selected: action.selected,\n        };\n      }\n\n      case 'TOGGLE_SELECTED_ITEMS': {\n        let selected = [...state.selected];\n\n        for (let select of action.selected) {\n          const index = selected.indexOf(select);\n          const _select = select.trim();\n\n          if (state.items[index]) {\n            selected =\n              index === 0\n                ? selected.slice(1)\n                : index === selected.length - 1\n                ? selected.slice(0, selected.length - 1)\n                : [...selected.slice(0, index), ...selected.slice(index + 1)];\n          } else {\n            selected.push(_select);\n          }\n        }\n\n        return {\n          ...state,\n          selected,\n        };\n      }\n\n      case 'UPDATE_ITEM': {\n        if (!state.items[action.select]) {\n          return state;\n        }\n\n        const item = {\n          [action.item.name || action.select]: {\n            ...state.items[action.select],\n            ...action.item,\n          },\n        };\n\n        const updateItemInList = () => ({\n          ...state.items,\n          ...item,\n        });\n\n        let removeCloneAndUpdateItem = () => ({\n          ...removeItem(state.items, [action.select]),\n          ...item,\n        });\n\n        const updatedItems = action.item[initialValue.uid]\n          ? removeCloneAndUpdateItem()\n          : updateItemInList();\n\n        const setSelectedItem = (list: any[], item: any, update: any) => {\n          const replaceSelectedItem = () => {\n            const index = list.indexOf(item);\n            return index === 0\n              ? [update, ...list.slice(1)]\n              : index === list.length - 1\n              ? [...list.slice(0, list.length - 1), update]\n              : [...list.slice(0, index), update, ...list.slice(index + 1)];\n          };\n\n          return state.selected.includes(action.select)\n            ? replaceSelectedItem()\n            : state.selected;\n        };\n\n        return {\n          ...state,\n          active:\n            state.active === action.select ? action.item.name : state.active,\n          selected: setSelectedItem(\n            state.selected,\n            action.select,\n            action.item.name\n          ),\n          items: updatedItems,\n        };\n      }\n\n      default:\n        return extendReducer ? extendReducer(state, action) : state;\n    }\n  }\n\n  function crudReducer(\n    state: CollectionHashStateType,\n    action: CollectionHashActionType\n  ) {\n    return reducer(state, action, initialValue, extendReducer);\n  }\n\n  return useReducer(crudReducer, initialValue);\n};\n"]}]}