{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/Dropdown/Menu.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/Dropdown/Menu.js","mtime":1557389790485},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Dropdown/Menu.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment, useEffect, useMemo, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { menuTheme, menuContainerTheme, menuContentTheme } from './menu.theme';\nimport { Button } from '../Button/Button';\nimport { useTheme } from '../ThemeContext';\nimport { sharedStyles, setTheme } from '../utils';\nimport { Portal } from '../Portal';\nimport { Base } from '../Base';\nvar MenuContainer = styled.div(_templateObject(), menuContainerTheme, sharedStyles);\nexport var Menu = React.memo(function Menu(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      label = _ref.label,\n      animate = _ref.animate,\n      propsThemed = _ref.themed,\n      propsRest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"label\", \"animate\", \"themed\"]);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      opened = _useState2[0],\n      setOpened = _useState2[1];\n\n  var classNames = \"Menu \".concat(className || '');\n  var themed = useMemo(function () {\n    return [menuTheme, menuContentTheme].concat(_toConsumableArray(propsThemed));\n  }, [menuTheme, menuContentTheme, propsThemed]);\n\n  var _useTheme = useTheme(),\n      theme = _useTheme.theme;\n\n  function handleClick(e) {\n    e.preventDefault;\n    setOpened(!opened);\n  }\n\n  var _animate = useMemo(function () {\n    return animate || {\n      opened: {\n        opacity: 1\n      },\n      closed: {\n        opacity: 0\n      }\n    };\n  }, [animate]);\n\n  return React.createElement(MenuContainer, {\n    className: \"MenuContainer\",\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Button, Object.assign({\n    className: classNames,\n    onClick: handleClick\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), label), React.createElement(Base, Object.assign({\n    className: classNames,\n    element: \"ul\",\n    themed: themed,\n    state: opened ? 'opened' : 'closed'\n  }, propsRest, {\n    animate: _animate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), children));\n});\n\nif (typeof Menu !== 'undefined' && Menu && Menu === Object(Menu) && Object.isExtensible(Menu)) {\n  Object.defineProperty(Menu, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Menu\",\n      filename: \"src/Dropdown/Menu.js\"\n    }\n  });\n}\n\nMenu.defaultProps = {\n  themed: []\n};\nMenu.propTypes = {\n  children: PropTypes.node,\n  css: PropTypes.string,\n  themed: PropTypes.array,\n  appearance: PropTypes.oneOf(['accent', 'primary', 'success', 'warning', 'danger'])\n};\nexport var menu = styled(Menu);\n\nif (typeof menu !== 'undefined' && menu && menu === Object(menu) && Object.isExtensible(menu)) {\n  Object.defineProperty(menu, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"menu\",\n      filename: \"src/Dropdown/Menu.js\"\n    }\n  });\n}\n\nvar _default = Menu;\nexport default _default;\n\nif (typeof Menu !== 'undefined' && Menu && Menu === Object(Menu) && Object.isExtensible(Menu)) {\n  Object.defineProperty(Menu, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Menu\",\n      filename: \"src/Dropdown/Menu.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MenuContainer, \"MenuContainer\", \"/mnt/Storage/Projects/themed-styled-components/src/Dropdown/Menu.js\");\n  reactHotLoader.register(Menu, \"Menu\", \"/mnt/Storage/Projects/themed-styled-components/src/Dropdown/Menu.js\");\n  reactHotLoader.register(menu, \"menu\", \"/mnt/Storage/Projects/themed-styled-components/src/Dropdown/Menu.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Dropdown/Menu.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Dropdown/Menu.js"],"names":["React","Fragment","useEffect","useMemo","useRef","useState","styled","PropTypes","menuTheme","menuContainerTheme","menuContentTheme","Button","useTheme","sharedStyles","setTheme","Portal","Base","MenuContainer","div","Menu","memo","children","className","label","animate","propsThemed","themed","propsRest","opened","setOpened","classNames","theme","handleClick","e","preventDefault","_animate","opacity","closed","defaultProps","propTypes","node","css","string","array","appearance","oneOf","menu"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useMemo, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport { menuTheme, menuContainerTheme, menuContentTheme } from './menu.theme'\nimport { Button } from '../Button/Button'\nimport { useTheme } from '../ThemeContext'\nimport { sharedStyles, setTheme } from '../utils'\nimport { Portal } from '../Portal'\nimport { Base } from '../Base'\n\nconst MenuContainer = styled.div`\n  ${menuContainerTheme}\n  ${sharedStyles}\n`\n\nexport const Menu = React.memo(function Menu({\n  children,\n  className,\n  label,\n  animate,\n  themed: propsThemed,\n  ...propsRest\n}) {\n  const [opened, setOpened] = useState(false)\n  const classNames = `Menu ${className || ''}`\n  const themed = useMemo(() => [menuTheme, menuContentTheme, ...propsThemed], [\n    menuTheme,\n    menuContentTheme,\n    propsThemed,\n  ])\n  const { theme } = useTheme()\n\n  function handleClick(e) {\n    e.preventDefault\n    setOpened(!opened)\n  }\n\n  const _animate = useMemo(() => {\n    return (\n      animate || {\n        opened: {\n          opacity: 1,\n        },\n        closed: {\n          opacity: 0,\n        },\n      }\n    )\n  }, [animate])\n\n  return (\n    <MenuContainer className=\"MenuContainer\" theme={theme}>\n      <Button className={classNames} onClick={handleClick} {...propsRest}>\n        {label}\n      </Button>\n\n      <Base\n        className={classNames}\n        element=\"ul\"\n        themed={themed}\n        state={opened ? 'opened' : 'closed'}\n        {...propsRest}\n        animate={_animate}>\n        {children}\n      </Base>\n    </MenuContainer>\n  )\n})\n\nMenu.defaultProps = {\n  themed: [],\n}\n\nMenu.propTypes = {\n  children: PropTypes.node,\n  css: PropTypes.string,\n  themed: PropTypes.array,\n  appearance: PropTypes.oneOf([\n    'accent',\n    'primary',\n    'success',\n    'warning',\n    'danger',\n  ]),\n}\n\nexport const menu = styled(Menu)\nexport default Menu\n"]}]}