{"remainingRequest":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js??ref--11-1!/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/redesign/src/Table/ToolbarCopyButton.tsx","dependencies":[{"path":"/mnt/Storage/Projects/redesign/src/Table/ToolbarCopyButton.tsx","mtime":1561592403539},{"path":"/mnt/Storage/Projects/redesign/node_modules/cache-loader/dist/cjs.js","mtime":1558371898492},{"path":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1558369220865},{"path":"/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vc3JjL1RhYmxlL1Rvb2xiYXJDb3B5QnV0dG9uLnRzeCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdLnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgppbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgQ29weVRvQ2xpcGJvYXJkIH0gZnJvbSAncmVhY3QtY29weS10by1jbGlwYm9hcmQnOwppbXBvcnQgeyBDb3B5IH0gZnJvbSAnLi4vTWF0ZXJpYWxJY29ucy9Db3B5JzsKaW1wb3J0IEJ1dHRvbkljb24gZnJvbSAnLi4vQnV0dG9uSWNvbi9CdXR0b25JY29uJzsKZXhwb3J0IGZ1bmN0aW9uIFRvb2xiYXJDb3B5QnV0dG9uKF9yZWYpIHsKICB2YXIgZGF0YSA9IF9yZWYuZGF0YSwKICAgICAgb25DbGljayA9IF9yZWYub25DbGljaywKICAgICAgcHJvcHNSZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsIFsiZGF0YSIsICJvbkNsaWNrIl0pOwoKICB2YXIgdGV4dCA9IHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJyA/IGRhdGEgOiBKU09OLnN0cmluZ2lmeShkYXRhLCBudWxsLCAyKTsKCiAgZnVuY3Rpb24gaGFuZGxlQ2xpY2soZSkgewogICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgb25DbGljayAmJiBvbkNsaWNrKGUpOyAvL1RPRE86IGFkZCBjb3BpZWQgbm90aWZpY2F0aW9uCiAgfQoKICB2YXIgaWNvbiA9IHVzZU1lbW8oZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIENvcHk7CiAgfSwgW0NvcHldKTsKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb3B5VG9DbGlwYm9hcmQsIHsKICAgIHRleHQ6IHRleHQsCiAgICBjb3B5OiBoYW5kbGVDbGljaywKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b25JY29uLCBPYmplY3QuYXNzaWduKHsKICAgIGFsdDogImNvcHkiLAogICAgYXBwZWFyYW5jZTogImFjdGl2ZSIsCiAgICB1aWQ6ICJjb3B5IiwKICAgIGljb246IGljb24sCiAgICBjc3M6ICJcbiAgICAgICAgICBzdmcuSWNvbiB7XG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7XG4gICAgICAgICAgfVxuICAgICAgICAiCiAgfSwgcHJvcHNSZXN0LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiQ29weSIpKTsKfQoKX19zaWduYXR1cmVfXyhUb29sYmFyQ29weUJ1dHRvbiwgInVzZU1lbW97aWNvbn0iKTsKCmlmICh0eXBlb2YgVG9vbGJhckNvcHlCdXR0b24gIT09ICd1bmRlZmluZWQnICYmIFRvb2xiYXJDb3B5QnV0dG9uICYmIFRvb2xiYXJDb3B5QnV0dG9uID09PSBPYmplY3QoVG9vbGJhckNvcHlCdXR0b24pICYmIE9iamVjdC5pc0V4dGVuc2libGUoVG9vbGJhckNvcHlCdXR0b24pKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFRvb2xiYXJDb3B5QnV0dG9uLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiVG9vbGJhckNvcHlCdXR0b24iLAogICAgICBmaWxlbmFtZTogInNyYy9UYWJsZS9Ub29sYmFyQ29weUJ1dHRvbi50c3giCiAgICB9CiAgfSk7Cn0KCnZhciBfZGVmYXVsdCA9IFRvb2xiYXJDb3B5QnV0dG9uOwpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKCmlmICh0eXBlb2YgVG9vbGJhckNvcHlCdXR0b24gIT09ICd1bmRlZmluZWQnICYmIFRvb2xiYXJDb3B5QnV0dG9uICYmIFRvb2xiYXJDb3B5QnV0dG9uID09PSBPYmplY3QoVG9vbGJhckNvcHlCdXR0b24pICYmIE9iamVjdC5pc0V4dGVuc2libGUoVG9vbGJhckNvcHlCdXR0b24pKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFRvb2xiYXJDb3B5QnV0dG9uLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiVG9vbGJhckNvcHlCdXR0b24iLAogICAgICBmaWxlbmFtZTogInNyYy9UYWJsZS9Ub29sYmFyQ29weUJ1dHRvbi50c3giCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoVG9vbGJhckNvcHlCdXR0b24sICJUb29sYmFyQ29weUJ1dHRvbiIsICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vc3JjL1RhYmxlL1Rvb2xiYXJDb3B5QnV0dG9uLnRzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF9kZWZhdWx0LCAiZGVmYXVsdCIsICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vc3JjL1RhYmxlL1Rvb2xiYXJDb3B5QnV0dG9uLnRzeCIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/mnt/Storage/Projects/redesign/src/Table/ToolbarCopyButton.tsx"],"names":["React","useMemo","CopyToClipboard","Copy","ButtonIcon","ToolbarCopyButton","data","onClick","propsRest","text","JSON","stringify","handleClick","e","preventDefault","icon"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAGA,SAASC,IAAT,QAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAO,SAASC,iBAAT,OAI6B;AAAA,MAHlCC,IAGkC,QAHlCA,IAGkC;AAAA,MAFlCC,OAEkC,QAFlCA,OAEkC;AAAA,MAD/BC,SAC+B;;AAClC,MAAMC,IAAI,GAAG,OAAOH,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCI,IAAI,CAACC,SAAL,CAAeL,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAA/C;;AAEA,WAASM,WAAT,CAAqBC,CAArB,EAAuD;AACrDA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,OAAO,IAAIA,OAAO,CAACM,CAAD,CAAlB,CAFqD,CAGrD;AACD;;AAED,MAAME,IAAI,GAAGd,OAAO,CAAC;AAAA,WAAME,IAAN;AAAA,GAAD,EAAa,CAACA,IAAD,CAAb,CAApB;AAEA,SACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEM,IAAvB;AAA6B,IAAA,IAAI,EAAEG,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,GAAG,EAAC,MADN;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,GAAG,EAAC,MAHN;AAIE,IAAA,IAAI,EAAEG,IAJR;AAKE,IAAA,GAAG;AALL,KAUMP,SAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF;AAkBD;;cAjCeH,iB;;;;;;;;;;;;;eAmCDA,iB;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAnCgBA,iB","sourcesContent":["import React, { useMemo } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { TableToolbarCopyButtonInterface } from './table.types';\n\nimport { Copy } from '../MaterialIcons/Copy';\nimport ButtonIcon from '../ButtonIcon/ButtonIcon';\n\nexport function ToolbarCopyButton({\n  data,\n  onClick,\n  ...propsRest\n}: TableToolbarCopyButtonInterface) {\n  const text = typeof data === 'string' ? data : JSON.stringify(data, null, 2);\n\n  function handleClick(e: React.MouseEvent<HTMLElement>) {\n    e.preventDefault();\n    onClick && onClick(e);\n    //TODO: add copied notification\n  }\n\n  const icon = useMemo(() => Copy, [Copy]);\n\n  return (\n    <CopyToClipboard text={text} copy={handleClick}>\n      <ButtonIcon\n        alt=\"copy\"\n        appearance=\"active\"\n        uid=\"copy\"\n        icon={icon}\n        css={`\n          svg.Icon {\n            padding-right: 5px;\n          }\n        `}\n        {...propsRest}\n      >\n        Copy\n      </ButtonIcon>\n    </CopyToClipboard>\n  );\n}\n\nexport default ToolbarCopyButton;\n"]}]}