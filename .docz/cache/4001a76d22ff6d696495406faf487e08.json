{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/Toggle/Toggle.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/Toggle/Toggle.js","mtime":1557736343753},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _slicedToArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Toggle/Toggle.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  \", \";\\n  \", \";\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  \", \";\\n  \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  \", \";\\n  \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useTheme } from '../ThemeContext';\nimport { sharedStyles } from '../utils';\nvar ToggleStyled = styled.div(_templateObject());\nvar ToggleInput = styled.input(_templateObject2(), function (_ref) {\n  var color = _ref.theme.color;\n  return \"\\n      box-sizing: border-box;\\n      height: 0;\\n      width: 0;\\n      visibility: hidden;\\n\\n      &:checked + label {\\n        background: \".concat(color['grey-100'], \";\\n      }\\n\\n      &:checked + label:after {\\n        left: calc(100% - 5px);\\n        transform: translateX(-100%);\\n      }\\n  \");\n}, sharedStyles, function (props) {\n  return props.css;\n});\nexport var ToggleLabel = styled.label(_templateObject3(), function (_ref2) {\n  var color = _ref2.theme.color,\n      checked = _ref2.checked,\n      height = _ref2.height,\n      hideText = _ref2.hideText,\n      width = _ref2.width;\n  return \"\\n    position: relative;\\n    box-sizing: border-box;off\\n    cursor: pointer;\\n    text-indent \".concat(hideText ? '-9999px' : 'inital', \";\\n    width: \").concat(width, \";\\n    height: \").concat(height, \";\\n    background: \").concat(color['grey-700'], \";\\n    display: inline-block;\\n    border-radius: 100px;\\n    font-size: \").concat(height, \";\\n    line-height: \").concat(height, \";\\n\\n    text-align: \").concat(checked ? 'left' : 'right', \"\\n  \");\n}, sharedStyles, function (props) {\n  return props.css;\n});\n\nif (typeof ToggleLabel !== 'undefined' && ToggleLabel && ToggleLabel === Object(ToggleLabel) && Object.isExtensible(ToggleLabel)) {\n  Object.defineProperty(ToggleLabel, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"ToggleLabel\",\n      filename: \"src/Toggle/Toggle.js\"\n    }\n  });\n}\n\nvar Component = styled.div(_templateObject4(), function (_ref3) {\n  var color = _ref3.theme.color,\n      toggle = _ref3.toggle,\n      height = _ref3.height,\n      width = _ref3.width;\n  return \"\\n    position: absolute;\\n    box-sizing: border-box;\\n    width: \".concat(width, \";\\n    height: \").concat(width, \";\\n    background: \").concat(toggle ? color['grey-500'] : color['grey-400'], \";\\n    border-radius: 90px;\\n    transform: translateX(0);\\n    transition: 0.3s;\\n\\n    &:active {\\n      width: 25px;\\n    // transform: translateX(calc(100%  - 25px);\\n    }\\n\\n    \").concat(toggle ? 'transform: translateX(100%);' : 'transform : translate(0);', \"\\n  \");\n}, sharedStyles, function (props) {\n  return props.css;\n});\nexport function Toggle(_ref4) {\n  var id = _ref4.id,\n      children = _ref4.children,\n      hideText = _ref4.hideText,\n      height = _ref4.height,\n      toggle = _ref4.toggle,\n      width = _ref4.width;\n\n  var _toggle = _slicedToArray(toggle, 2),\n      state = _toggle[0],\n      setState = _toggle[1];\n\n  function handleClick(e) {\n    e.preventDefault();\n    setState(!state);\n  }\n\n  var _useTheme = useTheme(),\n      theme = _useTheme.theme;\n\n  return React.createElement(ToggleStyled, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(ToggleInput, {\n    theme: theme,\n    type: \"checkbox\",\n    id: id,\n    checked: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(ToggleLabel, {\n    htmlFor: id,\n    onClick: handleClick,\n    height: height,\n    hideText: hideText,\n    width: width,\n    checked: state,\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, children || React.createElement(Component, {\n    elevate: 1,\n    theme: theme,\n    toggle: state,\n    width: \"20px\",\n    height: \"20px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })));\n}\n\nif (typeof Toggle !== 'undefined' && Toggle && Toggle === Object(Toggle) && Object.isExtensible(Toggle)) {\n  Object.defineProperty(Toggle, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Toggle\",\n      filename: \"src/Toggle/Toggle.js\"\n    }\n  });\n}\n\nToggle.defaultProps = {\n  width: '40px',\n  height: '20px'\n};\nComponent.defaultProps = {\n  width: '90px',\n  height: '90px'\n};\nvar _default = Toggle;\nexport default _default;\n\nif (typeof Toggle !== 'undefined' && Toggle && Toggle === Object(Toggle) && Object.isExtensible(Toggle)) {\n  Object.defineProperty(Toggle, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Toggle\",\n      filename: \"src/Toggle/Toggle.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ToggleStyled, \"ToggleStyled\", \"/mnt/Storage/Projects/themed-styled-components/src/Toggle/Toggle.js\");\n  reactHotLoader.register(ToggleInput, \"ToggleInput\", \"/mnt/Storage/Projects/themed-styled-components/src/Toggle/Toggle.js\");\n  reactHotLoader.register(ToggleLabel, \"ToggleLabel\", \"/mnt/Storage/Projects/themed-styled-components/src/Toggle/Toggle.js\");\n  reactHotLoader.register(Component, \"Component\", \"/mnt/Storage/Projects/themed-styled-components/src/Toggle/Toggle.js\");\n  reactHotLoader.register(Toggle, \"Toggle\", \"/mnt/Storage/Projects/themed-styled-components/src/Toggle/Toggle.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Toggle/Toggle.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Toggle/Toggle.js"],"names":["React","useEffect","useState","styled","useTheme","sharedStyles","ToggleStyled","div","ToggleInput","input","color","theme","props","css","ToggleLabel","label","checked","height","hideText","width","Component","toggle","Toggle","id","children","state","setState","handleClick","e","preventDefault","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useTheme } from '../ThemeContext'\nimport { sharedStyles } from '../utils'\n\nconst ToggleStyled = styled.div`\n  display: inline;\n`\n\nconst ToggleInput = styled.input`\n  ${({ theme: { color } }) => `\n      box-sizing: border-box;\n      height: 0;\n      width: 0;\n      visibility: hidden;\n\n      &:checked + label {\n        background: ${color['grey-100']};\n      }\n\n      &:checked + label:after {\n        left: calc(100% - 5px);\n        transform: translateX(-100%);\n      }\n  `}\n  ${sharedStyles};\n  ${props => props.css};\n`\nexport const ToggleLabel = styled.label`\n  ${({ theme: { color }, checked, height, hideText, width }) => `\n    position: relative;\n    box-sizing: border-box;off\n    cursor: pointer;\n    text-indent ${hideText ? '-9999px' : 'inital'};\n    width: ${width};\n    height: ${height};\n    background: ${color['grey-700']};\n    display: inline-block;\n    border-radius: 100px;\n    font-size: ${height};\n    line-height: ${height};\n\n    text-align: ${checked ? 'left' : 'right'}\n  `}\n  ${sharedStyles};\n  ${props => props.css};\n`\n\nconst Component = styled.div`\n  ${({ theme: { color }, toggle, height, width }) => `\n    position: absolute;\n    box-sizing: border-box;\n    width: ${width};\n    height: ${width};\n    background: ${toggle ? color['grey-500'] : color['grey-400']};\n    border-radius: 90px;\n    transform: translateX(0);\n    transition: 0.3s;\n\n    &:active {\n      width: 25px;\n    // transform: translateX(calc(100%  - 25px);\n    }\n\n    ${toggle ? 'transform: translateX(100%);' : 'transform : translate(0);'}\n  `}\n  ${sharedStyles};\n  ${props => props.css};\n`\n\nexport function Toggle({ id, children, hideText, height, toggle, width }) {\n  const [state, setState] = toggle\n\n  function handleClick(e) {\n    e.preventDefault()\n    setState(!state)\n  }\n\n  const { theme } = useTheme()\n\n  return (\n    <ToggleStyled theme={theme}>\n      <ToggleInput theme={theme} type=\"checkbox\" id={id} checked={state} />\n      <ToggleLabel\n        htmlFor={id}\n        onClick={handleClick}\n        height={height}\n        hideText={hideText}\n        width={width}\n        checked={state}\n        theme={theme}>\n        {children || (\n          <Component\n            elevate={1}\n            theme={theme}\n            toggle={state}\n            width=\"20px\"\n            height=\"20px\"\n          />\n        )}\n      </ToggleLabel>\n    </ToggleStyled>\n  )\n}\n\nToggle.defaultProps = {\n  width: '40px',\n  height: '20px',\n}\n\nComponent.defaultProps = {\n  width: '90px',\n  height: '90px',\n}\n\nexport default Toggle\n"]}]}