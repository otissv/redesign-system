{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/_Accordion/Accordion.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/Accordion.js","mtime":1556622700442},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/Accordion.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { Fragment, useContext, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { AccordionButton } from './AccordionButton';\nimport { AccordionContent } from './AccordionContent';\nimport { AccordionContext, AccordionProvider } from './AccordionContext';\nimport { AccordionItem } from './AccordionItem';\nimport { Base } from '../Base/Base';\nimport { accordionTheme } from './accordion.theme';\nexport var Accordion = React.memo(function Accordion(_ref) {\n  var active = _ref.active,\n      children = _ref.children,\n      className = _ref.className,\n      items = _ref.items,\n      value = _ref.value,\n      propsRest = _objectWithoutProperties(_ref, [\"active\", \"children\", \"className\", \"items\", \"value\"]);\n\n  var classNames = \"Accordion \".concat(className || '');\n  var themed = useMemo(function () {\n    return [accordionTheme];\n  }, [accordionTheme]);\n\n  function handleButtonClick(e) {\n    setState(e.currentTarget.dataset.uid);\n  }\n\n  function getItems() {\n    return items.map(function (_ref2) {\n      var content = _ref2.content,\n          title = _ref2.title,\n          uid = _ref2.uid;\n      return React.createElement(AccordionItem, {\n        uid: uid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(AccordionButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, title), React.createElement(AccordionContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, content));\n    });\n  }\n\n  return React.createElement(AccordionProvider, {\n    value: active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Base, Object.assign({\n    className: classNames,\n    themed: themed\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), items.length > 0 ? getItems() : children));\n});\n\nif (typeof Accordion !== 'undefined' && Accordion && Accordion === Object(Accordion) && Object.isExtensible(Accordion)) {\n  Object.defineProperty(Accordion, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Accordion\",\n      filename: \"src/_Accordion/Accordion.js\"\n    }\n  });\n}\n\nAccordion.defaultProps = {\n  items: []\n};\nAccordion.propTypes = {\n  active: PropTypes.string,\n  children: PropTypes.node,\n  item: PropTypes.object,\n  theme: PropTypes.object\n};\nexport var accordion = styled(Accordion);\n\nif (typeof accordion !== 'undefined' && accordion && accordion === Object(accordion) && Object.isExtensible(accordion)) {\n  Object.defineProperty(accordion, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"accordion\",\n      filename: \"src/_Accordion/Accordion.js\"\n    }\n  });\n}\n\nexport var AccordionConsumer = AccordionContext.Consumer;\n\nif (typeof AccordionConsumer !== 'undefined' && AccordionConsumer && AccordionConsumer === Object(AccordionConsumer) && Object.isExtensible(AccordionConsumer)) {\n  Object.defineProperty(AccordionConsumer, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"AccordionConsumer\",\n      filename: \"src/_Accordion/Accordion.js\"\n    }\n  });\n}\n\nvar _default = Accordion;\nexport default _default;\n\nif (typeof Accordion !== 'undefined' && Accordion && Accordion === Object(Accordion) && Object.isExtensible(Accordion)) {\n  Object.defineProperty(Accordion, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Accordion\",\n      filename: \"src/_Accordion/Accordion.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Accordion, \"Accordion\", \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/Accordion.js\");\n  reactHotLoader.register(accordion, \"accordion\", \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/Accordion.js\");\n  reactHotLoader.register(AccordionConsumer, \"AccordionConsumer\", \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/Accordion.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/Accordion.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/_Accordion/Accordion.js"],"names":["React","Fragment","useContext","useMemo","useState","PropTypes","styled","AccordionButton","AccordionContent","AccordionContext","AccordionProvider","AccordionItem","Base","accordionTheme","Accordion","memo","active","children","className","items","value","propsRest","classNames","themed","handleButtonClick","e","setState","currentTarget","dataset","uid","getItems","map","content","title","length","defaultProps","propTypes","string","node","item","object","theme","accordion","AccordionConsumer","Consumer"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,OAAtC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,oBAApD;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAO,IAAMC,SAAS,GAAGd,KAAK,CAACe,IAAN,CAAW,SAASD,SAAT,OAOjC;AAAA,MANDE,MAMC,QANDA,MAMC;AAAA,MALDC,QAKC,QALDA,QAKC;AAAA,MAJDC,SAIC,QAJDA,SAIC;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADEC,SACF;;AACD,MAAMC,UAAU,uBAAgBJ,SAAS,IAAI,EAA7B,CAAhB;AACA,MAAMK,MAAM,GAAGpB,OAAO,CAAC;AAAA,WAAM,CAACU,cAAD,CAAN;AAAA,GAAD,EAAyB,CAACA,cAAD,CAAzB,CAAtB;;AAEA,WAASW,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5BC,IAAAA,QAAQ,CAACD,CAAC,CAACE,aAAF,CAAgBC,OAAhB,CAAwBC,GAAzB,CAAR;AACD;;AAED,WAASC,QAAT,GAAoB;AAClB,WAAOX,KAAK,CAACY,GAAN,CAAU,iBAA6B;AAAA,UAA1BC,OAA0B,SAA1BA,OAA0B;AAAA,UAAjBC,KAAiB,SAAjBA,KAAiB;AAAA,UAAVJ,GAAU,SAAVA,GAAU;AAC5C,aACE,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAEA,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBI,KAAlB,CADF,EAEE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBD,OAAnB,CAFF,CADF;AAMD,KAPM,CAAP;AAQD;;AAED,SACE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEhB,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEM,UAAjB;AAA6B,IAAA,MAAM,EAAEC;AAArC,KAAiDF,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGF,KAAK,CAACe,MAAN,GAAe,CAAf,GAAmBJ,QAAQ,EAA3B,GAAgCb,QADnC,CADF,CADF;AAOD,CAjCwB,CAAlB;;;;;;;;;;;;;AAmCPH,SAAS,CAACqB,YAAV,GAAyB;AACvBhB,EAAAA,KAAK,EAAE;AADgB,CAAzB;AAIAL,SAAS,CAACsB,SAAV,GAAsB;AACpBpB,EAAAA,MAAM,EAAEX,SAAS,CAACgC,MADE;AAEpBpB,EAAAA,QAAQ,EAAEZ,SAAS,CAACiC,IAFA;AAGpBC,EAAAA,IAAI,EAAElC,SAAS,CAACmC,MAHI;AAIpBC,EAAAA,KAAK,EAAEpC,SAAS,CAACmC;AAJG,CAAtB;AAMA,OAAO,IAAME,SAAS,GAAGpC,MAAM,CAACQ,SAAD,CAAxB;;;;;;;;;;;;;AACP,OAAO,IAAM6B,iBAAiB,GAAGlC,gBAAgB,CAACmC,QAA3C;;;;;;;;;;;;;eACQ9B,S;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA/CaA,S;0BA6CA4B,S;0BACAC,iB","sourcesContent":["import React, { Fragment, useContext, useMemo, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { AccordionButton } from './AccordionButton'\nimport { AccordionContent } from './AccordionContent'\nimport { AccordionContext, AccordionProvider } from './AccordionContext'\nimport { AccordionItem } from './AccordionItem'\nimport { Base } from '../Base/Base'\nimport { accordionTheme } from './accordion.theme'\n\nexport const Accordion = React.memo(function Accordion({\n  active,\n  children,\n  className,\n  items,\n  value,\n  ...propsRest\n}) {\n  const classNames = `Accordion ${className || ''}`\n  const themed = useMemo(() => [accordionTheme], [accordionTheme])\n\n  function handleButtonClick(e) {\n    setState(e.currentTarget.dataset.uid)\n  }\n\n  function getItems() {\n    return items.map(({ content, title, uid }) => {\n      return (\n        <AccordionItem uid={uid}>\n          <AccordionButton>{title}</AccordionButton>\n          <AccordionContent>{content}</AccordionContent>\n        </AccordionItem>\n      )\n    })\n  }\n\n  return (\n    <AccordionProvider value={active}>\n      <Base className={classNames} themed={themed} {...propsRest}>\n        {items.length > 0 ? getItems() : children}\n      </Base>\n    </AccordionProvider>\n  )\n})\n\nAccordion.defaultProps = {\n  items: [],\n}\n\nAccordion.propTypes = {\n  active: PropTypes.string,\n  children: PropTypes.node,\n  item: PropTypes.object,\n  theme: PropTypes.object,\n}\nexport const accordion = styled(Accordion)\nexport const AccordionConsumer = AccordionContext.Consumer\nexport default Accordion\n"]}]}