{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarEditButton.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarEditButton.js","mtime":1558190348044},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarEditButton.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useMemo } from 'react';\nimport { Edit } from '../MaterialIcons/Edit';\nimport ButtonIcon from '../ButtonIcon/ButtonIcon';\nexport var ToolbarEditButton = React.memo(function ToolbarEditButton(_ref) {\n  var hasViews = _ref.hasViews,\n      onClick = _ref.onClick,\n      propsRest = _objectWithoutProperties(_ref, [\"hasViews\", \"onClick\"]);\n\n  function handleClick(e) {\n    e.preventDefault();\n    onClick && onClick(e);\n  }\n\n  var icon = useMemo(function () {\n    return Edit;\n  }, [Edit]);\n  return React.createElement(ButtonIcon, Object.assign({\n    uid: \"edit\",\n    onClick: handleClick,\n    icon: icon\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n});\n\nif (typeof ToolbarEditButton !== 'undefined' && ToolbarEditButton && ToolbarEditButton === Object(ToolbarEditButton) && Object.isExtensible(ToolbarEditButton)) {\n  Object.defineProperty(ToolbarEditButton, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"ToolbarEditButton\",\n      filename: \"src/Table/ToolbarEditButton.js\"\n    }\n  });\n}\n\nvar _default = ToolbarEditButton;\nexport default _default;\n\nif (typeof ToolbarEditButton !== 'undefined' && ToolbarEditButton && ToolbarEditButton === Object(ToolbarEditButton) && Object.isExtensible(ToolbarEditButton)) {\n  Object.defineProperty(ToolbarEditButton, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"ToolbarEditButton\",\n      filename: \"src/Table/ToolbarEditButton.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ToolbarEditButton, \"ToolbarEditButton\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarEditButton.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarEditButton.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Table/ToolbarEditButton.js"],"names":["React","useMemo","Edit","ButtonIcon","ToolbarEditButton","memo","hasViews","onClick","propsRest","handleClick","e","preventDefault","icon"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,SAASC,IAAT,QAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAO,IAAMC,iBAAiB,GAAGJ,KAAK,CAACK,IAAN,CAAW,SAASD,iBAAT,OAIzC;AAAA,MAHDE,QAGC,QAHDA,QAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADEC,SACF;;AACD,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,OAAO,IAAIA,OAAO,CAACG,CAAD,CAAlB;AACD;;AAED,MAAME,IAAI,GAAGX,OAAO,CAAC;AAAA,WAAMC,IAAN;AAAA,GAAD,EAAa,CAACA,IAAD,CAAb,CAApB;AAEA,SACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAEO,WAAhC;AAA6C,IAAA,IAAI,EAAEG;AAAnD,KAA6DJ,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD,CAfgC,CAA1B;;;;;;;;;;;;;eAiBQJ,iB;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAjBaA,iB","sourcesContent":["import React, { useMemo } from 'react'\n\nimport { Edit } from '../MaterialIcons/Edit'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\n\nexport const ToolbarEditButton = React.memo(function ToolbarEditButton({\n  hasViews,\n  onClick,\n  ...propsRest\n}) {\n  function handleClick(e) {\n    e.preventDefault()\n    onClick && onClick(e)\n  }\n\n  const icon = useMemo(() => Edit, [Edit])\n\n  return (\n    <ButtonIcon uid=\"edit\" onClick={handleClick} icon={icon} {...propsRest} />\n  )\n})\n\nexport default ToolbarEditButton\n"]}]}