{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/reusable/collectionHash/collectionHashReducer.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/reusable/collectionHash/collectionHashReducer.js","mtime":1556784255058},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport { useMemo, useReducer } from 'react';\nimport { COLLECTION_HASH_INITIAL_STATE } from './collectionHashConstants';\n\nvar buildInitialValue = function buildInitialValue(initialState) {\n  return _objectSpread({}, COLLECTION_HASH_INITIAL_STATE, initialState);\n};\n\nexport var createInitialState = function createInitialState(initialState) {\n  return buildInitialValue(initialState);\n};\n\nif (typeof createInitialState !== 'undefined' && createInitialState && createInitialState === Object(createInitialState) && Object.isExtensible(createInitialState)) {\n  Object.defineProperty(createInitialState, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"createInitialState\",\n      filename: \"src/reusable/collectionHash/collectionHashReducer.js\"\n    }\n  });\n}\n\nexport function itemsToArray(items) {\n  var list = [];\n\n  for (var item in items) {\n    list.push(items[item]);\n  }\n\n  return list;\n}\n\nif (typeof itemsToArray !== 'undefined' && itemsToArray && itemsToArray === Object(itemsToArray) && Object.isExtensible(itemsToArray)) {\n  Object.defineProperty(itemsToArray, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"itemsToArray\",\n      filename: \"src/reusable/collectionHash/collectionHashReducer.js\"\n    }\n  });\n}\n\nexport function useCollectionHashReducer(extendReducer, initialState) {\n  var initialValue = buildInitialValue(initialState);\n\n  function removeItem(list, itemsToRemove) {\n    var items = {};\n\n    for (var item in list) {\n      if (!itemsToRemove.includes(item)) {\n        items[item] = list[item];\n      }\n    }\n\n    return items;\n  }\n\n  function transformCollectionToObject(items) {\n    if (!Array.isArray(items)) {\n      return;\n    }\n\n    var reducer = function reducer(acc, item) {\n      return _objectSpread({}, acc, _defineProperty({}, item[initialValue.uid], item));\n    };\n\n    return items.reduce(reducer, {});\n  }\n\n  function reducer(state, action, initialValue, extendReducer) {\n    var notArray = function notArray(value) {\n      return !Array.isArray(value);\n    };\n\n    var notString = function notString(value) {\n      return typeof value !== 'string';\n    };\n\n    var notDefined = function notDefined(value) {\n      return value == null;\n    };\n\n    switch (action.type) {\n      case 'INSERT_ITEMS':\n        {\n          var items = Array.isArray(action.items) ? transformCollectionToObject(action.items) : _defineProperty({}, action.items[initialValue.uid], action.items);\n          return _objectSpread({}, state, {\n            items: _objectSpread({}, state.items, items)\n          });\n        }\n\n      case 'REDUCER':\n        {\n          return action.reducer(state);\n        }\n\n      case 'REMOVE_ITEMS':\n        {\n          if (notArray(action.remove)) {\n            return state;\n          }\n\n          return _objectSpread({}, state, {\n            active: action.remove.includes(state.active) ? '' : state.active,\n            selected: state.selected.filter(function (item) {\n              return !action.remove.includes(item);\n            }),\n            items: removeItem(state.items, action.remove)\n          });\n        }\n\n      case 'REPLACE_ITEMS':\n        {\n          var transformedData = transformCollectionToObject(action.items);\n          return _objectSpread({}, state, {\n            items: transformedData\n          });\n        }\n\n      case 'RESET':\n        {\n          return initialValue;\n        }\n\n      case 'SET_ACTIVE':\n        {\n          if (notString(action.active)) {\n            return state;\n          }\n\n          return _objectSpread({}, state, {\n            active: notDefined(action.active) ? '' : action.active.trim()\n          });\n        }\n\n      case 'SET_LOADING':\n        {\n          return _objectSpread({}, state, {\n            loading: !!action.loading\n          });\n        }\n\n      case 'SET_SELECTED':\n        {\n          return _objectSpread({}, state, {\n            selected: action.selected\n          });\n        }\n\n      case 'TOGGLE_SELECTED_ITEMS':\n        {\n          var selected = _toConsumableArray(state.selected);\n\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = action.selected[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var select = _step.value;\n              var index = selected.indexOf(select);\n\n              var _select = select.trim();\n\n              if (state.items[index]) {\n                selected = index === 0 ? selected.slice(1) : index === selected.length - 1 ? selected.slice(0, selected.length - 1) : [].concat(_toConsumableArray(selected.slice(0, index)), _toConsumableArray(selected.slice(index + 1)));\n              } else {\n                selected.push(_select);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          return _objectSpread({}, state, {\n            selected: selected\n          });\n        }\n\n      case 'UPDATE_ITEM':\n        {\n          if (!state.items[action.select]) {\n            return state;\n          }\n\n          var item = _defineProperty({}, action.item.name || action.select, _objectSpread({}, state.items[action.select], action.item));\n\n          var updateItemInList = function updateItemInList() {\n            return _objectSpread({}, state.items, item);\n          };\n\n          var removeCloneAndUpdateItem = function removeCloneAndUpdateItem() {\n            return _objectSpread({}, removeItem(state.items, [action.select]), item);\n          };\n\n          var updatedItems = action.item[initialValue.uid] ? removeCloneAndUpdateItem() : updateItemInList();\n\n          var setSelectedItem = function setSelectedItem(list, item, update) {\n            var replaceSelectedItem = function replaceSelectedItem() {\n              var index = list.indexOf(item);\n              return index === 0 ? [update].concat(_toConsumableArray(list.slice(1))) : index === list.length - 1 ? [].concat(_toConsumableArray(list.slice(0, list.length - 1)), [update]) : [].concat(_toConsumableArray(list.slice(0, index)), [update], _toConsumableArray(list.slice(index + 1)));\n            };\n\n            return state.selected.includes(action.select) ? replaceSelectedItem() : state.selected;\n          };\n\n          return _objectSpread({}, state, {\n            active: state.active === action.select ? action.item.name : state.active,\n            selected: setSelectedItem(state.selected, action.select, action.item.name),\n            items: updatedItems\n          });\n        }\n\n      default:\n        return extendReducer ? extendReducer(state, action) : state;\n    }\n  }\n\n  function crudReducer(state, action) {\n    return reducer(state, action, initialValue, extendReducer);\n  }\n\n  return useReducer(crudReducer, initialValue);\n}\n\nif (typeof useCollectionHashReducer !== 'undefined' && useCollectionHashReducer && useCollectionHashReducer === Object(useCollectionHashReducer) && Object.isExtensible(useCollectionHashReducer)) {\n  Object.defineProperty(useCollectionHashReducer, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"useCollectionHashReducer\",\n      filename: \"src/reusable/collectionHash/collectionHashReducer.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(buildInitialValue, \"buildInitialValue\", \"/mnt/Storage/Projects/themed-styled-components/src/reusable/collectionHash/collectionHashReducer.js\");\n  reactHotLoader.register(createInitialState, \"createInitialState\", \"/mnt/Storage/Projects/themed-styled-components/src/reusable/collectionHash/collectionHashReducer.js\");\n  reactHotLoader.register(itemsToArray, \"itemsToArray\", \"/mnt/Storage/Projects/themed-styled-components/src/reusable/collectionHash/collectionHashReducer.js\");\n  reactHotLoader.register(useCollectionHashReducer, \"useCollectionHashReducer\", \"/mnt/Storage/Projects/themed-styled-components/src/reusable/collectionHash/collectionHashReducer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/reusable/collectionHash/collectionHashReducer.js"],"names":["useMemo","useReducer","COLLECTION_HASH_INITIAL_STATE","buildInitialValue","initialState","createInitialState","itemsToArray","items","list","item","push","useCollectionHashReducer","extendReducer","initialValue","removeItem","itemsToRemove","includes","transformCollectionToObject","Array","isArray","reducer","acc","uid","reduce","state","action","notArray","value","notString","notDefined","type","remove","active","selected","filter","transformedData","trim","loading","select","index","indexOf","_select","slice","length","name","updateItemInList","removeCloneAndUpdateItem","updatedItems","setSelectedItem","update","replaceSelectedItem","crudReducer"],"mappings":"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","sourcesContent":["import { useMemo, useReducer } from 'react'\nimport { COLLECTION_HASH_INITIAL_STATE } from './collectionHashConstants'\n\nconst buildInitialValue = initialState => ({\n  ...COLLECTION_HASH_INITIAL_STATE,\n  ...initialState,\n})\n\nexport const createInitialState = initialState =>\n  buildInitialValue(initialState)\n\nexport function itemsToArray(items) {\n  let list = []\n\n  for (let item in items) {\n    list.push(items[item])\n  }\n\n  return list\n}\n\nexport function useCollectionHashReducer(extendReducer, initialState) {\n  const initialValue = buildInitialValue(initialState)\n\n  function removeItem(list, itemsToRemove) {\n    let items = {}\n\n    for (let item in list) {\n      if (!itemsToRemove.includes(item)) {\n        items[item] = list[item]\n      }\n    }\n\n    return items\n  }\n\n  function transformCollectionToObject(items) {\n    if (!Array.isArray(items)) {\n      return\n    }\n\n    const reducer = (acc, item) => ({\n      ...acc,\n      [item[initialValue.uid]]: item,\n    })\n    return items.reduce(reducer, {})\n  }\n\n  function reducer(state, action, initialValue, extendReducer) {\n    const notArray = value => !Array.isArray(value)\n    const notString = value => typeof value !== 'string'\n    const notDefined = value => value == null\n\n    switch (action.type) {\n      case 'INSERT_ITEMS': {\n        const items = Array.isArray(action.items)\n          ? transformCollectionToObject(action.items)\n          : {\n              [action.items[initialValue.uid]]: action.items,\n            }\n        return {\n          ...state,\n          items: {\n            ...state.items,\n            ...items,\n          },\n        }\n      }\n\n      case 'REDUCER': {\n        return action.reducer(state)\n      }\n\n      case 'REMOVE_ITEMS': {\n        if (notArray(action.remove)) {\n          return state\n        }\n\n        return {\n          ...state,\n          active: action.remove.includes(state.active) ? '' : state.active,\n          selected: state.selected.filter(\n            item => !action.remove.includes(item)\n          ),\n          items: removeItem(state.items, action.remove),\n        }\n      }\n\n      case 'REPLACE_ITEMS': {\n        const transformedData = transformCollectionToObject(action.items)\n        return {\n          ...state,\n          items: transformedData,\n        }\n      }\n\n      case 'RESET': {\n        return initialValue\n      }\n\n      case 'SET_ACTIVE': {\n        if (notString(action.active)) {\n          return state\n        }\n\n        return {\n          ...state,\n          active: notDefined(action.active) ? '' : action.active.trim(),\n        }\n      }\n\n      case 'SET_LOADING': {\n        return {\n          ...state,\n          loading: !!action.loading,\n        }\n      }\n\n      case 'SET_SELECTED': {\n        return {\n          ...state,\n          selected: action.selected,\n        }\n      }\n\n      case 'TOGGLE_SELECTED_ITEMS': {\n        let selected = [...state.selected]\n\n        for (let select of action.selected) {\n          const index = selected.indexOf(select)\n          const _select = select.trim()\n\n          if (state.items[index]) {\n            selected =\n              index === 0\n                ? selected.slice(1)\n                : index === selected.length - 1\n                ? selected.slice(0, selected.length - 1)\n                : [...selected.slice(0, index), ...selected.slice(index + 1)]\n          } else {\n            selected.push(_select)\n          }\n        }\n\n        return {\n          ...state,\n          selected,\n        }\n      }\n\n      case 'UPDATE_ITEM': {\n        if (!state.items[action.select]) {\n          return state\n        }\n\n        const item = {\n          [action.item.name || action.select]: {\n            ...state.items[action.select],\n            ...action.item,\n          },\n        }\n\n        const updateItemInList = () => ({\n          ...state.items,\n          ...item,\n        })\n\n        let removeCloneAndUpdateItem = () => ({\n          ...removeItem(state.items, [action.select]),\n          ...item,\n        })\n\n        const updatedItems = action.item[initialValue.uid]\n          ? removeCloneAndUpdateItem()\n          : updateItemInList()\n\n        const setSelectedItem = (list, item, update) => {\n          const replaceSelectedItem = () => {\n            const index = list.indexOf(item)\n            return index === 0\n              ? [update, ...list.slice(1)]\n              : index === list.length - 1\n              ? [...list.slice(0, list.length - 1), update]\n              : [...list.slice(0, index), update, ...list.slice(index + 1)]\n          }\n\n          return state.selected.includes(action.select)\n            ? replaceSelectedItem()\n            : state.selected\n        }\n\n        return {\n          ...state,\n          active:\n            state.active === action.select ? action.item.name : state.active,\n          selected: setSelectedItem(\n            state.selected,\n            action.select,\n            action.item.name\n          ),\n          items: updatedItems,\n        }\n      }\n\n      default:\n        return extendReducer ? extendReducer(state, action) : state\n    }\n  }\n\n  function crudReducer(state, action) {\n    return reducer(state, action, initialValue, extendReducer)\n  }\n\n  return useReducer(crudReducer, initialValue)\n}\n"]}]}