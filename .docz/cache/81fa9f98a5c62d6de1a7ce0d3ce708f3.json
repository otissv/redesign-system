{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionButton.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionButton.js","mtime":1556623572879},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionButton.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\", \"\\n\", \";\\n\", \";\\n  \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useAccordion } from './AccordionContext';\nimport { useAccordionItem } from './AccordionItem';\nimport { Base } from '../Base';\nimport { ThemeContext } from '../ThemeContext';\nimport { icon } from '../Icon';\nimport { setTheme, sharedStyles } from '../utils';\nimport { accordionButtonTheme, accordionButtonIconTheme } from './accordion.theme';\nvar Icon = icon(_templateObject(), accordionButtonIconTheme, sharedStyles, function (props) {\n  return props.styled;\n}, function (props) {\n  return props.styled;\n});\nexport var AccordionButton = React.memo(function AccordionButton(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      onClick = _ref.onClick,\n      onFocus = _ref.onFocus,\n      title = _ref.title,\n      propsRest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"onClick\", \"onFocus\", \"title\"]);\n\n  var classNames = \"AccordionButton \".concat(className || '');\n  var themed = useMemo(function () {\n    return [accordionButtonTheme, accordionButtonIconTheme];\n  }, [accordionButtonTheme, accordionButtonIconTheme]);\n\n  var _useAccordion = useAccordion(),\n      activeItem = _useAccordion.activeItem,\n      setActiveItem = _useAccordion.setActiveItem;\n\n  var _useAccordionItem = useAccordionItem(),\n      uid = _useAccordionItem.uid;\n\n  function handleClick(e) {\n    e.preventDefault();\n    onClick ? onClick(e) : setActiveItem(e.target.dataset.uid);\n  } // function handleFocus(e) {\n  //   e.preventDefault()\n  //   onFocus ? onFocus(e) : setActiveItem(e.target.dataset.uid)\n  // }\n\n\n  return React.createElement(Base, Object.assign({\n    el: \"button\",\n    className: classNames,\n    themed: themed,\n    onClick: handleClick,\n    \"data-uid\": uid\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), children);\n}); // <Icon\n//                       theme={themeContext}\n//                       onClick={setActiveItem}\n//                       styled={\n//                         state.hover\n//                           ? styles('accordion.button.icon.&:hover')(props)\n//                           : ''\n//                       }\n//                       {...iconProps}\n//                     />\n\nif (typeof AccordionButton !== 'undefined' && AccordionButton && AccordionButton === Object(AccordionButton) && Object.isExtensible(AccordionButton)) {\n  Object.defineProperty(AccordionButton, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"AccordionButton\",\n      filename: \"src/_Accordion/AccordionButton.js\"\n    }\n  });\n}\n\nAccordionButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object,\n  title: PropTypes.string,\n  toggleProps: PropTypes.object\n};\nexport var accordionButton = styled(AccordionButton);\n\nif (typeof accordionButton !== 'undefined' && accordionButton && accordionButton === Object(accordionButton) && Object.isExtensible(accordionButton)) {\n  Object.defineProperty(accordionButton, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"accordionButton\",\n      filename: \"src/_Accordion/AccordionButton.js\"\n    }\n  });\n}\n\nvar _default = AccordionButton;\nexport default _default;\n\nif (typeof AccordionButton !== 'undefined' && AccordionButton && AccordionButton === Object(AccordionButton) && Object.isExtensible(AccordionButton)) {\n  Object.defineProperty(AccordionButton, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"AccordionButton\",\n      filename: \"src/_Accordion/AccordionButton.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Icon, \"Icon\", \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionButton.js\");\n  reactHotLoader.register(AccordionButton, \"AccordionButton\", \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionButton.js\");\n  reactHotLoader.register(accordionButton, \"accordionButton\", \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionButton.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionButton.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/_Accordion/AccordionButton.js"],"names":["React","useContext","useMemo","PropTypes","styled","useAccordion","useAccordionItem","Base","ThemeContext","icon","setTheme","sharedStyles","accordionButtonTheme","accordionButtonIconTheme","Icon","props","AccordionButton","memo","children","className","onClick","onFocus","title","propsRest","classNames","themed","activeItem","setActiveItem","uid","handleClick","e","preventDefault","target","dataset","propTypes","node","isRequired","theme","object","string","toggleProps","accordionButton"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,UAAvC;AACA,SACEC,oBADF,EAEEC,wBAFF,QAGO,mBAHP;AAKA,IAAMC,IAAI,GAAGL,IAAH,oBACRI,wBADQ,EAERF,YAFQ,EAGR,UAAAI,KAAK;AAAA,SAAIA,KAAK,CAACX,MAAV;AAAA,CAHG,EAIN,UAAAW,KAAK;AAAA,SAAIA,KAAK,CAACX,MAAV;AAAA,CAJC,CAAV;AAOA,OAAO,IAAMY,eAAe,GAAGhB,KAAK,CAACiB,IAAN,CAAW,SAASD,eAAT,OAOvC;AAAA,MANDE,QAMC,QANDA,QAMC;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,OAIC,QAJDA,OAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADEC,SACF;;AACD,MAAMC,UAAU,6BAAsBL,SAAS,IAAI,EAAnC,CAAhB;AACA,MAAMM,MAAM,GAAGvB,OAAO,CACpB;AAAA,WAAM,CAACU,oBAAD,EAAuBC,wBAAvB,CAAN;AAAA,GADoB,EAEpB,CAACD,oBAAD,EAAuBC,wBAAvB,CAFoB,CAAtB;;AAFC,sBAOqCR,YAAY,EAPjD;AAAA,MAOOqB,UAPP,iBAOOA,UAPP;AAAA,MAOmBC,aAPnB,iBAOmBA,aAPnB;;AAAA,0BAQerB,gBAAgB,EAR/B;AAAA,MAQOsB,GARP,qBAQOA,GARP;;AAUD,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,OAAO,GAAGA,OAAO,CAACU,CAAD,CAAV,GAAgBH,aAAa,CAACG,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBL,GAAlB,CAApC;AACD,GAbA,CAcD;AACA;AACA;AACA;;;AAEA,SACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,SAAS,EAAEJ,UAFb;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,OAAO,EAAEI,WAJX;AAKE,gBAAUD;AALZ,KAMML,SANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOGL,QAPH,CADF;AAWD,CArC8B,CAAxB,C,CAuCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEAF,eAAe,CAACkB,SAAhB,GAA4B;AAC1BhB,EAAAA,QAAQ,EAAEf,SAAS,CAACgC,IAAV,CAAeC,UADC;AAE1BC,EAAAA,KAAK,EAAElC,SAAS,CAACmC,MAFS;AAG1BhB,EAAAA,KAAK,EAAEnB,SAAS,CAACoC,MAHS;AAI1BC,EAAAA,WAAW,EAAErC,SAAS,CAACmC;AAJG,CAA5B;AAMA,OAAO,IAAMG,eAAe,GAAGrC,MAAM,CAACY,eAAD,CAA9B;;;;;;;;;;;;;eACQA,e;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAhEMF,I;0BAOOE,e;0BAwDAyB,e","sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { useAccordion } from './AccordionContext'\nimport { useAccordionItem } from './AccordionItem'\nimport { Base } from '../Base'\nimport { ThemeContext } from '../ThemeContext'\nimport { icon } from '../Icon'\nimport { setTheme, sharedStyles } from '../utils'\nimport {\n  accordionButtonTheme,\n  accordionButtonIconTheme,\n} from './accordion.theme'\n\nconst Icon = icon`\n${accordionButtonIconTheme}\n${sharedStyles};\n${props => props.styled};\n  ${props => props.styled};\n`\n\nexport const AccordionButton = React.memo(function AccordionButton({\n  children,\n  className,\n  onClick,\n  onFocus,\n  title,\n  ...propsRest\n}) {\n  const classNames = `AccordionButton ${className || ''}`\n  const themed = useMemo(\n    () => [accordionButtonTheme, accordionButtonIconTheme],\n    [accordionButtonTheme, accordionButtonIconTheme]\n  )\n\n  const { activeItem, setActiveItem } = useAccordion()\n  const { uid } = useAccordionItem()\n\n  function handleClick(e) {\n    e.preventDefault()\n    onClick ? onClick(e) : setActiveItem(e.target.dataset.uid)\n  }\n  // function handleFocus(e) {\n  //   e.preventDefault()\n  //   onFocus ? onFocus(e) : setActiveItem(e.target.dataset.uid)\n  // }\n\n  return (\n    <Base\n      el=\"button\"\n      className={classNames}\n      themed={themed}\n      onClick={handleClick}\n      data-uid={uid}\n      {...propsRest}>\n      {children}\n    </Base>\n  )\n})\n\n// <Icon\n//                       theme={themeContext}\n//                       onClick={setActiveItem}\n//                       styled={\n//                         state.hover\n//                           ? styles('accordion.button.icon.&:hover')(props)\n//                           : ''\n//                       }\n//                       {...iconProps}\n//                     />\n\nAccordionButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object,\n  title: PropTypes.string,\n  toggleProps: PropTypes.object,\n}\nexport const accordionButton = styled(AccordionButton)\nexport default AccordionButton\n"]}]}