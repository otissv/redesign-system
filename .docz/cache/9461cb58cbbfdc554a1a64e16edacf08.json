{"remainingRequest":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js??ref--11-1!/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/redesign/src/Img/Img.tsx","dependencies":[{"path":"/mnt/Storage/Projects/redesign/src/Img/Img.tsx","mtime":1561590420088},{"path":"/mnt/Storage/Projects/redesign/node_modules/cache-loader/dist/cjs.js","mtime":1558371898492},{"path":"/mnt/Storage/Projects/redesign/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/redesign/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1558369220865},{"path":"/mnt/Storage/Projects/redesign/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvcmVkZXNpZ24vc3JjL0ltZy9JbWcudHN4IjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsWyJkZWZhdWx0Il0uc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCmltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnOwppbXBvcnQgeyBCYXNlIH0gZnJvbSAnLi4vQmFzZSc7CmltcG9ydCB7IGltZ1RoZW1lLCBpbWdTaXplVGhlbWUgfSBmcm9tICcuL2ltZy50aGVtZSc7CmV4cG9ydCBmdW5jdGlvbiBJbWcoX3JlZikgewogIHZhciBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sCiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lLAogICAgICB0aGVtZWQgPSBfcmVmLnRoZW1lZCwKICAgICAgcHJvcHNSZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsIFsiY2hpbGRyZW4iLCAiY2xhc3NOYW1lIiwgInRoZW1lZCJdKTsKCiAgLy8gY29tcG9uZW50RGlkTW91bnQoKSB7CiAgLy8gICAvLyB0aGlzLmVsZW1lbnQgPSBoZWxwZXJzLmdldEVsZW1lbnQodGhpcy5wcm9wcy5raXRpZCk7CiAgLy8gICAvLyB0aGlzLnVwZGF0ZUltZyh0aGlzLmVsZW1lbnQpOwogIC8vICAgLy8gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMudXBkYXRlSW1nKTsKICAvLyB9CiAgLy8gY29tcG9uZW50V2lsbFVubW91bnQoKSB7CiAgLy8gICAvLyB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy51cGRhdGVJbWcpOwogIC8vIH0KICAvLyB1cGRhdGVJbWcoKSB7CiAgLy8gICAvLyBjb25zdCBwcm9wcyA9IHRoaXMucHJvcHM7CiAgLy8gICAvLyBjb25zdCBlbGVtZW50ID0gdGhpcy5lbGVtZW50OwogIC8vICAgLy8gbGV0IHNjcmVlbiA9IGhlbHBlcnMuYnJlYWtwb2ludHMoKS5zY3JlZW47CiAgLy8gICAvLyBsZXQgbG9ja2VkID0gZmFsc2U7CiAgLy8gICAvLyBpZiAoIWxvY2tlZCkgewogIC8vICAgLy8gICBjb25zdCB1cGRhdGVFbGVtZW50ID0gKG1lZGlhKSA9PiB7CiAgLy8gICAvLyAgICAgaWYgKHByb3BzLmNvdmVyKSB7CiAgLy8gICAvLyAgICAgICBlbGVtZW50LnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IHByb3BzW21lZGlhXS5zcmMgIGB1cmwoJHtwcm9wc1ttZWRpYV0uc3JjfSlgIDogYHVybCgke3Byb3BzLnNyY30pYDsKICAvLyAgIC8vICAgICB9IGVsc2UgewogIC8vICAgLy8gICAgICAgZWxlbWVudC5zcmMgPSBwcm9wc1ttZWRpYV0uc3JjIHx8IHByb3BzLnNyYzsKICAvLyAgIC8vICAgICAgIGVsZW1lbnQuYWx0ID0gcHJvcHNbbWVkaWFdLmFsdCB8fCBwcm9wcy5hbHQ7CiAgLy8gICAvLyAgICAgfQogIC8vICAgLy8gICAgIGVsZW1lbnQuc3R5bGUud2lkdGggPSBwcm9wc1ttZWRpYV0ud2lkdGggfHwgcHJvcHMud2lkdGg7CiAgLy8gICAvLyAgICAgZWxlbWVudC5zdHlsZS5oZWlnaHQgPSBwcm9wc1ttZWRpYV0uaGVpZ2h0IHx8IHByb3BzLmhlaWdodDsKICAvLyAgIC8vICAgfTsKICAvLyAgIC8vICAgaWYgKHByb3BzLnNtYWxsIHx8IHByb3BzLm1lZGl1bSB8fCBwcm9wcy5sYXJnZSB8fCBwcm9wcy54bGFyZ2UpIHsKICAvLyAgIC8vICAgICBpZiAoc2NyZWVuLnNtYWxsKSB7CiAgLy8gICAvLyAgICAgICB1cGRhdGVFbGVtZW50KCdzbWFsbCcpOwogIC8vICAgLy8gICAgIH0gZWxzZSBpZiAoc2NyZWVuLm1lZGl1bSkgewogIC8vICAgLy8gICAgICAgdXBkYXRlRWxlbWVudCgnbWVkaXVtJyk7CiAgLy8gICAvLyAgICAgfSBlbHNlIGlmIChzY3JlZW4ubGFyZ2UpIHsKICAvLyAgIC8vICAgICAgIHVwZGF0ZUVsZW1lbnQoJ2xhcmdlJyk7CiAgLy8gICAvLyAgICAgfSBlbHNlIGlmIChzY3JlZW4ueGxhcmdlKSB7CiAgLy8gICAvLyAgICAgICB1cGRhdGVFbGVtZW50KCd4bGFyZ2UnKTsKICAvLyAgIC8vICAgICB9CiAgLy8gICAvLyAgIH0KICAvLyAgIC8vIH0KICAvLyB9CiAgdmFyIGNsYXNzTmFtZXMgPSAiSW1nICIuY29uY2F0KGNsYXNzTmFtZSk7CgogIHZhciBfdGhlbWVkID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gW2ltZ1RoZW1lLCBpbWdTaXplVGhlbWVdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhlbWVkKSk7CiAgfSwgW2ltZ1RoZW1lLCBpbWdTaXplVGhlbWUsIHRoZW1lZF0pOwoKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChCYXNlLCBPYmplY3QuYXNzaWduKHsKICAgIGFzOiAiaW1nIiwKICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcywKICAgIHRoZW1lZDogX3RoZW1lZAogIH0sIHByb3BzUmVzdCwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNjEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSk7Cn0KCl9fc2lnbmF0dXJlX18oSW1nLCAidXNlTWVtb3tfdGhlbWVkfSIpOwoKaWYgKHR5cGVvZiBJbWcgIT09ICd1bmRlZmluZWQnICYmIEltZyAmJiBJbWcgPT09IE9iamVjdChJbWcpICYmIE9iamVjdC5pc0V4dGVuc2libGUoSW1nKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShJbWcsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJJbWciLAogICAgICBmaWxlbmFtZTogInNyYy9JbWcvSW1nLnRzeCIKICAgIH0KICB9KTsKfQoKSW1nLmRlZmF1bHRQcm9wcyA9IHsKICBjbGFzc05hbWU6ICcnLAogIHRoZW1lZDogW10KfTsKdmFyIF9kZWZhdWx0ID0gSW1nOwpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKCmlmICh0eXBlb2YgSW1nICE9PSAndW5kZWZpbmVkJyAmJiBJbWcgJiYgSW1nID09PSBPYmplY3QoSW1nKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKEltZykpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoSW1nLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiSW1nIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvSW1nL0ltZy50c3giCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoSW1nLCAiSW1nIiwgIi9tbnQvU3RvcmFnZS9Qcm9qZWN0cy9yZWRlc2lnbi9zcmMvSW1nL0ltZy50c3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL21udC9TdG9yYWdlL1Byb2plY3RzL3JlZGVzaWduL3NyYy9JbWcvSW1nLnRzeCIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/mnt/Storage/Projects/redesign/src/Img/Img.tsx"],"names":["React","useMemo","Base","imgTheme","imgSizeTheme","Img","children","className","themed","propsRest","classNames","_themed","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAGA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,aAAvC;AAEA,OAAO,SAASC,GAAT,OAKU;AAAA,MAJfC,QAIe,QAJfA,QAIe;AAAA,MAHfC,SAGe,QAHfA,SAGe;AAAA,MAFfC,MAEe,QAFfA,MAEe;AAAA,MADZC,SACY;;AACf;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,UAAU,iBAAUH,SAAV,CAAhB;;AACA,MAAMI,OAAO,GAAGV,OAAO,CAAC;AAAA,YAAOE,QAAP,EAAiBC,YAAjB,4BAAkCI,MAAlC;AAAA,GAAD,EAA4C,CACjEL,QADiE,EAEjEC,YAFiE,EAGjEI,MAHiE,CAA5C,CAAvB;;AAMA,SACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,KAAT;AAAe,IAAA,SAAS,EAAEE,UAA1B;AAAsC,IAAA,MAAM,EAAEC;AAA9C,KAA2DF,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD;;cAxDeJ,G;;;;;;;;;;;;;AA0DhBA,GAAG,CAACO,YAAJ,GAAmB;AACjBL,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAAnB;eAKeH,G;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA/DgBA,G","sourcesContent":["import React, { useMemo } from 'react';\nimport { ImgInterface } from './img.types';\n\nimport { Base } from '../Base';\nimport { imgTheme, imgSizeTheme } from './img.theme';\n\nexport function Img({\n  children,\n  className,\n  themed,\n  ...propsRest\n}: ImgInterface) {\n  // componentDidMount() {\n  //   // this.element = helpers.getElement(this.props.kitid);\n  //   // this.updateImg(this.element);\n  //   // window.addEventListener('resize', this.updateImg);\n  // }\n\n  // componentWillUnmount() {\n  //   // window.removeEventListener('resize', this.updateImg);\n  // }\n\n  // updateImg() {\n  //   // const props = this.props;\n  //   // const element = this.element;\n  //   // let screen = helpers.breakpoints().screen;\n  //   // let locked = false;\n  //   // if (!locked) {\n  //   //   const updateElement = (media) => {\n  //   //     if (props.cover) {\n  //   //       element.style.backgroundImage = props[media].src  `url(${props[media].src})` : `url(${props.src})`;\n  //   //     } else {\n  //   //       element.src = props[media].src || props.src;\n  //   //       element.alt = props[media].alt || props.alt;\n  //   //     }\n  //   //     element.style.width = props[media].width || props.width;\n  //   //     element.style.height = props[media].height || props.height;\n  //   //   };\n  //   //   if (props.small || props.medium || props.large || props.xlarge) {\n  //   //     if (screen.small) {\n  //   //       updateElement('small');\n  //   //     } else if (screen.medium) {\n  //   //       updateElement('medium');\n  //   //     } else if (screen.large) {\n  //   //       updateElement('large');\n  //   //     } else if (screen.xlarge) {\n  //   //       updateElement('xlarge');\n  //   //     }\n  //   //   }\n  //   // }\n  // }\n\n  const classNames = `Img ${className}`;\n  const _themed = useMemo(() => [imgTheme, imgSizeTheme, ...themed], [\n    imgTheme,\n    imgSizeTheme,\n    themed,\n  ]);\n\n  return (\n    <Base as=\"img\" className={classNames} themed={_themed} {...propsRest} />\n  );\n}\n\nImg.defaultProps = {\n  className: '',\n  themed: [],\n};\n\nexport default Img;\n"]}]}