{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/Toolbar/Toolbar.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/Toolbar/Toolbar.js","mtime":1557736352166},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Toolbar/Toolbar.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { AppBar } from '../AppBar';\nimport { toolbarTheme } from './toolbar.theme';\nexport function Toolbar(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      _ref$items = _ref.items,\n      items = _ref$items === void 0 ? [] : _ref$items,\n      onDeleteSelected = _ref.onDeleteSelected,\n      onSwitchView = _ref.onSwitchView,\n      toolbar = _ref.toolbar,\n      selectToolbar = _ref.selectToolbar,\n      propsThemed = _ref.themed,\n      propsRest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"items\", \"onDeleteSelected\", \"onSwitchView\", \"toolbar\", \"selectToolbar\", \"themed\"]);\n\n  var classNames = \"Toolbar \".concat(className || '');\n\n  function handleDeleteSelected(e) {\n    e.preventDefault();\n    onDeleteSelected && onDeleteSelected(e);\n  }\n\n  var themed = useMemo(function () {\n    return [toolbarTheme].concat(_toConsumableArray(propsThemed));\n  }, [toolbarTheme, propsThemed]);\n\n  function handleSwitchView(e) {\n    e.preventDefault();\n    var id = e.currentTarget.dataset.uid;\n    onSwitchView && onSwitchView(e, {\n      id: id\n    });\n  }\n\n  var SelectToolbar = selectToolbar;\n  var toolbarContent = useMemo(function () {\n    return items.length > 0 ? React.createElement(SelectToolbar, {\n      selected: items.length,\n      handleDeleteSelected: handleDeleteSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }) : typeof children === 'function' ? children({\n      handleSwitchView: handleSwitchView,\n      toolbar: toolbar\n    }) : children;\n  }, [children, handleSwitchView, handleDeleteSelected, items, toolbar]);\n  return React.createElement(AppBar, Object.assign({\n    className: classNames,\n    themed: themed\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), toolbarContent);\n}\n\nif (typeof Toolbar !== 'undefined' && Toolbar && Toolbar === Object(Toolbar) && Object.isExtensible(Toolbar)) {\n  Object.defineProperty(Toolbar, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Toolbar\",\n      filename: \"src/Toolbar/Toolbar.js\"\n    }\n  });\n}\n\nToolbar.defaultProps = {\n  themed: []\n};\nToolbar.propTypes = {\n  themed: PropTypes.array\n};\nvar _default = Toolbar;\nexport default _default;\n\nif (typeof Toolbar !== 'undefined' && Toolbar && Toolbar === Object(Toolbar) && Object.isExtensible(Toolbar)) {\n  Object.defineProperty(Toolbar, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Toolbar\",\n      filename: \"src/Toolbar/Toolbar.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Toolbar, \"Toolbar\", \"/mnt/Storage/Projects/themed-styled-components/src/Toolbar/Toolbar.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Toolbar/Toolbar.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Toolbar/Toolbar.js"],"names":["React","useMemo","styled","PropTypes","AppBar","toolbarTheme","Toolbar","children","className","items","onDeleteSelected","onSwitchView","toolbar","selectToolbar","propsThemed","themed","propsRest","classNames","handleDeleteSelected","e","preventDefault","handleSwitchView","id","currentTarget","dataset","uid","SelectToolbar","toolbarContent","length","defaultProps","propTypes","array"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,SAASC,OAAT,OAUJ;AAAA,MATDC,QASC,QATDA,QASC;AAAA,MARDC,SAQC,QARDA,SAQC;AAAA,wBAPDC,KAOC;AAAA,MAPDA,KAOC,2BAPO,EAOP;AAAA,MANDC,gBAMC,QANDA,gBAMC;AAAA,MALDC,YAKC,QALDA,YAKC;AAAA,MAJDC,OAIC,QAJDA,OAIC;AAAA,MAHDC,aAGC,QAHDA,aAGC;AAAA,MAFOC,WAEP,QAFDC,MAEC;AAAA,MADEC,SACF;;AACD,MAAMC,UAAU,qBAAcT,SAAS,IAAI,EAA3B,CAAhB;;AAEA,WAASU,oBAAT,CAA8BC,CAA9B,EAAiC;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,gBAAgB,IAAIA,gBAAgB,CAACS,CAAD,CAApC;AACD;;AACD,MAAMJ,MAAM,GAAGd,OAAO,CAAC;AAAA,YAAOI,YAAP,4BAAwBS,WAAxB;AAAA,GAAD,EAAuC,CAC3DT,YAD2D,EAE3DS,WAF2D,CAAvC,CAAtB;;AAKA,WAASO,gBAAT,CAA0BF,CAA1B,EAA6B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAME,EAAE,GAAGH,CAAC,CAACI,aAAF,CAAgBC,OAAhB,CAAwBC,GAAnC;AAEAd,IAAAA,YAAY,IAAIA,YAAY,CAACQ,CAAD,EAAI;AAAEG,MAAAA,EAAE,EAAFA;AAAF,KAAJ,CAA5B;AACD;;AAED,MAAMI,aAAa,GAAGb,aAAtB;AAEA,MAAMc,cAAc,GAAG1B,OAAO,CAC5B;AAAA,WACEQ,KAAK,CAACmB,MAAN,GAAe,CAAf,GACE,oBAAC,aAAD;AACE,MAAA,QAAQ,EAAEnB,KAAK,CAACmB,MADlB;AAEE,MAAA,oBAAoB,EAAEV,oBAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAKI,OAAOX,QAAP,KAAoB,UAApB,GACFA,QAAQ,CAAC;AAAEc,MAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBT,MAAAA,OAAO,EAAPA;AAApB,KAAD,CADN,GAGFL,QATJ;AAAA,GAD4B,EAY5B,CAACA,QAAD,EAAWc,gBAAX,EAA6BH,oBAA7B,EAAmDT,KAAnD,EAA0DG,OAA1D,CAZ4B,CAA9B;AAeA,SACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEK,UAAnB;AAA+B,IAAA,MAAM,EAAEF;AAAvC,KAAmDC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGW,cADH,CADF;AAKD;;;;;;;;;;;;;AAEDrB,OAAO,CAACuB,YAAR,GAAuB;AACrBd,EAAAA,MAAM,EAAE;AADa,CAAvB;AAIAT,OAAO,CAACwB,SAAR,GAAoB;AAClBf,EAAAA,MAAM,EAAEZ,SAAS,CAAC4B;AADA,CAApB;eAIezB,O;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA7DgBA,O","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport { AppBar } from '../AppBar'\nimport { toolbarTheme } from './toolbar.theme'\n\nexport function Toolbar({\n  children,\n  className,\n  items = [],\n  onDeleteSelected,\n  onSwitchView,\n  toolbar,\n  selectToolbar,\n  themed: propsThemed,\n  ...propsRest\n}) {\n  const classNames = `Toolbar ${className || ''}`\n\n  function handleDeleteSelected(e) {\n    e.preventDefault()\n    onDeleteSelected && onDeleteSelected(e)\n  }\n  const themed = useMemo(() => [toolbarTheme, ...propsThemed], [\n    toolbarTheme,\n    propsThemed,\n  ])\n\n  function handleSwitchView(e) {\n    e.preventDefault()\n    const id = e.currentTarget.dataset.uid\n\n    onSwitchView && onSwitchView(e, { id })\n  }\n\n  const SelectToolbar = selectToolbar\n\n  const toolbarContent = useMemo(\n    () =>\n      items.length > 0 ? (\n        <SelectToolbar\n          selected={items.length}\n          handleDeleteSelected={handleDeleteSelected}\n        />\n      ) : typeof children === 'function' ? (\n        children({ handleSwitchView, toolbar })\n      ) : (\n        children\n      ),\n    [children, handleSwitchView, handleDeleteSelected, items, toolbar]\n  )\n\n  return (\n    <AppBar className={classNames} themed={themed} {...propsRest}>\n      {toolbarContent}\n    </AppBar>\n  )\n}\n\nToolbar.defaultProps = {\n  themed: [],\n}\n\nToolbar.propTypes = {\n  themed: PropTypes.array,\n}\n\nexport default Toolbar\n"]}]}