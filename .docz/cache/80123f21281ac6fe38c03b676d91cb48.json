{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/Badge/Badge.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/Badge/Badge.js","mtime":1557778588019},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Badge/Badge.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Base from '../Base/Base';\nimport { badgeTheme, badgeContextTheme, badgePillTheme } from './badge.theme';\nexport var Badge = React.memo(function Badge(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      propsThemed = _ref.themed,\n      propsRest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"themed\"]);\n\n  var classNames = \"Badge \".concat(className || '');\n  var themed = useMemo(function () {\n    return [badgeTheme, badgeContextTheme, badgePillTheme].concat(_toConsumableArray(propsThemed));\n  }, [badgeTheme, badgeContextTheme, badgePillTheme, propsThemed]);\n  return React.createElement(Base, Object.assign({\n    className: classNames,\n    themed: themed\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), children);\n});\n\nif (typeof Badge !== 'undefined' && Badge && Badge === Object(Badge) && Object.isExtensible(Badge)) {\n  Object.defineProperty(Badge, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Badge\",\n      filename: \"src/Badge/Badge.js\"\n    }\n  });\n}\n\nBadge.defaultProps = {\n  themed: []\n};\nBadge.propTypes = {\n  children: PropTypes.node,\n  context: PropTypes.oneOf(['accent', 'action', 'success', 'warning', 'danger']),\n  onClose: PropTypes.func,\n  themed: PropTypes.array\n};\nvar _default = Badge;\nexport default _default;\n\nif (typeof Badge !== 'undefined' && Badge && Badge === Object(Badge) && Object.isExtensible(Badge)) {\n  Object.defineProperty(Badge, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Badge\",\n      filename: \"src/Badge/Badge.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Badge, \"Badge\", \"/mnt/Storage/Projects/themed-styled-components/src/Badge/Badge.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Badge/Badge.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Badge/Badge.js"],"names":["React","useMemo","styled","PropTypes","Base","badgeTheme","badgeContextTheme","badgePillTheme","Badge","memo","children","className","propsThemed","themed","propsRest","classNames","defaultProps","propTypes","node","context","oneOf","onClose","func","array"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,UAAT,EAAqBC,iBAArB,EAAwCC,cAAxC,QAA8D,eAA9D;AAEA,OAAO,IAAMC,KAAK,GAAGR,KAAK,CAACS,IAAN,CAAW,SAASD,KAAT,OAK7B;AAAA,MAJDE,QAIC,QAJDA,QAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFOC,WAEP,QAFDC,MAEC;AAAA,MADEC,SACF;;AACD,MAAMC,UAAU,mBAAYJ,SAAS,IAAI,EAAzB,CAAhB;AACA,MAAME,MAAM,GAAGZ,OAAO,CACpB;AAAA,YAAOI,UAAP,EAAmBC,iBAAnB,EAAsCC,cAAtC,4BAAyDK,WAAzD;AAAA,GADoB,EAEpB,CAACP,UAAD,EAAaC,iBAAb,EAAgCC,cAAhC,EAAgDK,WAAhD,CAFoB,CAAtB;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEG,UAAjB;AAA6B,IAAA,MAAM,EAAEF;AAArC,KAAiDC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,QADH,CADF;AAKD,CAjBoB,CAAd;;;;;;;;;;;;;AAmBPF,KAAK,CAACQ,YAAN,GAAqB;AACnBH,EAAAA,MAAM,EAAE;AADW,CAArB;AAIAL,KAAK,CAACS,SAAN,GAAkB;AAChBP,EAAAA,QAAQ,EAAEP,SAAS,CAACe,IADJ;AAEhBC,EAAAA,OAAO,EAAEhB,SAAS,CAACiB,KAAV,CAAgB,CACvB,QADuB,EAEvB,QAFuB,EAGvB,SAHuB,EAIvB,SAJuB,EAKvB,QALuB,CAAhB,CAFO;AAShBC,EAAAA,OAAO,EAAElB,SAAS,CAACmB,IATH;AAUhBT,EAAAA,MAAM,EAAEV,SAAS,CAACoB;AAVF,CAAlB;eAaef,K;AAAf;;;;;;;;;;;;;;;;;;;;;;0BApCaA,K","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport Base from '../Base/Base'\nimport { badgeTheme, badgeContextTheme, badgePillTheme } from './badge.theme'\n\nexport const Badge = React.memo(function Badge({\n  children,\n  className,\n  themed: propsThemed,\n  ...propsRest\n}) {\n  const classNames = `Badge ${className || ''}`\n  const themed = useMemo(\n    () => [badgeTheme, badgeContextTheme, badgePillTheme, ...propsThemed],\n    [badgeTheme, badgeContextTheme, badgePillTheme, propsThemed]\n  )\n\n  return (\n    <Base className={classNames} themed={themed} {...propsRest}>\n      {children}\n    </Base>\n  )\n})\n\nBadge.defaultProps = {\n  themed: [],\n}\n\nBadge.propTypes = {\n  children: PropTypes.node,\n  context: PropTypes.oneOf([\n    'accent',\n    'action',\n    'success',\n    'warning',\n    'danger',\n  ]),\n  onClose: PropTypes.func,\n  themed: PropTypes.array,\n}\n\nexport default Badge\n"]}]}