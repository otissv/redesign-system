{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/Video/Video.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/Video/Video.js","mtime":1557778588069},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _objectSpread from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Video/Video.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useMemo } from 'react';\nimport Base from '../Base/Base';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nexport function videoTheme(_ref) {\n  var _ref$theme = _ref.theme,\n      animation = _ref$theme.animation,\n      color = _ref$theme.color,\n      font = _ref$theme.font;\n  return {};\n}\n\nif (typeof videoTheme !== 'undefined' && videoTheme && videoTheme === Object(videoTheme) && Object.isExtensible(videoTheme)) {\n  Object.defineProperty(videoTheme, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"videoTheme\",\n      filename: \"src/Video/Video.js\"\n    }\n  });\n}\n\nexport var Video = React.memo(function Video(_ref2) {\n  var allowFullScreen = _ref2.allowFullScreen,\n      autoPlay = _ref2.autoPlay,\n      children = _ref2.children,\n      className = _ref2.className,\n      embeded = _ref2.embeded,\n      height = _ref2.height,\n      muted = _ref2.muted,\n      src = _ref2.src,\n      width = _ref2.width,\n      propsThemed = _ref2.themed,\n      propsRest = _objectWithoutProperties(_ref2, [\"allowFullScreen\", \"autoPlay\", \"children\", \"className\", \"embeded\", \"height\", \"muted\", \"src\", \"width\", \"themed\"]);\n\n  var classNames = \"Video \".concat(className || '');\n  var themed = useMemo(function () {\n    return [videoTheme].concat(_toConsumableArray(propsThemed));\n  }, [videoTheme, propsThemed]);\n\n  var properties = _objectSpread({}, propsRest, {\n    allowFullScreen: allowFullScreen ? 'true' : null,\n    autoPlay: autoPlay ? 'true' : null,\n    height: height,\n    muted: muted || null,\n    src: src,\n    width: width\n  });\n\n  console.log(properties.autoPlay);\n  return React.createElement(Base, Object.assign({\n    el: embeded ? null : 'video',\n    className: classNames,\n    themed: themed\n  }, embeded ? null : properties, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), embeded ? React.createElement(\"iframe\", Object.assign({}, properties, {\n    frameBorder: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })) : children);\n});\n\nif (typeof Video !== 'undefined' && Video && Video === Object(Video) && Object.isExtensible(Video)) {\n  Object.defineProperty(Video, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Video\",\n      filename: \"src/Video/Video.js\"\n    }\n  });\n}\n\nVideo.propTypes = {\n  allowFullScreen: PropTypes.bool,\n  autoplay: PropTypes.bool,\n  controls: PropTypes.bool,\n  embeded: PropTypes.bool,\n  height: PropTypes.string,\n  intrinsicsize: PropTypes.string,\n  inview: PropTypes.bool,\n  loop: PropTypes.bool,\n  muted: PropTypes.bool,\n  playsinline: PropTypes.bool,\n  preload: PropTypes.oneOf(['none', 'metadata', 'auto']),\n  src: PropTypes.string,\n  themed: PropTypes.array,\n  width: PropTypes.width\n};\nVideo.defaultProps = {\n  embeded: false,\n  height: 'auto',\n  inView: false,\n  loop: false,\n  muted: false,\n  playsInline: false,\n  preload: 'auto',\n  themed: [],\n  width: '100%'\n};\nvar _default = Video;\nexport default _default;\n\nif (typeof Video !== 'undefined' && Video && Video === Object(Video) && Object.isExtensible(Video)) {\n  Object.defineProperty(Video, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Video\",\n      filename: \"src/Video/Video.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(videoTheme, \"videoTheme\", \"/mnt/Storage/Projects/themed-styled-components/src/Video/Video.js\");\n  reactHotLoader.register(Video, \"Video\", \"/mnt/Storage/Projects/themed-styled-components/src/Video/Video.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Video/Video.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Video/Video.js"],"names":["React","useMemo","Base","styled","PropTypes","videoTheme","theme","animation","color","font","Video","memo","allowFullScreen","autoPlay","children","className","embeded","height","muted","src","width","propsThemed","themed","propsRest","classNames","properties","console","log","propTypes","bool","autoplay","controls","string","intrinsicsize","inview","loop","playsinline","preload","oneOf","array","defaultProps","inView","playsInline"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\n\nimport Base from '../Base/Base'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nexport function videoTheme({ theme: { animation, color, font } }) {\n  return {}\n}\n\nexport const Video = React.memo(function Video({\n  allowFullScreen,\n  autoPlay,\n  children,\n  className,\n  embeded,\n  height,\n  muted,\n  src,\n  width,\n  themed: propsThemed,\n  ...propsRest\n}) {\n  const classNames = `Video ${className || ''}`\n  const themed = useMemo(() => [videoTheme, ...propsThemed], [\n    videoTheme,\n    propsThemed,\n  ])\n\n  const properties = {\n    ...propsRest,\n    allowFullScreen: allowFullScreen ? 'true' : null,\n    autoPlay: autoPlay ? 'true' : null,\n    height,\n    muted: muted || null,\n    src,\n    width,\n  }\n\n  console.log(properties.autoPlay)\n\n  return (\n    <Base\n      el={embeded ? null : 'video'}\n      className={classNames}\n      themed={themed}\n      {...(embeded ? null : properties)}>\n      {embeded ? <iframe {...properties} frameBorder=\"0\" /> : children}\n    </Base>\n  )\n})\n\nVideo.propTypes = {\n  allowFullScreen: PropTypes.bool,\n  autoplay: PropTypes.bool,\n  controls: PropTypes.bool,\n  embeded: PropTypes.bool,\n  height: PropTypes.string,\n  intrinsicsize: PropTypes.string,\n  inview: PropTypes.bool,\n  loop: PropTypes.bool,\n  muted: PropTypes.bool,\n  playsinline: PropTypes.bool,\n  preload: PropTypes.oneOf(['none', 'metadata', 'auto']),\n  src: PropTypes.string,\n  themed: PropTypes.array,\n  width: PropTypes.width,\n}\n\nVideo.defaultProps = {\n  embeded: false,\n  height: 'auto',\n  inView: false,\n  loop: false,\n  muted: false,\n  playsInline: false,\n  preload: 'auto',\n  themed: [],\n  width: '100%',\n}\n\nexport default Video\n"]}]}