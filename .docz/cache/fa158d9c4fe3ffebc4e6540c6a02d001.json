{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/CoverImg/CoverImg.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/CoverImg/CoverImg.js","mtime":1557935177403},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/CoverImg/CoverImg.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Base from '../Base/Base';\nimport { coverImgTheme } from './coverImg.theme';\nexport var CoverImg = React.memo(function CoverImg(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      propsThemed = _ref.themed,\n      propsRest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"themed\"]);\n\n  // componentDidMount() {\n  //   // this.element = helpers.getElement(this.props.kitid);\n  //   // this.updateImg(this.element);\n  //   // window.addEventListener('resize', this.updateImg);\n  // }\n  // componentWillUnmount() {\n  //   // window.removeEventListener('resize', this.updateImg);\n  // }\n  // updateImg() {\n  //   // const props = this.props;\n  //   // const element = this.element;\n  //   // let screen = helpers.breakpoints().screen;\n  //   // let locked = false;\n  //   // if (!locked) {\n  //   //   const updateElement = (media) => {\n  //   //     if (props.cover) {\n  //   //       element.style.backgroundImage = props[media].src  `url(${props[media].src})` : `url(${props.src})`;\n  //   //     } else {\n  //   //       element.src = props[media].src || props.src;\n  //   //       element.alt = props[media].alt || props.alt;\n  //   //     }\n  //   //     element.style.width = props[media].width || props.width;\n  //   //     element.style.height = props[media].height || props.height;\n  //   //   };\n  //   //   if (props.small || props.medium || props.large || props.xlarge) {\n  //   //     if (screen.small) {\n  //   //       updateElement('small');\n  //   //     } else if (screen.medium) {\n  //   //       updateElement('medium');\n  //   //     } else if (screen.large) {\n  //   //       updateElement('large');\n  //   //     } else if (screen.xlarge) {\n  //   //       updateElement('xlarge');\n  //   //     }\n  //   //   }\n  //   // }\n  // }\n  var classNames = \"CoverImg \".concat(className || '');\n  var themed = useMemo(function () {\n    return [coverImgTheme].concat(_toConsumableArray(propsThemed));\n  }, [coverImgTheme, propsThemed]);\n  return React.createElement(Base, Object.assign({\n    className: classNames,\n    themed: themed\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), children);\n});\n\nif (typeof CoverImg !== 'undefined' && CoverImg && CoverImg === Object(CoverImg) && Object.isExtensible(CoverImg)) {\n  Object.defineProperty(CoverImg, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"CoverImg\",\n      filename: \"src/CoverImg/CoverImg.js\"\n    }\n  });\n}\n\nCoverImg.defaultProps = {\n  cover: true,\n  height: '300px',\n  position: '50% 50%',\n  repeat: false,\n  themed: [],\n  width: '100%',\n  parallax: false\n};\nCoverImg.propTypes = {\n  children: PropTypes.node,\n  cover: PropTypes.bool,\n  repeat: PropTypes.bool,\n  position: PropTypes.string,\n  parallax: PropTypes.bool,\n  height: PropTypes.string,\n  large: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string\n  }),\n  medium: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string\n  }),\n  small: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string\n  }),\n  src: PropTypes.string,\n  width: PropTypes.string,\n  xlarge: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string\n  })\n};\nvar _default = CoverImg;\nexport default _default;\n\nif (typeof CoverImg !== 'undefined' && CoverImg && CoverImg === Object(CoverImg) && Object.isExtensible(CoverImg)) {\n  Object.defineProperty(CoverImg, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"CoverImg\",\n      filename: \"src/CoverImg/CoverImg.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CoverImg, \"CoverImg\", \"/mnt/Storage/Projects/themed-styled-components/src/CoverImg/CoverImg.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/CoverImg/CoverImg.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/CoverImg/CoverImg.js"],"names":["React","useMemo","styled","PropTypes","Base","coverImgTheme","CoverImg","memo","children","className","propsThemed","themed","propsRest","classNames","defaultProps","cover","height","position","repeat","width","parallax","propTypes","node","bool","string","large","shape","src","medium","small","xlarge"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport Base from '../Base/Base'\nimport { coverImgTheme } from './coverImg.theme'\n\nexport const CoverImg = React.memo(function CoverImg({\n  children,\n  className,\n  themed: propsThemed,\n  ...propsRest\n}) {\n  // componentDidMount() {\n  //   // this.element = helpers.getElement(this.props.kitid);\n  //   // this.updateImg(this.element);\n  //   // window.addEventListener('resize', this.updateImg);\n  // }\n\n  // componentWillUnmount() {\n  //   // window.removeEventListener('resize', this.updateImg);\n  // }\n\n  // updateImg() {\n  //   // const props = this.props;\n  //   // const element = this.element;\n  //   // let screen = helpers.breakpoints().screen;\n  //   // let locked = false;\n  //   // if (!locked) {\n  //   //   const updateElement = (media) => {\n  //   //     if (props.cover) {\n  //   //       element.style.backgroundImage = props[media].src  `url(${props[media].src})` : `url(${props.src})`;\n  //   //     } else {\n  //   //       element.src = props[media].src || props.src;\n  //   //       element.alt = props[media].alt || props.alt;\n  //   //     }\n  //   //     element.style.width = props[media].width || props.width;\n  //   //     element.style.height = props[media].height || props.height;\n  //   //   };\n  //   //   if (props.small || props.medium || props.large || props.xlarge) {\n  //   //     if (screen.small) {\n  //   //       updateElement('small');\n  //   //     } else if (screen.medium) {\n  //   //       updateElement('medium');\n  //   //     } else if (screen.large) {\n  //   //       updateElement('large');\n  //   //     } else if (screen.xlarge) {\n  //   //       updateElement('xlarge');\n  //   //     }\n  //   //   }\n  //   // }\n  // }\n\n  const classNames = `CoverImg ${className || ''}`\n  const themed = useMemo(() => [coverImgTheme, ...propsThemed], [\n    coverImgTheme,\n    propsThemed,\n  ])\n\n  return (\n    <Base className={classNames} themed={themed} {...propsRest}>\n      {children}\n    </Base>\n  )\n})\n\nCoverImg.defaultProps = {\n  cover: true,\n  height: '300px',\n  position: '50% 50%',\n  repeat: false,\n  themed: [],\n  width: '100%',\n  parallax: false,\n}\n\nCoverImg.propTypes = {\n  children: PropTypes.node,\n  cover: PropTypes.bool,\n  repeat: PropTypes.bool,\n  position: PropTypes.string,\n  parallax: PropTypes.bool,\n\n  height: PropTypes.string,\n  large: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string,\n  }),\n  medium: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string,\n  }),\n  small: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string,\n  }),\n  src: PropTypes.string,\n  width: PropTypes.string,\n  xlarge: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string,\n  }),\n}\n\nexport default CoverImg\n"]}]}