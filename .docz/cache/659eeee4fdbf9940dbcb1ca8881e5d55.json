{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/Img/Img.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/Img/Img.js","mtime":1557389841475},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvdGhlbWVkLXN0eWxlZC1jb21wb25lbnRzL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSAiL21udC9TdG9yYWdlL1Byb2plY3RzL3RoZW1lZC1zdHlsZWQtY29tcG9uZW50cy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOwp2YXIgX2pzeEZpbGVOYW1lID0gIi9tbnQvU3RvcmFnZS9Qcm9qZWN0cy90aGVtZWQtc3R5bGVkLWNvbXBvbmVudHMvc3JjL0ltZy9JbWcuanMiOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7CmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnOwppbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnOwppbXBvcnQgeyBCYXNlIH0gZnJvbSAnLi4vQmFzZSc7CmltcG9ydCB7IGltZ1RoZW1lLCBpbWdTaXplVGhlbWUgfSBmcm9tICcuL2ltZy50aGVtZSc7CmV4cG9ydCB2YXIgSW1nID0gUmVhY3QubWVtbyhmdW5jdGlvbiBJbWcoX3JlZikgewogIHZhciBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sCiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lLAogICAgICBwcm9wc1RoZW1lZCA9IF9yZWYudGhlbWVkLAogICAgICBwcm9wc1Jlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgWyJjaGlsZHJlbiIsICJjbGFzc05hbWUiLCAidGhlbWVkIl0pOwoKICAvLyBjb21wb25lbnREaWRNb3VudCgpIHsKICAvLyAgIC8vIHRoaXMuZWxlbWVudCA9IGhlbHBlcnMuZ2V0RWxlbWVudCh0aGlzLnByb3BzLmtpdGlkKTsKICAvLyAgIC8vIHRoaXMudXBkYXRlSW1nKHRoaXMuZWxlbWVudCk7CiAgLy8gICAvLyB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy51cGRhdGVJbWcpOwogIC8vIH0KICAvLyBjb21wb25lbnRXaWxsVW5tb3VudCgpIHsKICAvLyAgIC8vIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnVwZGF0ZUltZyk7CiAgLy8gfQogIC8vIHVwZGF0ZUltZygpIHsKICAvLyAgIC8vIGNvbnN0IHByb3BzID0gdGhpcy5wcm9wczsKICAvLyAgIC8vIGNvbnN0IGVsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7CiAgLy8gICAvLyBsZXQgc2NyZWVuID0gaGVscGVycy5icmVha3BvaW50cygpLnNjcmVlbjsKICAvLyAgIC8vIGxldCBsb2NrZWQgPSBmYWxzZTsKICAvLyAgIC8vIGlmICghbG9ja2VkKSB7CiAgLy8gICAvLyAgIGNvbnN0IHVwZGF0ZUVsZW1lbnQgPSAobWVkaWEpID0+IHsKICAvLyAgIC8vICAgICBpZiAocHJvcHMuY292ZXIpIHsKICAvLyAgIC8vICAgICAgIGVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gcHJvcHNbbWVkaWFdLnNyYyAgYHVybCgke3Byb3BzW21lZGlhXS5zcmN9KWAgOiBgdXJsKCR7cHJvcHMuc3JjfSlgOwogIC8vICAgLy8gICAgIH0gZWxzZSB7CiAgLy8gICAvLyAgICAgICBlbGVtZW50LnNyYyA9IHByb3BzW21lZGlhXS5zcmMgfHwgcHJvcHMuc3JjOwogIC8vICAgLy8gICAgICAgZWxlbWVudC5hbHQgPSBwcm9wc1ttZWRpYV0uYWx0IHx8IHByb3BzLmFsdDsKICAvLyAgIC8vICAgICB9CiAgLy8gICAvLyAgICAgZWxlbWVudC5zdHlsZS53aWR0aCA9IHByb3BzW21lZGlhXS53aWR0aCB8fCBwcm9wcy53aWR0aDsKICAvLyAgIC8vICAgICBlbGVtZW50LnN0eWxlLmhlaWdodCA9IHByb3BzW21lZGlhXS5oZWlnaHQgfHwgcHJvcHMuaGVpZ2h0OwogIC8vICAgLy8gICB9OwogIC8vICAgLy8gICBpZiAocHJvcHMuc21hbGwgfHwgcHJvcHMubWVkaXVtIHx8IHByb3BzLmxhcmdlIHx8IHByb3BzLnhsYXJnZSkgewogIC8vICAgLy8gICAgIGlmIChzY3JlZW4uc21hbGwpIHsKICAvLyAgIC8vICAgICAgIHVwZGF0ZUVsZW1lbnQoJ3NtYWxsJyk7CiAgLy8gICAvLyAgICAgfSBlbHNlIGlmIChzY3JlZW4ubWVkaXVtKSB7CiAgLy8gICAvLyAgICAgICB1cGRhdGVFbGVtZW50KCdtZWRpdW0nKTsKICAvLyAgIC8vICAgICB9IGVsc2UgaWYgKHNjcmVlbi5sYXJnZSkgewogIC8vICAgLy8gICAgICAgdXBkYXRlRWxlbWVudCgnbGFyZ2UnKTsKICAvLyAgIC8vICAgICB9IGVsc2UgaWYgKHNjcmVlbi54bGFyZ2UpIHsKICAvLyAgIC8vICAgICAgIHVwZGF0ZUVsZW1lbnQoJ3hsYXJnZScpOwogIC8vICAgLy8gICAgIH0KICAvLyAgIC8vICAgfQogIC8vICAgLy8gfQogIC8vIH0KICB2YXIgY2xhc3NOYW1lcyA9ICJJbWcgIi5jb25jYXQoY2xhc3NOYW1lIHx8ICcnKTsKICB2YXIgdGhlbWVkID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gW2ltZ1RoZW1lLCBpbWdTaXplVGhlbWVdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkocHJvcHNUaGVtZWQpKTsKICB9LCBbaW1nVGhlbWUsIGltZ1NpemVUaGVtZSwgcHJvcHNUaGVtZWRdKTsKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChCYXNlLCBPYmplY3QuYXNzaWduKHsKICAgIGVsOiAiaW1nIiwKICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcywKICAgIHRoZW1lZDogdGhlbWVkCiAgfSwgcHJvcHNSZXN0LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA2MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pKTsKfSk7CgppZiAodHlwZW9mIEltZyAhPT0gJ3VuZGVmaW5lZCcgJiYgSW1nICYmIEltZyA9PT0gT2JqZWN0KEltZykgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShJbWcpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEltZywgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIkltZyIsCiAgICAgIGZpbGVuYW1lOiAic3JjL0ltZy9JbWcuanMiCiAgICB9CiAgfSk7Cn0KCkltZy5kZWZhdWx0UHJvcHMgPSB7CiAgdGhlbWVkOiBbXQp9OwpJbWcucHJvcFR5cGVzID0gewogIGFsdDogUHJvcFR5cGVzLnN0cmluZywKICBoZWlnaHQ6IFByb3BUeXBlcy5zdHJpbmcsCiAgbGFyZ2U6IFByb3BUeXBlcy5zaGFwZSh7CiAgICBzcmM6IFByb3BUeXBlcy5zdHJpbmcsCiAgICB3aWR0aDogUHJvcFR5cGVzLnN0cmluZywKICAgIGhlaWdodDogUHJvcFR5cGVzLnN0cmluZwogIH0pLAogIG1lZGl1bTogUHJvcFR5cGVzLnNoYXBlKHsKICAgIHNyYzogUHJvcFR5cGVzLnN0cmluZywKICAgIHdpZHRoOiBQcm9wVHlwZXMuc3RyaW5nLAogICAgaGVpZ2h0OiBQcm9wVHlwZXMuc3RyaW5nCiAgfSksCiAgc2l6ZTogUHJvcFR5cGVzLm9uZU9mKFsneHNtYWxsJyB8ICdzbWFsbCcgfCAnbWVkaXVtJyB8ICdsYXJnZScgfCAneGxhcmdlJyB8ICdzdHJldGNoJ10pLAogIHNtYWxsOiBQcm9wVHlwZXMuc2hhcGUoewogICAgc3JjOiBQcm9wVHlwZXMuc3RyaW5nLAogICAgd2lkdGg6IFByb3BUeXBlcy5zdHJpbmcsCiAgICBoZWlnaHQ6IFByb3BUeXBlcy5zdHJpbmcKICB9KSwKICB4bGFyZ2U6IFByb3BUeXBlcy5zaGFwZSh7CiAgICBzcmM6IFByb3BUeXBlcy5zdHJpbmcsCiAgICB3aWR0aDogUHJvcFR5cGVzLnN0cmluZywKICAgIGhlaWdodDogUHJvcFR5cGVzLnN0cmluZwogIH0pCn07CmV4cG9ydCB2YXIgaW1nID0gc3R5bGVkKEltZyk7CgppZiAodHlwZW9mIGltZyAhPT0gJ3VuZGVmaW5lZCcgJiYgaW1nICYmIGltZyA9PT0gT2JqZWN0KGltZykgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShpbWcpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGltZywgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogImltZyIsCiAgICAgIGZpbGVuYW1lOiAic3JjL0ltZy9JbWcuanMiCiAgICB9CiAgfSk7Cn0KCnZhciBfZGVmYXVsdCA9IEltZzsKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CgppZiAodHlwZW9mIEltZyAhPT0gJ3VuZGVmaW5lZCcgJiYgSW1nICYmIEltZyA9PT0gT2JqZWN0KEltZykgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShJbWcpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEltZywgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIkltZyIsCiAgICAgIGZpbGVuYW1lOiAic3JjL0ltZy9JbWcuanMiCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoSW1nLCAiSW1nIiwgIi9tbnQvU3RvcmFnZS9Qcm9qZWN0cy90aGVtZWQtc3R5bGVkLWNvbXBvbmVudHMvc3JjL0ltZy9JbWcuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihpbWcsICJpbWciLCAiL21udC9TdG9yYWdlL1Byb2plY3RzL3RoZW1lZC1zdHlsZWQtY29tcG9uZW50cy9zcmMvSW1nL0ltZy5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF9kZWZhdWx0LCAiZGVmYXVsdCIsICIvbW50L1N0b3JhZ2UvUHJvamVjdHMvdGhlbWVkLXN0eWxlZC1jb21wb25lbnRzL3NyYy9JbWcvSW1nLmpzIik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Img/Img.js"],"names":["React","useMemo","styled","PropTypes","Base","imgTheme","imgSizeTheme","Img","memo","children","className","propsThemed","themed","propsRest","classNames","defaultProps","propTypes","alt","string","height","large","shape","src","width","medium","size","oneOf","small","xlarge","img"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport { Base } from '../Base'\nimport { imgTheme, imgSizeTheme } from './img.theme'\n\nexport const Img = React.memo(function Img({\n  children,\n  className,\n  themed: propsThemed,\n  ...propsRest\n}) {\n  // componentDidMount() {\n  //   // this.element = helpers.getElement(this.props.kitid);\n  //   // this.updateImg(this.element);\n  //   // window.addEventListener('resize', this.updateImg);\n  // }\n\n  // componentWillUnmount() {\n  //   // window.removeEventListener('resize', this.updateImg);\n  // }\n\n  // updateImg() {\n  //   // const props = this.props;\n  //   // const element = this.element;\n  //   // let screen = helpers.breakpoints().screen;\n  //   // let locked = false;\n  //   // if (!locked) {\n  //   //   const updateElement = (media) => {\n  //   //     if (props.cover) {\n  //   //       element.style.backgroundImage = props[media].src  `url(${props[media].src})` : `url(${props.src})`;\n  //   //     } else {\n  //   //       element.src = props[media].src || props.src;\n  //   //       element.alt = props[media].alt || props.alt;\n  //   //     }\n  //   //     element.style.width = props[media].width || props.width;\n  //   //     element.style.height = props[media].height || props.height;\n  //   //   };\n  //   //   if (props.small || props.medium || props.large || props.xlarge) {\n  //   //     if (screen.small) {\n  //   //       updateElement('small');\n  //   //     } else if (screen.medium) {\n  //   //       updateElement('medium');\n  //   //     } else if (screen.large) {\n  //   //       updateElement('large');\n  //   //     } else if (screen.xlarge) {\n  //   //       updateElement('xlarge');\n  //   //     }\n  //   //   }\n  //   // }\n  // }\n\n  const classNames = `Img ${className || ''}`\n  const themed = useMemo(() => [imgTheme, imgSizeTheme, ...propsThemed], [\n    imgTheme,\n    imgSizeTheme,\n    propsThemed,\n  ])\n\n  return <Base el=\"img\" className={classNames} themed={themed} {...propsRest} />\n})\n\nImg.defaultProps = {\n  themed: [],\n}\n\nImg.propTypes = {\n  alt: PropTypes.string,\n  height: PropTypes.string,\n  large: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string,\n  }),\n  medium: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string,\n  }),\n  size: PropTypes.oneOf([\n    'xsmall' | 'small' | 'medium' | 'large' | 'xlarge' | 'stretch',\n  ]),\n  small: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string,\n  }),\n  xlarge: PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string,\n  }),\n}\n\nexport const img = styled(Img)\nexport default Img\n"]}]}