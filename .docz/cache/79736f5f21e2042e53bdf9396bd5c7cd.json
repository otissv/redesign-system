{"remainingRequest":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js??ref--5-2!/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js!/mnt/Storage/Projects/themed-styled-components/src/Table/TableBody.js","dependencies":[{"path":"/mnt/Storage/Projects/themed-styled-components/src/Table/TableBody.js","mtime":1557778588019},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/cache-loader/dist/cjs.js","mtime":1550658762297},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/thread-loader/dist/cjs.js","mtime":1555245588536},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-loader/lib/index.js","mtime":1550658760833},{"path":"/mnt/Storage/Projects/themed-styled-components/node_modules/source-map-loader/index.js","mtime":1550658762472}],"contextDependencies":[],"result":["import _toConsumableArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/mnt/Storage/Projects/themed-styled-components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/mnt/Storage/Projects/themed-styled-components/src/Table/TableBody.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { Fragment, useMemo } from 'react';\nimport { useCacheState } from '../reusable/cacheState';\nimport { TableCopyButton, TableDeleteButton, TableDownloadButton, TableEditLink } from './TableButton';\nimport Base from '../Base/Base';\nexport var TableBody = React.memo(function TableBody(_ref) {\n  var dispatch = _ref.dispatch,\n      handleAdd = _ref.handleAdd,\n      handleDeleteSelected = _ref.handleDeleteSelected,\n      itemsToArray = _ref.itemsToArray,\n      loading = _ref.loading,\n      onViewChange = _ref.onViewChange,\n      _ref$rows = _ref.rows,\n      rows = _ref$rows === void 0 ? [] : _ref$rows,\n      selected = _ref.selected,\n      tableName = _ref.tableName,\n      propsRest = _objectWithoutProperties(_ref, [\"dispatch\", \"handleAdd\", \"handleDeleteSelected\", \"itemsToArray\", \"loading\", \"onViewChange\", \"rows\", \"selected\", \"tableName\"]);\n\n  var _useCacheState = useCacheState(\"\".concat(tableName, \"ExpandRows\"), []),\n      _useCacheState2 = _slicedToArray(_useCacheState, 2),\n      expandRows = _useCacheState2[0],\n      setExpandRows = _useCacheState2[1];\n\n  function handleChange(e) {\n    e.preventDefault();\n    dispatch({\n      type: 'TOGGLE_SELECTED_ITEMS',\n      selected: [e.currentTarget.name]\n    });\n  }\n\n  function handleDelete(e) {\n    e.preventDefault(); // onDelete && onDelete(e)\n  }\n\n  function handleExpandRows(e) {\n    e.preventDefault();\n    var id = e.currentTarget.dataset.uid;\n\n    if (expandRows.find(function (r) {\n      return r === id;\n    })) {\n      var newExpandedRows = function newExpandedRows(r) {\n        return r !== id;\n      };\n\n      setExpandRows(expandRows.filter(newExpandedRows));\n    } else {\n      setExpandRows([].concat(_toConsumableArray(expandRows), [id]));\n    }\n  }\n\n  function handleView(e) {\n    e.preventDefault();\n    var id = e.currentTarget.dataset.uid;\n    onViewChange && onViewChange(id);\n  }\n\n  var body = useMemo(function () {\n    return rows.map(function (_ref2, i) {\n      var row = _ref2.row,\n          rowDetail = _ref2.rowDetail;\n      var RowDetail = rowDetail;\n      return React.createElement(Fragment, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, row.map(function (item) {\n        return React.createElement(Fragment, {\n          key: item.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, item.component({\n          handleAdd: handleAdd,\n          handleChange: handleChange,\n          handleDelete: handleDelete,\n          handleDeleteSelected: handleDeleteSelected,\n          handleExpandRows: handleExpandRows,\n          expandRows: expandRows,\n          handleView: handleView,\n          loading: loading,\n          selected: selected,\n          dispatch: dispatch,\n          itemsToArray: itemsToArray,\n          Copy: function Copy(props) {\n            return React.createElement(TableCopyButton, Object.assign({}, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }));\n          },\n          Edit: function Edit(props) {\n            return React.createElement(TableEditLink, Object.assign({}, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }));\n          },\n          Delete: function Delete(props) {\n            return React.createElement(TableDeleteButton, Object.assign({\n              onClick: handleDelete\n            }, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }));\n          },\n          Download: function Download(props) {\n            return React.createElement(TableDownloadButton, Object.assign({}, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89\n              },\n              __self: this\n            }));\n          }\n        }));\n      })), rowDetail && React.createElement(RowDetail, {\n        expandRows: expandRows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    });\n  }, [expandRows, handleAdd, handleChange, handleDelete, handleDeleteSelected, handleExpandRows, handleView, rows]);\n  return React.createElement(\"tbody\", Object.assign({\n    className: \"TableBody\"\n  }, propsRest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), body);\n});\n\nif (typeof TableBody !== 'undefined' && TableBody && TableBody === Object(TableBody) && Object.isExtensible(TableBody)) {\n  Object.defineProperty(TableBody, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"TableBody\",\n      filename: \"src/Table/TableBody.js\"\n    }\n  });\n}\n\nvar _default = TableBody;\nexport default _default;\n\nif (typeof TableBody !== 'undefined' && TableBody && TableBody === Object(TableBody) && Object.isExtensible(TableBody)) {\n  Object.defineProperty(TableBody, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"TableBody\",\n      filename: \"src/Table/TableBody.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TableBody, \"TableBody\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/TableBody.js\");\n  reactHotLoader.register(_default, \"default\", \"/mnt/Storage/Projects/themed-styled-components/src/Table/TableBody.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/mnt/Storage/Projects/themed-styled-components/src/Table/TableBody.js"],"names":["React","Fragment","useMemo","useCacheState","TableCopyButton","TableDeleteButton","TableDownloadButton","TableEditLink","Base","TableBody","memo","dispatch","handleAdd","handleDeleteSelected","itemsToArray","loading","onViewChange","rows","selected","tableName","propsRest","expandRows","setExpandRows","handleChange","e","preventDefault","type","currentTarget","name","handleDelete","handleExpandRows","id","dataset","uid","find","r","newExpandedRows","filter","handleView","body","map","i","row","rowDetail","RowDetail","item","key","component","Copy","props","Edit","Delete","Download"],"mappings":"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","sourcesContent":["import React, { Fragment, useMemo } from 'react'\n\nimport { useCacheState } from '../reusable/cacheState'\nimport {\n  TableCopyButton,\n  TableDeleteButton,\n  TableDownloadButton,\n  TableEditLink,\n} from './TableButton'\nimport Base from '../Base/Base'\n\nexport const TableBody = React.memo(function TableBody({\n  dispatch,\n  handleAdd,\n  handleDeleteSelected,\n  itemsToArray,\n  loading,\n  onViewChange,\n  rows = [],\n  selected,\n  tableName,\n  ...propsRest\n}) {\n  const [expandRows, setExpandRows] = useCacheState(\n    `${tableName}ExpandRows`,\n    []\n  )\n\n  function handleChange(e) {\n    e.preventDefault()\n    dispatch({\n      type: 'TOGGLE_SELECTED_ITEMS',\n      selected: [e.currentTarget.name],\n    })\n  }\n\n  function handleDelete(e) {\n    e.preventDefault()\n    // onDelete && onDelete(e)\n  }\n\n  function handleExpandRows(e) {\n    e.preventDefault()\n\n    const id = e.currentTarget.dataset.uid\n\n    if (expandRows.find(r => r === id)) {\n      const newExpandedRows = r => r !== id\n      setExpandRows(expandRows.filter(newExpandedRows))\n    } else {\n      setExpandRows([...expandRows, id])\n    }\n  }\n\n  function handleView(e) {\n    e.preventDefault()\n    const id = e.currentTarget.dataset.uid\n    onViewChange && onViewChange(id)\n  }\n\n  const body = useMemo(\n    () =>\n      rows.map(({ row, rowDetail }, i) => {\n        const RowDetail = rowDetail\n        return (\n          <Fragment key={i}>\n            <tr>\n              {row.map(item => {\n                return (\n                  <Fragment key={item.key}>\n                    {item.component({\n                      handleAdd,\n                      handleChange,\n                      handleDelete,\n                      handleDeleteSelected,\n                      handleExpandRows,\n                      expandRows,\n                      handleView,\n                      loading,\n                      selected,\n                      dispatch,\n                      itemsToArray,\n                      Copy: props => <TableCopyButton {...props} />,\n                      Edit: props => <TableEditLink {...props} />,\n\n                      Delete: props => (\n                        <TableDeleteButton onClick={handleDelete} {...props} />\n                      ),\n                      Download: props => <TableDownloadButton {...props} />,\n                    })}\n                  </Fragment>\n                )\n              })}\n            </tr>\n            {rowDetail && <RowDetail expandRows={expandRows} />}\n          </Fragment>\n        )\n      }),\n    [\n      expandRows,\n      handleAdd,\n      handleChange,\n      handleDelete,\n      handleDeleteSelected,\n      handleExpandRows,\n      handleView,\n      rows,\n    ]\n  )\n\n  return (\n    <tbody className=\"TableBody\" {...propsRest}>\n      {body}\n    </tbody>\n  )\n})\n\nexport default TableBody\n"]}]}