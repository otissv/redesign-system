{"version":3,"sources":["/mnt/Storage/Projects/redesign/src/ButtonGroup/buttonGroup.theme.ts","/mnt/Storage/Projects/redesign/src/ButtonGroup/ButtonGroup.tsx","/mnt/Storage/Projects/redesign/src/ButtonIcon/index.ts","/mnt/Storage/Projects/redesign/src/Flex/flex.theme.ts","/mnt/Storage/Projects/redesign/src/Flex/Flex.tsx","/mnt/Storage/Projects/redesign/src/MaterialIcons/Code.tsx","/mnt/Storage/Projects/redesign/src/MaterialIcons/PlayCircle.tsx","/mnt/Storage/Projects/redesign/src/MaterialIcons/ViewList.tsx","/mnt/Storage/Projects/redesign/src/Table/JsonView.tsx","/mnt/Storage/Projects/redesign/src/reusable/cacheState/useCacheState.ts","/mnt/Storage/Projects/redesign/src/Table/TableButton.tsx","/mnt/Storage/Projects/redesign/src/Table/TableBody.tsx","/mnt/Storage/Projects/redesign/src/Table/TableView.tsx","/mnt/Storage/Projects/redesign/src/Table/ToolbarAddButton.tsx","/mnt/Storage/Projects/redesign/src/Table/ToolbarCopyButton.tsx","/mnt/Storage/Projects/redesign/src/Table/ToolbarDeleteButton.tsx","/mnt/Storage/Projects/redesign/src/Table/ToolbarDownloadButton.tsx","/mnt/Storage/Projects/redesign/src/Table/ToolbarEditButton.tsx","/mnt/Storage/Projects/redesign/src/Table/ToolbarExecuteButton.tsx","/mnt/Storage/Projects/redesign/src/Table/table.theme.ts","/mnt/Storage/Projects/redesign/src/Table/ToolbarViewsButton.tsx","/mnt/Storage/Projects/redesign/src/Table/TableCaption.tsx","/mnt/Storage/Projects/redesign/src/Table/Table.tsx","/mnt/Storage/Projects/redesign/src/Table/table.example.tsx","/mnt/Storage/Projects/redesign/src/Table/TableRowSelect.tsx","/mnt/Storage/Projects/redesign/src/Table/AllSelectedHeading.tsx","/mnt/Storage/Projects/redesign/src/Table/table.mdx","/mnt/Storage/Projects/redesign/src/reusable/collectionHash/collectionHash.hooks.ts","/mnt/Storage/Projects/redesign/src/reusable/collectionHash/collectionHashConstants.ts","/mnt/Storage/Projects/redesign/src/reusable/collectionHash/collectionHashReducer.ts","/mnt/Storage/Projects/redesign/src/reusable/collectionHash/index.ts"],"names":["buttonGroupTheme","_ref","stacked","display","position","transition","theme","animation","easeMedium","verticalAlign","flexDirection","buttonStretchGroupTheme","_ref2","stretch","width","ButtonGroupContext","React","createContext","useButtonGroup","useContext","ButtonGroup","memo","children","_ref$className","className","_ref$themed","onClick","themed","propsThemed","propsRest","Object","objectWithoutProperties","classNames","useMemo","concat","toConsumableArray","appearance","context","size","value","react_default","a","createElement","Provider","Base","assign","role","_ButtonIcon__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","flexTheme","alignItems","basis","grow","justifyContent","shrink","wrap","kebabCase","flexWrap","flexDirectionTheme","direction","Flex","_themed","Code","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Icon__WEBPACK_IMPORTED_MODULE_1__","props","PlayCircle","ViewList","JsonView","items","JSON","stringify","useCacheState","key","initialState","storage","_useState","useState","_useState2","slicedToArray","state","setState","windowStorage","window","sessionStorage","localStorage","setItem","newState","data","removeItem","undefined","useEffect","cached","getItem","parse","TableButton","Component","icon","uid","ButtonIcon","data-uid","TableCopyButton","Copy","TableButton_TableButton","name","title","TableDeleteButton","_ref3","Delete","TableDownloadButton","_ref4","Download","TableEditLink","_ref5","Edit","as","TableBody","allSelected","_ref$baseRoute","baseRoute","dispatch","handleAdd","handleDeleteSelected","itemsToArray","loading","onRowClick","_ref$rows","rows","selected","tableName","_useCacheState","expandRows","setExpandRows","handleChange","useCallback","e","preventDefault","type","currentTarget","handleDelete","handleExpandRows","id","dataset","isStringEqual","r","find","filter","handleRowClick","body","map","i","column","rowDetail","RowDetail","react","item","component","TableButton_TableEditLink","href","TableButton_TableDeleteButton","TableButton_TableDownloadButton","TableView","headings","tableHeadings","heading","Table_TableBody","ToolbarAddButton","handleClick","Plus","ButtonIcon_ButtonIcon","alt","css","ToolbarCopyButton","text","lib","copy","ToolbarDeleteButton","ToolbarDownloadButton","fileName","fileDownload","ToolbarEditButton","ToolbarExecuteButton","tableContainerTheme","height","overflow","tableTheme","condensed","hover","_ref2$theme","border","color","elevate","unit","borderCollapse","td, th","lineHeight","padding","&:first-child","paddingLeft","&:last-child","paddingRight","td","borderTop","thin","tr:hover","background","boxShadow","marginRight","thinTransparent","a:hover, a:active","link","tableCaptionTheme","objectDestructuringEmpty","visibility","tableViewsButtonTheme","marginLeft","ToolbarViewsButton","currentView","selectedStyle","view","ComponentListAlt","ComponentCode","src_Base","styled","Json","defaultProps","TableCaption","SelectedText","span","_templateObject","Table","caption","hook","initialValue","onAdd","numbered","onCopy","onDelete","onDeleteSelected","onDownload","onEdit","onExecute","_ref$toolbar","toolbar","_hook","dispatchHook","itemsMemo","itemListMemo","itemList","reducer","action","objectSpread","variables","_useReducer","useReducer","_useReducer2","setCurrentView","confirm","join","handleEdit","handleExecute","then","result","handleSwitchView","_React$useState","_React$useState2","setAllSelected","handleSelectHeadingChange","checked","keys","makeHeadings","headingsMemo","rowsMemo","length","Table_TableToolbar","borderBottom","onSwitchView","paddingBottom","selectToolbar","SelectToolbar","TableCaption_TableCaption","TableView_TableView","JsonView_JsonView","ToolbarDeleteButton_ToolbarDeleteButton","TableToolbar","buttons","button","ToolbarAddButton_ToolbarAddButton","ToolbarCopyButton_ToolbarCopyButton","ToolbarEditButton_ToolbarEditButton","ToolbarDownloadButton_ToolbarDownloadButton","ToolbarExecuteButton_ToolbarExecuteButton","ToolbarViewsButton_ToolbarViewsButton","toolbarContent","Toolbar","Array","useTable","_","endpoint","_useCollectionHashRed","useCollectionHashReducer","_useCollectionHashRed2","collection","TableRowSelect","_ref$checked","isChecked","setChecked","style","onChange","cursor","AllSelectedHeading","layoutProps","MDXLayout","MDXContent","components","index_es","mdxType","index_esm","of","__position","__code","__scope","this","Playground","Props","ThemeProvider","Table_Table","index","textAlign","selectable","_ref6","TableRowSelect_TableRowSelect","_ref7","_ref8","_ref9","AllSelectedHeading_AllSelectedHeading","_ref10","_ref11","isMDXComponent","useGetItems","_mnt_Storage_Projects_redesign_node_modules_docz_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","useGetActiveItem","_useState3","_useState4","_hook2","active","useResetActive","_hook3","useSetActive","_hook4","COLLECTION_HASH_INITIAL_STATE","buildInitialValue","_mnt_Storage_Projects_redesign_node_modules_docz_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","createInitialState","list","push","extendReducer","arguments","itemsToRemove","includes","transformCollectionToObject","isArray","reduce","acc","_mnt_Storage_Projects_redesign_node_modules_docz_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","remove","transformedData","notString","notDefined","trim","_mnt_Storage_Projects_redesign_node_modules_docz_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","select","indexOf","_select","slice","err","updatedItems","update","replaceSelectedItem","setSelectedItem","crudReducer","_collectionHashReducer__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/src-table-table.4050c7c8.js","sourcesContent":["import { ButtonGroupInterface } from './buttonGroup.types';\n\nexport function buttonGroupTheme({\n  stacked,\n  theme: { animation },\n}: ButtonGroupInterface) {\n  return {\n    display: 'inline-flex',\n    position: 'relative',\n    transition: animation.easeMedium(),\n    verticalAlign: 'middle',\n    flexDirection: stacked ? 'column' : 'row',\n  };\n}\n\nexport function buttonStretchGroupTheme({ stretch }: ButtonGroupInterface) {\n  return stretch ? { width: '100%' } : {};\n}\n","import React, { useContext, useMemo } from 'react'\n\nimport Base from '../Base/Base'\nimport { buttonGroupTheme, buttonStretchGroupTheme } from './buttonGroup.theme'\nimport { ButtonGroupInterface } from './buttonGroup.types'\n\nexport const ButtonGroupContext = React.createContext({})\n\nexport function useButtonGroup() {\n  return useContext(ButtonGroupContext)\n}\n\nexport const ButtonGroup = React.memo(function ButtonGroup({\n  children,\n  className = '',\n  onClick,\n  themed: propsThemed = [],\n  ...propsRest\n}: ButtonGroupInterface) {\n  const classNames = useMemo(() => `ButtonGroup ${className}`, [className])\n  const themed = useMemo(\n    () => [buttonGroupTheme, buttonStretchGroupTheme, ...propsThemed],\n    [buttonGroupTheme, buttonStretchGroupTheme, propsThemed]\n  )\n\n  const { appearance, context, size, stretch } = propsRest\n  const value = useMemo(() => ({ appearance, context, size, stretch }), [\n    appearance,\n    context,\n    size,\n    stretch,\n  ])\n\n  return (\n    <ButtonGroupContext.Provider value={value}>\n      <Base role=\"group\" className={classNames} themed={themed} {...propsRest}>\n        {children}\n      </Base>\n    </ButtonGroupContext.Provider>\n  )\n})\n\nexport default ButtonGroup\n","export * from './ButtonIcon';\nexport * from './buttonIcon.types';\n","import { FlexInterface } from './flex.types';\n\nimport kebabCase from 'lodash/kebabCase';\n\nexport function flexTheme({\n  alignItems,\n  basis,\n  display,\n  grow,\n  justifyContent,\n  shrink,\n  wrap,\n}: FlexInterface) {\n  return {\n    display: display || 'flex',\n    basis: basis ? `${basis}` : '',\n    grow: grow ? `${grow}` : '',\n    shrink: shrink ? `${shrink}` : '',\n    justifyContent: (justifyContent && [kebabCase(justifyContent)]) || '',\n    alignItems: (alignItems && [kebabCase(alignItems)]) || '',\n    flexWrap: (wrap && [kebabCase(wrap)]) || '',\n  };\n}\n\nexport function flexDirectionTheme({ direction }: FlexInterface) {\n  switch (direction) {\n    case 'row':\n      return { flexDirection: 'row' };\n    case 'column':\n      return { flexDirection: 'column' };\n    case 'rowReverse':\n      return { flexDirection: 'rowReverse' };\n    case 'columnReverse':\n      return { flexDirection: 'columnReverse' };\n    default:\n      return {};\n  }\n}\n","import React, { useMemo } from 'react'\n\nimport { flexTheme, flexDirectionTheme } from './flex.theme'\nimport { Base } from '../Base'\nimport { FlexInterface } from './flex.types'\n\nexport const Flex = React.memo(function Flex({\n  children,\n  className = '',\n  themed = [],\n  ...propsRest\n}: FlexInterface) {\n  const classNames = useMemo(() => `Flex ${className}`, [className])\n  const _themed = useMemo(() => [flexTheme, flexDirectionTheme, ...themed], [\n    flexTheme,\n    flexDirectionTheme,\n    themed,\n  ])\n\n  return (\n    <Base className={classNames} themed={_themed} {...propsRest}>\n      {children}\n    </Base>\n  )\n})\n\nexport default Flex\n","import React from 'react';\nimport { Icon, IconInterface } from '../Icon';\n\nexport function Code(props: IconInterface) {\n  return (\n    <Icon {...props}>\n      <path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/>\n    </Icon>\n  );\n}\n\nexport default Code\n    ","import React from 'react';\nimport { Icon, IconInterface } from '../Icon';\n\nexport function PlayCircle(props: IconInterface) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z\"/>\n    </Icon>\n  );\n}\n\nexport default PlayCircle\n    ","import React from 'react';\nimport { Icon, IconInterface } from '../Icon';\n\nexport function ViewList(props: IconInterface) {\n  return (\n    <Icon {...props}>\n      <path d=\"M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z\"/>\n    </Icon>\n  );\n}\n\nexport default ViewList\n    ","import React from 'react'\n\nexport const JsonView = React.memo(function JsonView({ items }: any) {\n  return (\n    <pre>\n      <code className=\"language-javascript\">\n        {JSON.stringify(items, null, 2)}\n      </code>\n    </pre>\n  )\n})\n\nexport default JsonView\n","import { useState, useEffect, useMemo } from 'react';\n\nexport function useCacheState<T>(\n  key: string,\n  initialState?: T,\n  storage?: string\n) {\n  const [state, setState] = useState(initialState);\n\n  const windowStorage =\n    storage === 'sessionStorage' ? window.sessionStorage : window.localStorage;\n\n  useEffect(() => {\n    const cached = windowStorage.getItem(key);\n    const data = !cached ? cached : JSON.parse(cached);\n\n    setItem(data || initialState);\n  }, []);\n\n  function setItem(newState: T) {\n    if (newState === state) return;\n    const data = JSON.stringify(newState);\n\n    setState(newState);\n    return windowStorage.setItem(key, data);\n  }\n\n  function removeItem() {\n    setState(undefined);\n    windowStorage.removeItem(key);\n  }\n\n  return useMemo(() => ({ state, setItem, removeItem }), [\n    [state, setItem, removeItem],\n  ]);\n}\n","import React, { useMemo } from 'react'\n\nimport { Copy } from '../MaterialIcons/Copy'\nimport { Delete } from '../MaterialIcons/Delete'\nimport { Edit } from '../MaterialIcons/Edit'\nimport { Download } from '../MaterialIcons/Download'\nimport { TableButtonInterface, TableLinkInterface } from './table.types'\nimport { ButtonIcon } from '../ButtonIcon'\n// const ButtonIcon = styled.a`\n//   background: #0000;\n//   border: none;\n//   color: #fff;\n//   cursor: pointer;\n//   outline: none;\n//   padding: 0;\n//   transform: translateY(4px);\n//   white-space: nowrap;\n// `;\n\nexport const TableButton = React.memo(function TableButton({\n  icon: Component,\n  uid,\n  ...propsRest\n}: TableButtonInterface) {\n  const icon = useMemo(() => Component, [Component])\n  return <ButtonIcon data-uid={uid} icon={icon} {...propsRest} />\n})\n\nexport function TableCopyButton({\n  onClick,\n  uid,\n  ...propsRest\n}: TableButtonInterface) {\n  const icon = useMemo(() => Copy, [Copy])\n\n  return (\n    <TableButton\n      name=\"copy\"\n      onClick={onClick}\n      icon={icon}\n      title=\"Copy\"\n      {...propsRest}\n    />\n  )\n}\n\nexport const TableDeleteButton = function TableDeleteButton({\n  onClick,\n  uid,\n  ...propsRest\n}: TableButtonInterface) {\n  const icon = useMemo(() => Delete, [Delete])\n\n  return (\n    <TableButton\n      name=\"delete\"\n      onClick={onClick}\n      icon={icon}\n      title=\"Delete\"\n      {...propsRest}\n    />\n  )\n}\n\nexport const TableDownloadButton = function TableDownloadButton({\n  onClick,\n  uid,\n  ...propsRest\n}: TableButtonInterface) {\n  const icon = useMemo(() => Download, [Download])\n\n  return (\n    <TableButton\n      name=\"Download\"\n      onClick={onClick}\n      icon={icon}\n      title=\"Download\"\n      {...propsRest}\n    />\n  )\n}\n\nexport const TableEditLink = function TableEditLink({\n  children,\n  uid,\n  ...propsRest\n}: TableLinkInterface) {\n  const icon = useMemo(() => Edit, [Edit])\n\n  return (\n    <TableButton\n      as=\"a\"\n      name=\"Edit\"\n      icon={icon}\n      title=\"Edit\"\n      data-uid={uid}\n      {...propsRest}\n    >\n      {children}\n    </TableButton>\n  )\n}\n\nexport default TableButton\n","import React, { Fragment, useCallback, useMemo } from 'react'\n\nimport { useCacheState } from '../reusable/cacheState'\nimport {\n  TableCopyButton,\n  TableDeleteButton,\n  TableDownloadButton,\n  TableEditLink,\n} from './TableButton'\nimport {\n  TableBodyInterface,\n  TableToolbarButtonInterface,\n  TableToolbarCopyButtonInterface,\n  TableToolbarDownloadButtonInterface,\n  TableRowInterface,\n  TableRowDetailType,\n} from './table.types'\n\ninterface RowInterface {\n  column: TableRowInterface[]\n  rowDetail?: TableRowDetailType\n}\n\nexport const TableBody = React.memo(function TableBody({\n  allSelected,\n  baseRoute = '',\n  dispatch,\n  handleAdd,\n  handleDeleteSelected,\n  itemsToArray,\n  loading,\n  onRowClick,\n  rows = [],\n  selected,\n  tableName,\n  ...propsRest\n}: TableBodyInterface) {\n  const { state: expandRows, setItem: setExpandRows } = useCacheState<string[]>(\n    `${tableName}ExpandRows`,\n    []\n  )\n\n  const handleChange = useCallback(\n    function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n      e.preventDefault()\n      dispatch({\n        type: 'TOGGLE_SELECTED_ITEMS',\n        selected: [e.currentTarget.name],\n      })\n    },\n    [dispatch]\n  )\n\n  const handleDelete = useCallback(function handleDelete(\n    e: React.MouseEvent<HTMLElement>\n  ) {\n    e.preventDefault()\n    // onDelete && onDelete(e)\n  },\n  [])\n\n  const handleExpandRows = useCallback(\n    function handleExpandRows(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n\n      const id = e.currentTarget.dataset.uid\n      const isStringEqual = (r: string) => r === id\n\n      if (expandRows.find(isStringEqual)) {\n        setExpandRows(expandRows.filter(r => !isStringEqual(r)))\n      } else {\n        setExpandRows([...expandRows, id])\n      }\n    },\n    [setExpandRows]\n  )\n\n  const handleRowClick = useCallback(\n    function handleRowClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      const id = e.currentTarget.dataset.uid\n      onRowClick && onRowClick(e, id)\n    },\n    [onRowClick]\n  )\n\n  const body = useMemo(\n    () =>\n      rows.map(({ column, rowDetail }: RowInterface, i: number) => {\n        const RowDetail = rowDetail\n        return (\n          <Fragment key={i}>\n            <tr>\n              {column.map((item: TableRowInterface) => {\n                return (\n                  <Fragment key={item.key}>\n                    {item.component({\n                      dispatch,\n                      expandRows,\n                      handleAdd,\n                      handleChange,\n                      handleDelete,\n                      handleDeleteSelected,\n                      handleExpandRows,\n                      handleRowClick,\n                      itemsToArray,\n                      loading,\n                      selected,\n                      allSelected,\n                      Copy: (props: TableToolbarCopyButtonInterface) => (\n                        <TableCopyButton {...props} />\n                      ),\n                      Edit: (props: TableToolbarButtonInterface) => (\n                        <TableEditLink {...props} href={`${baseRoute}/edit`} />\n                      ),\n\n                      Delete: (props: TableToolbarButtonInterface) => (\n                        <TableDeleteButton onClick={handleDelete} {...props} />\n                      ),\n                      Download: (\n                        props: TableToolbarDownloadButtonInterface\n                      ) => <TableDownloadButton {...props} />,\n                    })}\n                  </Fragment>\n                )\n              })}\n            </tr>\n            {rowDetail && <RowDetail expandRows={expandRows} />}\n          </Fragment>\n        )\n      }),\n    [\n      expandRows,\n      handleAdd,\n      handleChange,\n      handleDelete,\n      handleDeleteSelected,\n      handleExpandRows,\n      rows,\n    ]\n  )\n\n  return (\n    <tbody className=\"TableBody\" {...propsRest}>\n      {body}\n    </tbody>\n  )\n})\n\nexport default TableBody\n","import React, { Fragment, useMemo } from 'react'\n\nimport { TableViewInterface } from './table.types'\nimport TableBody from './TableBody'\n\nexport const TableView = React.memo(function TableView({\n  allSelected,\n  baseRoute = '',\n  dispatch,\n  handleAdd,\n  handleDeleteSelected,\n  headings,\n  itemsToArray,\n  loading,\n  rows,\n  selected,\n  tableName,\n  ...propsRest\n}: TableViewInterface) {\n  const tableHeadings = useMemo(\n    () =>\n      headings && (\n        <thead>\n          <tr>\n            {headings.map((heading, i) =>\n              typeof heading === 'function' ? (\n                <th key={i}>{heading()}</th>\n              ) : (\n                <th key={i}>{heading}</th>\n              )\n            )}\n          </tr>\n        </thead>\n      ),\n    [headings]\n  )\n\n  return (\n    <Fragment>\n      {tableHeadings}\n\n      <TableBody\n        allSelected={allSelected}\n        baseRoute={baseRoute}\n        className=\"TableView\"\n        dispatch={dispatch}\n        handleAdd={handleAdd}\n        handleDeleteSelected={handleDeleteSelected}\n        rows={rows}\n        tableName={tableName}\n        loading={loading}\n        selected={selected}\n        itemsToArray={itemsToArray}\n        {...propsRest}\n      />\n    </Fragment>\n  )\n})\n\nexport default TableView\n","import React, { useCallback, useMemo } from 'react'\n\nimport { Plus } from '../MaterialIcons/Plus'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\nimport { TableToolbarButtonInterface } from './table.types'\n\nexport const ToolbarAddButton = function ToolbarAddButton({\n  onClick,\n  ...propsRest\n}: TableToolbarButtonInterface) {\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onClick && onClick(e)\n    },\n    [onClick]\n  )\n\n  const icon = useMemo(() => Plus, [Plus])\n\n  return (\n    <ButtonIcon\n      as=\"a\"\n      alt=\"add\"\n      appearance=\"active\"\n      uid=\"add\"\n      onClick={handleClick}\n      icon={icon}\n      css={`\n        svg.Icon {\n          padding-right: 5px;\n        }\n      `}\n      {...propsRest}\n    >\n      Add\n    </ButtonIcon>\n  )\n}\n\nexport default ToolbarAddButton\n","import React, { useCallback, useMemo } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { TableToolbarCopyButtonInterface } from './table.types'\n\nimport { Copy } from '../MaterialIcons/Copy'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\n\nexport const ToolbarCopyButton = function ToolbarCopyButton({\n  data,\n  onClick,\n  ...propsRest\n}: TableToolbarCopyButtonInterface) {\n  const text = useMemo(\n    () => (typeof data === 'string' ? data : JSON.stringify(data, null, 2)),\n    [data]\n  )\n\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onClick && onClick(e)\n      //TODO: add copied notification\n    },\n    [onClick]\n  )\n\n  const icon = useMemo(() => Copy, [Copy])\n\n  return (\n    <CopyToClipboard text={text} copy={handleClick}>\n      <ButtonIcon\n        alt=\"copy\"\n        appearance=\"active\"\n        uid=\"copy\"\n        icon={icon}\n        css={`\n          svg.Icon {\n            padding-right: 5px;\n          }\n        `}\n        {...propsRest}\n      >\n        Copy\n      </ButtonIcon>\n    </CopyToClipboard>\n  )\n}\n\nexport default ToolbarCopyButton\n","import React, { useCallback, useMemo } from 'react'\n\nimport { Delete } from '../MaterialIcons/Delete'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\nimport { TableToolbarButtonInterface } from './table.types'\n\nexport const ToolbarDeleteButton = function ToolbarDeleteButton({\n  onClick,\n  ...propsRest\n}: TableToolbarButtonInterface) {\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onClick && onClick(e)\n    },\n    [onClick]\n  )\n\n  const icon = useMemo(() => Delete, [Delete])\n\n  return (\n    <ButtonIcon\n      alt=\"delete\"\n      appearance=\"active\"\n      uid=\"delete\"\n      onClick={handleClick}\n      icon={icon}\n      css={`\n        svg.Icon {\n          padding-right: 5px;\n        }\n      `}\n      {...propsRest}\n    >\n      Delete\n    </ButtonIcon>\n  )\n}\n\nexport default ToolbarDeleteButton\n","import React, { useCallback, useMemo } from 'react'\nimport fileDownload from 'js-file-download'\nimport { TableToolbarDownloadButtonInterface } from './table.types'\nimport { Download } from '../MaterialIcons/Download'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\n\nexport const ToolbarDownloadButton = function ToolbarDownloadButton({\n  onClick,\n  data,\n  fileName,\n  ...propsRest\n}: TableToolbarDownloadButtonInterface) {\n  const text = useMemo(\n    () => (typeof data === 'string' ? data : JSON.stringify(data, null, 2)),\n    [data]\n  )\n\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      text && fileDownload(text, fileName)\n      onClick && onClick(e)\n    },\n    [onClick]\n  )\n\n  const icon = useMemo(() => Download, [Download])\n\n  return (\n    <ButtonIcon\n      alt=\"download\"\n      appearance=\"active\"\n      uid=\"delete\"\n      onClick={handleClick}\n      icon={icon}\n      css={`\n        svg.Icon {\n          padding-right: 5px;\n        }\n      `}\n      {...propsRest}\n    >\n      Download\n    </ButtonIcon>\n  )\n}\n\nexport default ToolbarDownloadButton\n","import React, { useCallback, useMemo } from 'react'\n\nimport { Edit } from '../MaterialIcons/Edit'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\nimport { TableToolbarButtonInterface } from './table.types'\n\nexport const ToolbarEditButton = function ToolbarEditButton({\n  onClick,\n  ...propsRest\n}: TableToolbarButtonInterface) {\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onClick && onClick(e)\n    },\n    [onClick]\n  )\n\n  const icon = useMemo(() => Edit, [Edit])\n\n  return (\n    <ButtonIcon\n      as=\"a\"\n      alt=\"edit\"\n      appearance=\"active\"\n      uid=\"edit\"\n      onClick={handleClick}\n      icon={icon}\n      css={`\n        svg.Icon {\n          padding-right: 5px;\n        }\n      `}\n      {...propsRest}\n    >\n      Edit\n    </ButtonIcon>\n  )\n}\n\nexport default ToolbarEditButton\n","import React, { useCallback, useMemo } from 'react'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\nimport { TableToolbarButtonInterface } from './table.types'\nimport { PlayCircle } from '../MaterialIcons/PlayCircle'\n\nexport const ToolbarExecuteButton = function ToolbarExecuteButton({\n  onClick,\n  ...propsRest\n}: TableToolbarButtonInterface) {\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onClick && onClick(e)\n    },\n    [onClick]\n  )\n\n  const icon = useMemo(() => PlayCircle, [PlayCircle])\n\n  return (\n    <ButtonIcon\n      alt=\"execute\"\n      appearance=\"active\"\n      uid=\"execute\"\n      onClick={handleClick}\n      icon={icon}\n      css={`\n        svg.Icon {\n          padding-right: 5px;\n        }\n      `}\n      {...propsRest}\n    >\n      Run\n    </ButtonIcon>\n  )\n}\n\nexport default ToolbarExecuteButton\n","import { TableInterface } from './table.types'\n\nexport function tableContainerTheme({ height }) {\n  return {\n    height: height || '100%',\n    overflow: 'auto',\n  }\n}\n\nexport function tableTheme({\n  condensed,\n  hover,\n  theme: { animation, border, color, elevate, unit },\n}: TableInterface) {\n  return {\n    borderCollapse: 'collapse',\n    transition: animation.easeMedium(),\n\n    'td, th': {\n      lineHeight: condensed ? 2 : 2.5,\n      padding: 0,\n\n      '&:first-child': {\n        paddingLeft: unit[4],\n      },\n      '&:last-child': {\n        paddingRight: unit[4],\n      },\n    },\n\n    td: {\n      borderTop: border.thin,\n    },\n\n    'tr:hover': {\n      background: hover ? color['grey-800'] : '',\n      boxShadow: hover ? elevate[2] : '',\n    },\n\n    a: {\n      background: 'none',\n      display: 'block',\n      height: '100%',\n      marginRight: '3px',\n      border: border.thinTransparent,\n    },\n\n    'a:hover, a:active': {\n      background: 'none',\n      border: border.thinTransparent,\n      color: color.link,\n    },\n  }\n}\n\nexport function tableCaptionTheme({ theme: {} }: TableInterface) {\n  return {\n    height: 0,\n    visibility: 'hidden',\n  }\n}\n\nexport function tableViewsButtonTheme({ theme: {} }: TableInterface) {\n  return {\n    display: 'flex',\n    marginLeft: 'auto',\n  }\n}\n","import React, { useCallback, useMemo } from 'react'\n\nimport ButtonGroup from '../ButtonGroup/ButtonGroup'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\nimport { Base } from '../Base'\nimport { Code } from '../MaterialIcons/Code'\nimport { TableToolbarViewsButtonInterface } from './table.types'\nimport { ViewList } from '../MaterialIcons/ViewList'\nimport { tableViewsButtonTheme } from './table.theme'\n\nexport const ToolbarViewsButton = function ToolbarViewsButton({\n  className,\n  currentView,\n  onClick,\n  themed,\n  ...propsRest\n}: TableToolbarViewsButtonInterface) {\n  const classNames = useMemo(() => `ToolbarViewsButton ${className}`, [\n    className,\n  ])\n  const _themed = useMemo(() => [tableViewsButtonTheme, ...themed], [\n    tableViewsButtonTheme,\n    themed,\n  ])\n\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n\n      const id = e.currentTarget.dataset.uid\n      onClick && onClick(e, { id })\n    },\n    [onClick]\n  )\n\n  const selectedStyle = useCallback(\n    view => (currentView === view ? 'border-bottom: 1px solid #fff;' : ''),\n    [currentView]\n  )\n\n  const ComponentListAlt = useMemo(() => ViewList, [ViewList])\n  const ComponentCode = useMemo(() => Code, [Code])\n\n  return (\n    <Base className={classNames} themed={_themed} {...propsRest}>\n      <ButtonGroup>\n        <ButtonIcon\n          alt=\"Tabular\"\n          appearance=\"active\"\n          icon={ComponentListAlt}\n          onClick={handleClick}\n          styled={selectedStyle('table')}\n          title=\"Table\"\n          uid=\"table\"\n          css={`\n            svg.Icon {\n              padding-right: 5px;\n            }\n          `}\n        >\n          Tabular\n        </ButtonIcon>\n        <ButtonIcon\n          Json\n          alt=\"json\"\n          appearance=\"secondary\"\n          icon={ComponentCode}\n          onClick={handleClick}\n          styled={selectedStyle('json')}\n          title=\"JSON\"\n          uid=\"json\"\n          css={`\n            svg.Icon {\n              padding-right: 5px;\n            }\n          `}\n        >\n          JSON\n        </ButtonIcon>\n      </ButtonGroup>\n    </Base>\n  )\n}\n\nToolbarViewsButton.defaultProps = {\n  className: '',\n  themed: [],\n}\n\nexport default ToolbarViewsButton\n","import React, { useMemo } from 'react'\nimport Base from '../Base/Base'\nimport { tableCaptionTheme } from './table.theme'\nimport { TableCaptionInterface } from './table.types'\n\nexport const TableCaption = function TableCaption({\n  children,\n  className,\n  themed,\n  ...propsRest\n}: TableCaptionInterface) {\n  const classNames = useMemo(() => `TableCaption ${className}`, [className])\n  const _themed = useMemo(() => [tableCaptionTheme, ...themed], [\n    tableCaptionTheme,\n    themed,\n  ])\n\n  return (\n    <Base as=\"caption\" className={classNames} themed={_themed} {...propsRest}>\n      {children}\n    </Base>\n  )\n}\n\nTableCaption.defaultProps = {\n  className: '',\n  themed: [],\n}\n\nexport default TableCaption\n","import React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n} from 'react'\nimport styled from 'styled-components'\n\nimport Base from '../Base/Base'\nimport { JsonView } from './JsonView'\nimport { TableView } from './TableView'\nimport { Toolbar } from '../Toolbar/Toolbar'\nimport { ToolbarAddButton } from './ToolbarAddButton'\nimport { ToolbarCopyButton } from './ToolbarCopyButton'\nimport { ToolbarDeleteButton } from './ToolbarDeleteButton'\nimport { ToolbarDownloadButton } from './ToolbarDownloadButton'\nimport { ToolbarEditButton } from './ToolbarEditButton'\nimport { ToolbarExecuteButton } from './ToolbarExecuteButton'\nimport { ToolbarViewsButton } from './ToolbarViewsButton'\nimport { tableTheme, tableContainerTheme } from './table.theme'\nimport { useCacheState } from '../reusable/cacheState'\nimport { TableCaption } from './TableCaption'\nimport {\n  TableInterface,\n  TableInitialValueInterface,\n  TableReducerType,\n  TableToolbarInterface,\n  SelectToolbarInterface,\n} from './table.types'\n\nconst SelectedText = styled.span`\n  display: inline-block;\n`\n\nexport const Table = React.memo(function Table({\n  baseRoute = '',\n  className = '',\n  caption,\n  headings,\n  hook,\n  initialValue,\n  name,\n  numbered,\n  onAdd,\n  onCopy,\n  onDelete,\n  onDeleteSelected,\n  onDownload,\n  onEdit,\n  onExecute,\n  rows,\n  onRowClick,\n  title,\n  condensed,\n  hover,\n  toolbar = [],\n  height,\n  themed: propsThemed = [],\n  ...propsRest\n}: TableInterface) {\n  const classNames = useMemo(() => `TableContainer ${className}`, [className])\n  const themed = useMemo(() => [tableTheme, ...propsThemed], [\n    tableTheme,\n    propsThemed,\n  ])\n\n  const {\n    loading,\n    selected,\n    dispatch: dispatchHook,\n    itemsToArray,\n    items,\n  } = hook()\n  const itemsMemo = useMemo(() => items, [items])\n  const itemListMemo = useMemo(() => initialValue || itemsToArray(), [\n    initialValue,\n    itemsToArray,\n  ])\n\n  const initialState: TableInitialValueInterface = {\n    variables: {},\n    itemList: [],\n  }\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_ITEM_LIST',\n      itemList: itemListMemo, // initialValue || itemListMemo,\n    })\n  }, [itemListMemo])\n\n  const reducer: TableReducerType = useCallback(function reducer(\n    state,\n    action\n  ) {\n    switch (action.type) {\n      case 'SET_ITEM_LIST':\n        return { ...state, itemList: action.itemList }\n      case 'SET_VARIABLES':\n        return { ...state, variables: action.variables }\n      default:\n        return state\n    }\n  },\n  [])\n\n  const [{ itemList }, dispatch] = useReducer(reducer, initialState)\n\n  const { state: currentView, setItem: setCurrentView } = useCacheState(\n    `${name}_Table`,\n    'table'\n  )\n\n  const handleAdd = useCallback(\n    function handleAdd(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onAdd && onAdd(e)\n    },\n    [onAdd]\n  )\n\n  const handleDelete = useCallback(\n    function handleDelete(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onDelete && onDelete(e)\n    },\n    [onDelete]\n  )\n\n  const handleDeleteSelected = useCallback(\n    function handleDeleteSelected(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n\n      const result = window.confirm(`Drop collections?\\n${selected.join('\\n')}`)\n\n      if (result) {\n        onDeleteSelected && onDeleteSelected(e)\n      }\n    },\n    [onDeleteSelected]\n  )\n\n  const handleEdit = useCallback(\n    function handleEdit(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onEdit && onEdit(e)\n    },\n    [onEdit]\n  )\n\n  const handleExecute = useCallback(\n    function handleExecute(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n\n      onExecute().then((result: any) => {\n        if (result) {\n          dispatch({\n            type: 'SET_ITEM_LIST',\n            itemList: result,\n          })\n        }\n      })\n    },\n    [dispatch, onExecute]\n  )\n\n  const handleSwitchView = useCallback(\n    function handleSwitchView(\n      e: React.MouseEvent<HTMLElement>,\n      { id }: { id: string }\n    ) {\n      e.preventDefault()\n\n      if (id !== currentView) {\n        setCurrentView(id)\n      }\n    },\n    [setCurrentView]\n  )\n\n  const [allSelected, setAllSelected] = React.useState(false)\n\n  const handleSelectHeadingChange = React.useCallback(\n    function handleSelectHeadingChange(e: React.ChangeEvent<HTMLInputElement>) {\n      setAllSelected(e.currentTarget.checked)\n      dispatchHook({\n        type: 'SET_SELECTED',\n        selected: e.currentTarget.checked ? Object.keys(items) : [],\n      })\n    },\n    [allSelected, dispatch, items]\n  )\n\n  const makeHeadings = (heading: any) =>\n    typeof heading === 'function'\n      ? heading({ allSelected, handleSelectHeadingChange })\n      : heading\n\n  const headingsMemo = useMemo(() => headings.map(makeHeadings), [headings])\n\n  const rowsMemo = useMemo(\n    () => (typeof rows === 'function' ? rows(itemList) : rows),\n    [itemList, rows]\n  )\n  return (\n    <Fragment>\n      {toolbar.length > 0 ? (\n        <TableToolbar\n          baseRoute={baseRoute}\n          borderBottom=\"thin\"\n          currentView={currentView}\n          data={itemListMemo}\n          items={selected}\n          onAdd={handleAdd}\n          onCopy={onCopy}\n          onDelete={handleDelete}\n          onDeleteSelected={handleDeleteSelected}\n          onDownload={onDownload}\n          onEdit={handleEdit}\n          onExecute={handleExecute}\n          onSwitchView={handleSwitchView}\n          paddingBottom={2}\n          selectToolbar={SelectToolbar}\n          title={title}\n          toolbar={toolbar}\n        />\n      ) : null}\n      {currentView === 'table' ? (\n        <Base\n          className={classNames}\n          themed={[tableContainerTheme]}\n          height={height}\n          {...propsRest}\n        >\n          <Base\n            as=\"table\"\n            className=\"Table\"\n            themed={themed}\n            condensed={condensed}\n            hover={hover}\n          >\n            {caption ? <TableCaption>{caption}</TableCaption> : null}\n            <TableView\n              allSelected={allSelected}\n              baseRoute={baseRoute}\n              dispatch={dispatchHook}\n              handleAdd={handleAdd}\n              handleDeleteSelected={handleDeleteSelected}\n              headings={headingsMemo}\n              itemsToArray={itemsToArray}\n              loading={loading}\n              rows={rowsMemo}\n              selected={selected}\n              tableName={name}\n              onRowClick={onRowClick}\n            />\n          </Base>\n        </Base>\n      ) : (\n        <Base\n          className={classNames}\n          themed={[tableContainerTheme]}\n          height={height}\n          {...propsRest}\n        >\n          <JsonView items={itemsMemo} />\n        </Base>\n      )}\n    </Fragment>\n  )\n})\n\nconst SelectToolbar = React.memo(function SelectToolbar({\n  selected,\n  handleDeleteSelected,\n}: SelectToolbarInterface) {\n  return (\n    <div>\n      <SelectedText>{selected} selected </SelectedText>\n      <ToolbarDeleteButton\n        alt=\"delete\"\n        onClick={handleDeleteSelected}\n        title=\"Delete Collection\"\n      />\n    </div>\n  )\n})\n\nconst TableToolbar = React.memo(function TableToolbar({\n  baseRoute,\n  items,\n  onDeleteSelected,\n  onSwitchView,\n  selectToolbar,\n  currentView,\n  data,\n  onAdd,\n  onCopy,\n  onDelete,\n  onDownload,\n  onEdit,\n  onExecute,\n  title,\n  toolbar,\n}: TableToolbarInterface) {\n  const buttons = (button: string) => {\n    switch (button) {\n      case 'add':\n        return (\n          <ToolbarAddButton\n            alt=\"add\"\n            key=\"add\"\n            onClick={onAdd}\n            href={`/${baseRoute}/new`}\n          />\n        )\n\n      case 'copy':\n        return (\n          <ToolbarCopyButton\n            alt=\"copy\"\n            key=\"copy\"\n            data={data}\n            onClick={onCopy}\n          />\n        )\n      case 'edit':\n        return (\n          <ToolbarEditButton\n            alt=\"edit\"\n            key=\"edit\"\n            onClick={onEdit}\n            href={`/${baseRoute}/edit`}\n          />\n        )\n      case 'delete':\n        return (\n          <ToolbarDeleteButton\n            alt=\"delete\"\n            key=\"delete\"\n            onClick={onDelete}\n            title=\"Delete\"\n          />\n        )\n      case 'download':\n        return (\n          <ToolbarDownloadButton\n            alt=\"download\"\n            key=\"download\"\n            data={data}\n            onClick={onDownload}\n            fileName={\n              title ? `guru_download_${title}.json` : `guru_download.json`\n            }\n          />\n        )\n      case 'execute':\n        return (\n          <ToolbarExecuteButton\n            alt=\"execute\"\n            key=\"execute\"\n            onClick={onExecute}\n            title=\"Execute\"\n          />\n        )\n      case 'views':\n        return (\n          <ToolbarViewsButton\n            key=\"views\"\n            onClick={onSwitchView}\n            currentView={currentView}\n          />\n        )\n      default:\n        return null\n    }\n  }\n\n  const toolbarContent = useMemo(() => {\n    return (\n      <Fragment>\n        {toolbar.map((button: any) => {\n          return typeof button === 'function'\n            ? button({ onSwitchView, currentView, onAdd })\n            : buttons(button)\n        })}\n      </Fragment>\n    )\n  }, [buttons, currentView, onAdd, onSwitchView, toolbar])\n\n  return (\n    <Toolbar\n      baseRoute={baseRoute}\n      items={items}\n      onDeleteSelected={onDeleteSelected}\n      onSwitchView={onSwitchView}\n      selectToolbar={selectToolbar}\n      borderBottom=\"thin\"\n      paddingBottom={2}\n    >\n      {toolbarContent}\n    </Toolbar>\n  )\n})\n\nexport default Table\n","import { useMemo } from 'react'\nimport {\n  useCollectionHashReducer,\n  itemsToArray,\n} from '../reusable/collectionHash'\n\nconst items = [...new Array(100)]\n\nexport function useTable() {\n  const initialState = {\n    uid: 'id',\n    items: items.map((_, i) => ({\n      id: `id_${i}`,\n      name: `Project ${i}`,\n      endpoint: `http://project${i}.com`,\n    })),\n  }\n\n  const [collection, dispatch] = useCollectionHashReducer(initialState)\n\n  return useMemo(\n    () => ({\n      ...collection,\n      dispatch,\n      itemsToArray: () => itemsToArray(collection.items),\n    }),\n    [collection, dispatch]\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { TableRowSelectInterface } from './table.types'\n\nexport const TableRowSelect = function TableRowSelect({\n  handleChange,\n  id,\n  checked = false,\n  ...propsRest\n}: TableRowSelectInterface) {\n  const [isChecked, setChecked] = useState(checked)\n\n  useEffect(() => {\n    if (checked !== isChecked) {\n      setChecked(checked)\n    }\n  }, [checked])\n\n  const changed = function handleClick(e: React.ChangeEvent<HTMLInputElement>) {\n    setChecked(!isChecked)\n    handleChange && handleChange(e)\n  }\n\n  return (\n    <td style={{ width: '48px' }}>\n      <input\n        checked={isChecked}\n        onChange={changed}\n        name={id}\n        style={{ cursor: 'pointer' }}\n        type=\"checkbox\"\n        {...propsRest}\n      />\n    </td>\n  )\n}\n\nexport default TableRowSelect\n","import React from 'react'\n\nexport const AllSelectedHeading = React.memo(function AllSelectedHeading({\n  onChange,\n}: {\n  checked: boolean\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}) {\n  return (\n    <input\n      name=\"allSelected\"\n      type=\"checkbox\"\n      onChange={onChange}\n      style={{ cursor: 'pointer' }}\n    />\n  )\n})\n\nexport default AllSelectedHeading\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport { Flex } from '../Flex/Flex'\nimport styled from 'styled-components'\nimport { ThemeProvider } from '../ThemeContext/ThemeProvider'\nimport { Table } from './Table'\nimport { useTable } from './table.example'\nimport { TableRowSelect } from './TableRowSelect'\nimport { AllSelectedHeading } from './AllSelectedHeading'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Edit = makeShortcode(\"Edit\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"table\"\n    }}>{`Table`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Table} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"default\"\n    }}>{`Default`}</h2>\n    <Playground __position={1} __code={'<ThemeProvider>\\n  <Table\\n    height=\\\"250px\\\"\\n    name=\\\"TableDeafult\\\"\\n    caption=\\\"Table caption\\\"\\n    headings={[\\'\\', \\'ID\\', \\'Name\\', \\'Endpoint\\', \\'\\']}\\n    baseRoute=\\\"/table/#\\\"\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }, index) => ({\\n        column: [\\n          {\\n            key: \\'index\\',\\n            component: ({ handleChange, selected }) => <td>{index}</td>,\\n          },\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => (\\n              <td>\\n                <a href=\\\"#\\\">{endpoint}</a>\\n              </td>\\n            ),\\n          },\\n          {\\n            key: \\'actions\\',\\n            component: ({ Edit }) => (\\n              <td style={{ textAlign: \\'right\\' }}>\\n                <Edit appearance=\\\"tertiary\\\" uid={name} />\\n              </td>\\n            ),\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect,\n      AllSelectedHeading\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table height='250px' name='TableDeafult' caption=\"Table caption\" headings={['', 'ID', 'Name', 'Endpoint', '']} baseRoute='/table/#' hook={useTable} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }, index) => ({\n          column: [{\n            key: 'index',\n            component: ({\n              handleChange,\n              selected\n            }) => <td>{index}</td>\n          }, {\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td><a href=\"#\">{endpoint}</a></td>\n          }, {\n            key: \"actions\",\n            component: ({\n              Edit\n            }) => <td style={{\n              textAlign: \"right\"\n            }}>\n                  <Edit appearance='tertiary' uid={name} mdxType=\"Edit\" />\n                </td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"selectable\"\n    }}>{`Selectable`}</h2>\n    <Playground __position={2} __code={'<ThemeProvider>\\n  <Table\\n    height=\\\"250px\\\"\\n    name=\\\"TableSelect\\\"\\n    selectable\\n    headings={[\\'\\', \\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }) => ({\\n        column: [\\n          {\\n            key: \\'select\\',\\n            component: ({ handleChange, selected }) => (\\n              <TableRowSelect\\n                id={id}\\n                handleChange={handleChange}\\n                selected={selected}\\n              />\\n            ),\\n          },\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => (\\n              <td>\\n                <a href=\\\"#\\\">{endpoint}</a>\\n              </td>\\n            ),\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect,\n      AllSelectedHeading\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table height=\"250px\" name=\"TableSelect\" selectable headings={['', 'ID', 'Name', 'Endpoint']} hook={useTable} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }) => ({\n          column: [{\n            key: 'select',\n            component: ({\n              handleChange,\n              selected\n            }) => <TableRowSelect id={id} handleChange={handleChange} selected={selected} mdxType=\"TableRowSelect\" />\n          }, {\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td>\n                  <a href=\"#\">{endpoint}</a>\n                </td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"hover\"\n    }}>{`Hover`}</h2>\n    <Playground __position={3} __code={'<ThemeProvider>\\n  <Table\\n    height=\\\"250px\\\"\\n    name=\\\"TableHover\\\"\\n    hover\\n    headings={[\\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }) => ({\\n        column: [\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => (\\n              <td>\\n                <a href=\\\"#\\\">{endpoint}</a>\\n              </td>\\n            ),\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect,\n      AllSelectedHeading\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table height=\"250px\" name=\"TableHover\" hover headings={['ID', 'Name', 'Endpoint']} hook={useTable} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }) => ({\n          column: [{\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td>\n                  <a href=\"#\">{endpoint}</a>\n                </td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"condensed\"\n    }}>{`Condensed`}</h2>\n    <Playground __position={4} __code={'<ThemeProvider>\\n  <Table\\n    height=\\\"250px\\\"\\n    name=\\\"TableCondensed\\\"\\n    condensed\\n    headings={[\\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }) => ({\\n        column: [\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => (\\n              <td>\\n                <a href=\\\"#\\\">{endpoint}</a>\\n              </td>\\n            ),\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect,\n      AllSelectedHeading\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table height=\"250px\" name=\"TableCondensed\" condensed headings={['ID', 'Name', 'Endpoint']} hook={useTable} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }) => ({\n          column: [{\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td>\n                  <a href=\"#\">{endpoint}</a>\n                </td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"toolbar\"\n    }}>{`Toolbar`}</h2>\n    <Playground __position={5} __code={'<ThemeProvider>\\n  <Table\\n    height=\\\"250px\\\"\\n    baseRoute=\\\"/table/#\\\"\\n    name=\\\"TableToolbar\\\"\\n    caption=\\\"Table caption\\\"\\n    headings={[\\n      ({ handleSelectHeadingChange }) => (\\n        <AllSelectedHeading onChange={handleSelectHeadingChange} />\\n      ),\\n      \\'ID\\',\\n      \\'Name\\',\\n      \\'Endpoint\\',\\n    ]}\\n    hook={useTable}\\n    toolbar={[\\'add\\', \\'copy\\', \\'download\\', \\'views\\']}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }, index) => ({\\n        column: [\\n          {\\n            key: \\'select\\',\\n            component: ({ handleChange, allSelected }) => (\\n              <TableRowSelect\\n                id={id}\\n                handleChange={handleChange}\\n                checked={allSelected}\\n              />\\n            ),\\n          },\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => (\\n              <td>\\n                <a href=\\\"#\\\">{endpoint}</a>\\n              </td>\\n            ),\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect,\n      AllSelectedHeading\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table height='250px' baseRoute='/table/#' name='TableToolbar' caption=\"Table caption\" headings={[({\n          handleSelectHeadingChange\n        }) => <AllSelectedHeading onChange={handleSelectHeadingChange} mdxType=\"AllSelectedHeading\" />, 'ID', 'Name', 'Endpoint']} hook={useTable} toolbar={['add', 'copy', 'download', 'views']} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }, index) => ({\n          column: [{\n            key: 'select',\n            component: ({\n              handleChange,\n              allSelected\n            }) => <TableRowSelect id={id} handleChange={handleChange} checked={allSelected} mdxType=\"TableRowSelect\" />\n          }, {\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td><a href=\"#\">{endpoint}</a></td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  ","import { useMemo, useEffect, useState } from 'react'\n\nexport function useGetItems(hook: any) {\n  const { items, itemsToArray } = hook()\n  const [state, setState] = useState([])\n\n  useEffect(() => {\n    setState(itemsToArray(items))\n  }, [items])\n\n  return useMemo(() => state, [state])\n}\n\nexport function useGetActiveItem<T>(hook: any, initialState: T) {\n  const [state, setState] = useState<T>(initialState)\n\n  const { active, items } = hook()\n\n  useEffect(() => {\n    if (items && items[active]) {\n      setState(items[active])\n    }\n  }, [active, items])\n\n  return useMemo(() => state, [state])\n}\n\nexport function useResetActive(hook: any) {\n  const { active, dispatch } = hook()\n\n  useEffect(() => {\n    if (active === '') return\n\n    dispatch({\n      type: 'SET_ACTIVE',\n      active: '',\n    })\n  }, [])\n}\n\nexport function useSetActive(hook: any, value: any) {\n  const { active, dispatch } = hook()\n\n  useEffect(() => {\n    if (active === value) return\n    dispatch({\n      type: 'SET_ACTIVE',\n      active: value,\n    })\n  }, [active, value])\n}\n","export const COLLECTION_HASH_INITIAL_STATE = {\n  active: '',\n  items: [],\n  loading: false,\n  selected: [],\n  uid: 'id',\n};\n","import { useReducer } from 'react';\nimport { COLLECTION_HASH_INITIAL_STATE } from './collectionHashConstants';\nimport {\n  BuildInitialValueType,\n  CollectionHashActionInterface,\n  CollectionHashInitialValueInterface,\n  CollectionHashReducerType,\n  CollectionHashStateInterface,\n  ReducerType,\n  ItemsToArrayType,\n} from './collectionHash.types';\n\nconst buildInitialValue: BuildInitialValueType = initialState => ({\n  ...COLLECTION_HASH_INITIAL_STATE,\n  ...initialState,\n});\n\nexport const createInitialState: BuildInitialValueType = initialState =>\n  buildInitialValue(initialState);\n\nexport const itemsToArray: ItemsToArrayType = function itemsToArray(items) {\n  let list = [];\n\n  for (let item in items) {\n    list.push(items[item]);\n  }\n\n  return list;\n};\n\nexport const useCollectionHashReducer: CollectionHashReducerType = function useCollectionHashReducer(\n  initialState,\n  extendReducer = state => state\n) {\n  const initialValue: CollectionHashInitialValueInterface = buildInitialValue(\n    initialState\n  );\n\n  function removeItem(list: { [key: string]: string }, itemsToRemove: any[]) {\n    let items: { [key: string]: string } = {};\n\n    for (let item in list) {\n      if (!itemsToRemove.includes(item)) {\n        items[item] = list[item];\n      }\n    }\n\n    return items;\n  }\n\n  function transformCollectionToObject(items: any[]) {\n    if (!Array.isArray(items)) {\n      return undefined;\n    }\n\n    const reducer = (acc: { [key: string]: string }, item: any) => ({\n      ...acc,\n      [item[initialValue.uid]]: item,\n    });\n    return items.reduce(reducer, {});\n  }\n\n  function reducer(\n    state: CollectionHashStateInterface,\n    action: CollectionHashActionInterface,\n    initialValue: CollectionHashInitialValueInterface,\n    extendReducer: ReducerType\n  ) {\n    const notArray = (value: any) => !Array.isArray(value);\n    const notString = (value: any) => typeof value !== 'string';\n    const notDefined = (value: any) => value == null;\n\n    switch (action.type) {\n      case 'INSERT_ITEMS': {\n        const items = Array.isArray(action.items)\n          ? transformCollectionToObject(action.items)\n          : {\n              [action.items[initialValue.uid]]: action.items,\n            };\n        return {\n          ...state,\n          items: {\n            ...state.items,\n            ...items,\n          },\n        };\n      }\n\n      case 'REDUCER': {\n        return action.reducer(state);\n      }\n\n      case 'REMOVE_ITEMS': {\n        if (notArray(action.remove)) {\n          return state;\n        }\n\n        return {\n          ...state,\n          active: action.remove.includes(state.active) ? '' : state.active,\n          selected: state.selected.filter(\n            item => !action.remove.includes(item)\n          ),\n          items: removeItem(state.items, action.remove),\n        };\n      }\n\n      case 'REPLACE_ITEMS': {\n        const transformedData = transformCollectionToObject(action.items);\n        return {\n          ...state,\n          items: transformedData,\n        };\n      }\n\n      case 'RESET': {\n        return initialValue;\n      }\n\n      case 'SET_ACTIVE': {\n        if (notString(action.active)) {\n          return state;\n        }\n\n        return {\n          ...state,\n          active: notDefined(action.active) ? '' : action.active.trim(),\n        };\n      }\n\n      case 'SET_LOADING': {\n        return {\n          ...state,\n          loading: !!action.loading,\n        };\n      }\n\n      case 'SET_SELECTED': {\n        return {\n          ...state,\n          selected: action.selected,\n        };\n      }\n\n      case 'TOGGLE_SELECTED_ITEMS': {\n        let selected = [...state.selected];\n\n        for (let select of action.selected) {\n          const index = selected.indexOf(select);\n          const _select = select.trim();\n\n          if (state.items[index]) {\n            selected =\n              index === 0\n                ? selected.slice(1)\n                : index === selected.length - 1\n                ? selected.slice(0, selected.length - 1)\n                : [...selected.slice(0, index), ...selected.slice(index + 1)];\n          } else {\n            selected.push(_select);\n          }\n        }\n\n        return {\n          ...state,\n          selected,\n        };\n      }\n\n      case 'UPDATE_ITEM': {\n        if (!state.items[action.select]) {\n          return state;\n        }\n\n        const item = {\n          [action.item.name || action.select]: {\n            ...state.items[action.select],\n            ...action.item,\n          },\n        };\n\n        const updateItemInList = () => ({\n          ...state.items,\n          ...item,\n        });\n\n        let removeCloneAndUpdateItem = () => ({\n          ...removeItem(state.items, [action.select]),\n          ...item,\n        });\n\n        const updatedItems = action.item[initialValue.uid]\n          ? removeCloneAndUpdateItem()\n          : updateItemInList();\n\n        const setSelectedItem = (list: any[], item: any, update: any) => {\n          const replaceSelectedItem = () => {\n            const index = list.indexOf(item);\n            return index === 0\n              ? [update, ...list.slice(1)]\n              : index === list.length - 1\n              ? [...list.slice(0, list.length - 1), update]\n              : [...list.slice(0, index), update, ...list.slice(index + 1)];\n          };\n\n          return state.selected.includes(action.select)\n            ? replaceSelectedItem()\n            : state.selected;\n        };\n\n        return {\n          ...state,\n          active:\n            state.active === action.select ? action.item.name : state.active,\n          selected: setSelectedItem(\n            state.selected,\n            action.select,\n            action.item.name\n          ),\n          items: updatedItems,\n        };\n      }\n\n      default:\n        return extendReducer ? extendReducer(state, action) : state;\n    }\n  }\n\n  function crudReducer(\n    state: CollectionHashStateInterface,\n    action: CollectionHashActionInterface\n  ) {\n    return reducer(state, action, initialValue, extendReducer);\n  }\n\n  return useReducer(crudReducer, initialValue);\n};\n","export * from './collectionHashConstants';\nexport * from './collectionHashReducer';\nexport * from './collectionHash.hooks';\nexport * from './collectionHash.types';\n"],"sourceRoot":""}