{"version":3,"sources":["/mnt/Storage/Projects/redesign/src/Toggle/toggle.theme.ts","/mnt/Storage/Projects/redesign/src/Toggle/Toggle.tsx","/mnt/Storage/Projects/redesign/src/Toggle/toggle.example.ts","/mnt/Storage/Projects/redesign/src/Toggle/toogle.mdx"],"names":["toggleTheme","_ref","Object","objectDestructuringEmpty","display","position","toggleAppearanceTheme","_ref2","appearance","_ref2$theme","theme","border","unit","color","backgroundColor","paddingLeft","paddingRight","thinDanger","toggleInputTheme","_ref3","boxSizing","height","width","visibility","&:checked + label","background","&:checked + label:after","left","transform","toggleLabelTheme","_ref4","checked","cursor","textIndent","hideText","borderRadius","fontSize","lineHeight","textAlign","toggleContentTheme","_ref5","toggle","transition"," &:active","ToggleInput","React","memo","_ref$className","className","propsRest","objectWithoutProperties","classNames","useMemo","concat","_themed","react_default","a","createElement","Base","assign","as","type","themed","ToggleLabel","_ref2$className","ToggleContent","_ref3$className","_ref3$themed","_ref3$width","_ref3$height","toConsumableArray","Toggle","children","_ref4$className","_ref4$height","id","_ref4$themed","_ref4$width","_toggle","slicedToArray","state","setState","handleClick","useCallback","e","preventDefault","Toggle_ToggleInput","Toggle_ToggleLabel","htmlFor","onClick","Toggle_ToggleContent","elevate","ToggleContainer","useState","layoutProps","MDXLayout","MDXContent","components","props","index_es","mdxType","index_esm","of","__position","__code","__scope","this","Playground","Props","styled","ThemeProvider","toggle_example_ToggleContainer","Toggle_Toggle","isMDXComponent"],"mappings":"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","file":"static/js/src-toggle-toogle.da95a89c.js","sourcesContent":["import {\n  ToggleInterface,\n  ToggleInputInterface,\n  ToggleLabelInterface,\n  ToggleContentInterface,\n} from './toggle.types'\n\nexport function toggleTheme({  }: ToggleInterface) {\n  return {\n    display: 'inline-block',\n    position: 'relative',\n  }\n}\n\nexport function toggleAppearanceTheme({\n  appearance,\n  theme: { border, unit },\n}: ToggleInterface) {\n  switch (appearance) {\n    case 'primary':\n      return {\n        color: '#fff',\n        backgroundColor: 'blue',\n        paddingLeft: unit[2],\n        paddingRight: unit[2],\n      }\n    case 'secondary':\n      return {\n        border: border.thinDanger,\n        paddingLeft: unit[2],\n        paddingRight: unit[2],\n      }\n    default:\n      return {}\n  }\n}\n\nexport function toggleInputTheme({ theme: { color } }: ToggleInputInterface) {\n  return {\n    position: 'absolute',\n    boxSizing: 'border-box',\n    height: 0,\n    width: 0,\n    visibility: 'hidden',\n\n    '&:checked + label': {\n      background: color['grey-100'],\n    },\n\n    '&:checked + label:after': {\n      left: 'calc(100% - 5px)',\n      transform: 'translateX(-100%)',\n    },\n  }\n}\n\nexport function toggleLabelTheme({\n  theme: { color },\n  checked,\n  height,\n  hideText,\n  width,\n}: ToggleLabelInterface) {\n  return {\n    position: 'absolute',\n    boxSizing: 'border-box',\n    cursor: 'pointer',\n    textIndent: hideText ? '-9999px' : 'initial',\n    width: width,\n    height: height,\n    background: color['grey-700'],\n    display: 'inline-block',\n    borderRadius: '100px',\n    fontSize: height,\n    lineHeight: height,\n    textAlign: checked ? 'left' : 'right',\n  }\n}\n\nexport function toggleContentTheme({\n  theme: { color },\n  toggle,\n  height,\n  width,\n}: ToggleContentInterface) {\n  return {\n    display: 'inherit',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    width: width,\n    height: height,\n    background: toggle ? color['grey-500'] : color['grey-400'],\n    borderRadius: '90px',\n    transform: toggle ? 'translateX(100%);' : 'translate(0);',\n    transition: '0.3s',\n\n    ' &:active': {\n      width: '25px',\n      // transform: translateX(calc(100%  - 25px),\n    },\n  }\n}\n","import React, { useCallback, useMemo } from 'react'\n\nimport { Base } from '../Base'\nimport {\n  ToggleInterface,\n  ToggleInputInterface,\n  ToggleLabelInterface,\n  ToggleContentInterface,\n} from './toggle.types'\nimport {\n  toggleAppearanceTheme,\n  toggleInputTheme,\n  toggleLabelTheme,\n  toggleTheme,\n  toggleContentTheme,\n} from './toggle.theme'\n\nexport const ToggleInput = React.memo(function ToggleInput({\n  checked,\n  className = '',\n  theme = [],\n  ...propsRest\n}: ToggleInputInterface) {\n  const classNames = useMemo(() => `ToggleInput ${className}`, [className])\n  const _themed = useMemo(() => [toggleInputTheme], [toggleInputTheme])\n\n  return (\n    <Base\n      as=\"input\"\n      type=\"checkbox\"\n      className={classNames}\n      themed={_themed}\n      {...propsRest}\n    />\n  )\n})\n\nexport const ToggleLabel = React.memo(function ToggleLabel({\n  checked,\n  className = '',\n  ...propsRest\n}: ToggleLabelInterface) {\n  const classNames = useMemo(() => `ToggleLabel ${className}`, [className])\n  const _themed = useMemo(() => [toggleAppearanceTheme, toggleLabelTheme], [\n    toggleLabelTheme,\n    toggleAppearanceTheme,\n  ])\n\n  return (\n    <Base as=\"label\" className={classNames} themed={_themed} {...propsRest} />\n  )\n})\n\nexport const ToggleContent = React.memo(function ToggleContent({\n  checked,\n  className = '',\n  themed = [],\n  width = '90px',\n  height = '90px',\n  ...propsRest\n}: ToggleContentInterface) {\n  const classNames = useMemo(() => `ToggleContent ${className}`, [className])\n  const _themed = useMemo(() => [toggleContentTheme, ...themed], [\n    toggleContentTheme,\n    themed,\n  ])\n\n  return (\n    <Base\n      as=\"span\"\n      className={classNames}\n      themed={_themed}\n      width={width}\n      height={height}\n      {...propsRest}\n    />\n  )\n})\n\nexport const Toggle = React.memo(function Toggle({\n  children,\n  className = '',\n  height = '20px',\n  hideText,\n  id,\n  themed = [],\n  toggle,\n  width = '40px',\n  ...propsRest\n}: ToggleInterface) {\n  const classNames = useMemo(() => `Toggle ${className}`, [className])\n  const _themed = useMemo(() => [toggleTheme, ...themed], [toggleTheme, themed])\n  const [state, setState] = toggle\n\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLInputElement>) {\n      e.preventDefault()\n      setState(!state)\n    },\n    [setState]\n  )\n\n  return (\n    <Base className={classNames} themed={_themed} {...propsRest}>\n      <ToggleInput\n        checked={state}\n        height={height}\n        id={id}\n        type=\"checkbox\"\n        width={width}\n      />\n      <ToggleLabel\n        checked={state}\n        height={height}\n        hideText={hideText}\n        htmlFor={id}\n        onClick={handleClick}\n        width={width}\n      >\n        {children || (\n          <ToggleContent\n            elevate={1}\n            toggle={state}\n            width=\"20px\"\n            height=\"20px\"\n          />\n        )}\n      </ToggleLabel>\n    </Base>\n  )\n})\n\nexport default Toggle\n","import { useMemo, useState } from 'react';\n\nexport const ToggleContainer = function ToggleContainer({\n  children,\n}: {\n  children: any;\n}) {\n  const toggle = useState(false);\n\n  const context = useMemo(() => toggle, [toggle]);\n\n  return children(context);\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport styled from 'styled-components'\nimport { ThemeProvider } from '../ThemeContext/ThemeProvider'\nimport { Toggle } from './Toggle'\nimport { ToggleContainer } from './toggle.example'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"toggle\"\n    }}>{`Toggle`}</h1>\n    <Props of={Toggle} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"default\"\n    }}>{`Default`}</h2>\n    <Playground __position={1} __code={'<ThemeProvider>\\n  <ToggleContainer>\\n    {toggle => <Toggle id=\\\"switch1\\\" toggle={toggle} />}\\n  </ToggleContainer>\\n  <ToggleContainer>\\n    {toggle => <Toggle appearance=\\\"primary\\\" id=\\\"switch2\\\" toggle={toggle} />}\\n  </ToggleContainer>\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      styled,\n      ThemeProvider,\n      Toggle,\n      ToggleContainer\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <ToggleContainer mdxType=\"ToggleContainer\">\n      {toggle => <Toggle id=\"switch1\" toggle={toggle} mdxType=\"Toggle\" />}\n    </ToggleContainer>\n    <ToggleContainer mdxType=\"ToggleContainer\">\n      {toggle => <Toggle appearance=\"primary\" id=\"switch2\" toggle={toggle} mdxType=\"Toggle\" />}\n    </ToggleContainer>\n  </ThemeProvider>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}