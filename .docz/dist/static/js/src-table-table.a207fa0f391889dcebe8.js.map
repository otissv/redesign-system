{"version":3,"sources":["/mnt/Storage/Projects/redesign/src/ButtonGroup/buttonGroup.theme.ts","/mnt/Storage/Projects/redesign/src/ButtonGroup/ButtonGroup.tsx","/mnt/Storage/Projects/redesign/src/ButtonIcon/index.ts","/mnt/Storage/Projects/redesign/src/Checkbox/checkbox.theme.ts","/mnt/Storage/Projects/redesign/src/Checkbox/Checkbox.tsx","/mnt/Storage/Projects/redesign/src/Checkbox/index.ts","/mnt/Storage/Projects/redesign/src/Flex/flex.theme.ts","/mnt/Storage/Projects/redesign/src/Flex/Flex.tsx","/mnt/Storage/Projects/redesign/src/MaterialIcons/Code.tsx","/mnt/Storage/Projects/redesign/src/MaterialIcons/PlayCircle.tsx","/mnt/Storage/Projects/redesign/src/MaterialIcons/ViewList.tsx","/mnt/Storage/Projects/redesign/src/Table/JsonView.tsx","/mnt/Storage/Projects/redesign/src/reusable/cacheState/useCacheState.ts","/mnt/Storage/Projects/redesign/src/Table/TableButton.tsx","/mnt/Storage/Projects/redesign/src/Table/TableBody.tsx","/mnt/Storage/Projects/redesign/src/Table/TableView.tsx","/mnt/Storage/Projects/redesign/src/Table/ToolbarAddButton.tsx","/mnt/Storage/Projects/redesign/src/Table/ToolbarCopyButton.tsx","/mnt/Storage/Projects/redesign/src/Table/ToolbarDeleteButton.tsx","/mnt/Storage/Projects/redesign/src/Table/ToolbarDownloadButton.tsx","/mnt/Storage/Projects/redesign/src/Table/ToolbarEditButton.tsx","/mnt/Storage/Projects/redesign/src/Table/ToolbarExecuteButton.tsx","/mnt/Storage/Projects/redesign/src/Table/table.theme.ts","/mnt/Storage/Projects/redesign/src/Table/ToolbarViewsButton.tsx","/mnt/Storage/Projects/redesign/src/Table/TableCaption.tsx","/mnt/Storage/Projects/redesign/src/Table/Table.tsx","/mnt/Storage/Projects/redesign/src/Table/table.example.tsx","/mnt/Storage/Projects/redesign/src/Table/TableRowSelect.tsx","/mnt/Storage/Projects/redesign/src/Table/AllSelectedHeading.tsx","/mnt/Storage/Projects/redesign/src/Table/table.mdx","/mnt/Storage/Projects/redesign/src/reusable/collectionHash/collectionHash.hooks.ts","/mnt/Storage/Projects/redesign/src/reusable/collectionHash/collectionHashConstants.ts","/mnt/Storage/Projects/redesign/src/reusable/collectionHash/collectionHashReducer.ts","/mnt/Storage/Projects/redesign/src/reusable/collectionHash/index.ts"],"names":["buttonGroupTheme","_ref","stacked","display","position","transition","theme","animation","easeMedium","verticalAlign","flexDirection","buttonStretchGroupTheme","_ref2","stretch","width","ButtonGroupContext","React","createContext","useButtonGroup","useContext","ButtonGroup","memo","children","_ref$className","className","_ref$themed","onClick","themed","propsThemed","propsRest","Object","objectWithoutProperties","classNames","useMemo","concat","toConsumableArray","appearance","context","size","value","react_default","a","createElement","Provider","Base","assign","role","_ButtonIcon__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","getAppearance","color","checkboxTheme","checked","_ref2$theme","border","unit","height","upperFirst","thin","cursor","input","top","left","margin","padding","opacity",".CheckboxBackground","pointerEvents",".CheckboxCheckmark","strokeWidth","strokeDasharray","transform",".CheckboxBackground, .CheckboxCheckmark","easeFast","input:checked+.CheckboxBackground, input:indeterminate+.CheckboxBackground","background","Checkbox","id","name","onChange","_themed","isDisabled","disabled","type","viewBox","fill","stroke","_Checkbox__WEBPACK_IMPORTED_MODULE_0__","flexTheme","alignItems","basis","grow","justifyContent","shrink","wrap","kebabCase","flexWrap","flexDirectionTheme","direction","Flex","Code","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Icon__WEBPACK_IMPORTED_MODULE_1__","props","PlayCircle","ViewList","JsonView","items","JSON","stringify","useCacheState","key","initialState","storage","_useState","useState","_useState2","slicedToArray","state","setState","windowStorage","window","sessionStorage","localStorage","setItem","newState","data","removeItem","undefined","useEffect","cached","getItem","parse","TableButton","Component","icon","uid","ButtonIcon","data-uid","TableCopyButton","Copy","TableButton_TableButton","title","TableDeleteButton","_ref3","Delete","TableDownloadButton","_ref4","Download","TableEditLink","_ref5","Edit","as","TableBody","allSelected","_ref$baseRoute","baseRoute","dispatch","handleAdd","handleDeleteSelected","itemsToArray","loading","onRowClick","_ref$rows","rows","selected","tableName","_useCacheState","expandRows","setExpandRows","handleChange","useCallback","e","preventDefault","currentTarget","handleDelete","handleExpandRows","dataset","isStringEqual","r","find","filter","handleRowClick","body","map","i","column","rowDetail","RowDetail","react","item","component","TableButton_TableEditLink","href","TableButton_TableDeleteButton","TableButton_TableDownloadButton","TableView","headings","tableHeadings","heading","Table_TableBody","ToolbarAddButton","handleClick","Plus","ButtonIcon_ButtonIcon","alt","css","ToolbarCopyButton","text","lib","copy","ToolbarDeleteButton","ToolbarDownloadButton","fileName","fileDownload","ToolbarEditButton","ToolbarExecuteButton","tableContainerTheme","overflow","tableTheme","condensed","hover","elevate","borderCollapse","td, th","lineHeight","&:first-child","paddingLeft","&:last-child","paddingRight","td","borderTop","tr:hover","boxShadow","marginRight","thinTransparent","a:hover, a:active","link","tableCaptionTheme","objectDestructuringEmpty","visibility","tableViewsButtonTheme","marginLeft","ToolbarViewsButton","currentView","selectedStyle","view","ComponentListAlt","ComponentCode","src_Base","styled","Json","defaultProps","TableCaption","SelectedText","span","_templateObject","Table","caption","hook","initialValue","onAdd","numbered","onCopy","onDelete","onDeleteSelected","onDownload","onEdit","onExecute","_ref$toolbar","toolbar","_hook","dispatchHook","itemsMemo","itemListMemo","itemList","reducer","action","objectSpread","variables","_useReducer","useReducer","_useReducer2","setCurrentView","confirm","join","handleEdit","handleExecute","then","result","handleSwitchView","_React$useState","_React$useState2","setAllSelected","handleSelectHeadingChange","keys","makeHeadings","headingsMemo","rowsMemo","length","Table_TableToolbar","borderBottom","onSwitchView","paddingBottom","selectToolbar","SelectToolbar","TableCaption_TableCaption","TableView_TableView","JsonView_JsonView","ToolbarDeleteButton_ToolbarDeleteButton","TableToolbar","buttons","button","ToolbarAddButton_ToolbarAddButton","ToolbarCopyButton_ToolbarCopyButton","ToolbarEditButton_ToolbarEditButton","ToolbarDownloadButton_ToolbarDownloadButton","ToolbarExecuteButton_ToolbarExecuteButton","ToolbarViewsButton_ToolbarViewsButton","toolbarContent","Toolbar","Array","useTable","_","endpoint","_useCollectionHashRed","useCollectionHashReducer","_useCollectionHashRed2","collection","TableRowSelect","_ref$checked","isChecked","setChecked","style","AllSelectedHeading","layoutProps","MDXLayout","MDXContent","components","index_es","mdxType","index_esm","of","__position","__code","__scope","this","Playground","Props","ThemeProvider","Table_Table","index","textAlign","selectable","_ref6","TableRowSelect_TableRowSelect","_ref7","_ref8","_ref9","AllSelectedHeading_AllSelectedHeading","_ref10","_ref11","isMDXComponent","useGetItems","_mnt_Storage_Projects_redesign_node_modules_docz_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","useGetActiveItem","_useState3","_useState4","_hook2","active","useResetActive","_hook3","useSetActive","_hook4","COLLECTION_HASH_INITIAL_STATE","buildInitialValue","_mnt_Storage_Projects_redesign_node_modules_docz_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","createInitialState","list","push","extendReducer","arguments","itemsToRemove","includes","transformCollectionToObject","isArray","reduce","acc","_mnt_Storage_Projects_redesign_node_modules_docz_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","remove","transformedData","notString","notDefined","trim","_mnt_Storage_Projects_redesign_node_modules_docz_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","select","indexOf","_select","slice","err","updatedItems","update","replaceSelectedItem","setSelectedItem","crudReducer","_collectionHashReducer__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/src-table-table.03f5250d.js","sourcesContent":["import { ButtonGroupInterface } from './buttonGroup.types';\n\nexport function buttonGroupTheme({\n  stacked,\n  theme: { animation },\n}: ButtonGroupInterface) {\n  return {\n    display: 'inline-flex',\n    position: 'relative',\n    transition: animation.easeMedium(),\n    verticalAlign: 'middle',\n    flexDirection: stacked ? 'column' : 'row',\n  };\n}\n\nexport function buttonStretchGroupTheme({ stretch }: ButtonGroupInterface) {\n  return stretch ? { width: '100%' } : {};\n}\n","import React, { useContext, useMemo } from 'react'\n\nimport Base from '../Base/Base'\nimport { buttonGroupTheme, buttonStretchGroupTheme } from './buttonGroup.theme'\nimport { ButtonGroupInterface } from './buttonGroup.types'\n\nexport const ButtonGroupContext = React.createContext({})\n\nexport function useButtonGroup() {\n  return useContext(ButtonGroupContext)\n}\n\nexport const ButtonGroup = React.memo(function ButtonGroup({\n  children,\n  className = '',\n  onClick,\n  themed: propsThemed = [],\n  ...propsRest\n}: ButtonGroupInterface) {\n  const classNames = useMemo(() => `ButtonGroup ${className}`, [className])\n  const themed = useMemo(\n    () => [buttonGroupTheme, buttonStretchGroupTheme, ...propsThemed],\n    [buttonGroupTheme, buttonStretchGroupTheme, propsThemed]\n  )\n\n  const { appearance, context, size, stretch } = propsRest\n  const value = useMemo(() => ({ appearance, context, size, stretch }), [\n    appearance,\n    context,\n    size,\n    stretch,\n  ])\n\n  return (\n    <ButtonGroupContext.Provider value={value}>\n      <Base role=\"group\" className={classNames} themed={themed} {...propsRest}>\n        {children}\n      </Base>\n    </ButtonGroupContext.Provider>\n  )\n})\n\nexport default ButtonGroup\n","export * from './ButtonIcon';\nexport * from './buttonIcon.types';\n","import upperFirst from 'lodash/fp/upperFirst'\n\nimport { CheckboxInterface } from './checkbox.types'\nimport { ColorsInterface, AppearanceColorsType } from '../theme'\n\nfunction getAppearance({\n  appearance,\n  color,\n}): {\n  appearance: AppearanceColorsType\n  colors: ColorsInterface\n} {\n  return color[appearance] || color.default\n}\n\nexport function checkboxTheme({\n  appearance,\n  checked,\n  theme: { color, animation, border, unit },\n}: CheckboxInterface) {\n  return {\n    position: 'relative',\n    height: unit[5],\n    width: unit[5],\n    border: border[`thin${upperFirst(appearance)}`] || border.thin,\n    color: '#fff',\n    cursor: 'pointer',\n    display: 'inline-block',\n\n    input: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      margin: 0,\n      padding: 0,\n      opacity: 0,\n      cursor: 'inherit',\n    },\n\n    '.CheckboxBackground': {\n      width: 'inherit',\n      height: 'inherit',\n      pointerEvents: 'none',\n    },\n\n    '.CheckboxCheckmark': {\n      strokeWidth: '3.12px',\n      strokeDasharray: 29.7833385,\n      opacity: 0,\n      transform: 'scale(0.9)',\n      position: 'absolute',\n      top: '1px',\n      left: '1px',\n    },\n\n    '.CheckboxBackground, .CheckboxCheckmark': {\n      transition: animation.easeFast(),\n    },\n\n    'input:checked+.CheckboxBackground, input:indeterminate+.CheckboxBackground': {\n      background: checked ? 'none' : getAppearance({ appearance, color }),\n\n      '.CheckboxCheckmark': {\n        opacity: 1,\n      },\n    },\n  }\n}\n","import React, { useCallback, useMemo } from 'react'\n\nimport { Base } from '../Base'\nimport { CheckboxInterface } from './checkbox.types'\nimport { checkboxTheme } from './checkbox.theme'\n\nexport const Checkbox = React.memo(function Checkbox({\n  checked,\n  className = '',\n  id,\n  name,\n  onChange,\n  themed = [],\n  ...propsRest\n}: CheckboxInterface) {\n  const classNames = useMemo(() => `Checkbox ${className}`, [className])\n  const _themed = useMemo(() => [checkboxTheme, ...themed], [\n    checkboxTheme,\n    themed,\n  ])\n\n  const isDisabled = useMemo(() => propsRest.appearance === 'disabled', [\n    propsRest.appearance,\n  ])\n\n  return (\n    <Base className={classNames} themed={_themed} {...propsRest}>\n      <input\n        checked={checked}\n        className=\"CheckboxInput\"\n        disabled={isDisabled}\n        id={id}\n        name={name}\n        onChange={onChange}\n        type=\"checkbox\"\n      />\n      <div className=\"CheckboxBackground\">\n        <svg className=\"CheckboxCheckmark\" viewBox=\"0 0 24 24\">\n          <path\n            className=\"mdc-checkbox__checkmark-path\"\n            fill=\"none\"\n            stroke=\"white\"\n            d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"\n          ></path>\n        </svg>\n      </div>\n    </Base>\n  )\n})\n\nexport default Checkbox\n","export * from './Checkbox'\nexport * from './checkbox.types'\n","import { FlexInterface } from './flex.types';\n\nimport kebabCase from 'lodash/kebabCase';\n\nexport function flexTheme({\n  alignItems,\n  basis,\n  display,\n  grow,\n  justifyContent,\n  shrink,\n  wrap,\n}: FlexInterface) {\n  return {\n    display: display || 'flex',\n    basis: basis ? `${basis}` : '',\n    grow: grow ? `${grow}` : '',\n    shrink: shrink ? `${shrink}` : '',\n    justifyContent: (justifyContent && [kebabCase(justifyContent)]) || '',\n    alignItems: (alignItems && [kebabCase(alignItems)]) || '',\n    flexWrap: (wrap && [kebabCase(wrap)]) || '',\n  };\n}\n\nexport function flexDirectionTheme({ direction }: FlexInterface) {\n  switch (direction) {\n    case 'row':\n      return { flexDirection: 'row' };\n    case 'column':\n      return { flexDirection: 'column' };\n    case 'rowReverse':\n      return { flexDirection: 'rowReverse' };\n    case 'columnReverse':\n      return { flexDirection: 'columnReverse' };\n    default:\n      return {};\n  }\n}\n","import React, { useMemo } from 'react'\n\nimport { flexTheme, flexDirectionTheme } from './flex.theme'\nimport { Base } from '../Base'\nimport { FlexInterface } from './flex.types'\n\nexport const Flex = React.memo(function Flex({\n  children,\n  className = '',\n  themed = [],\n  ...propsRest\n}: FlexInterface) {\n  const classNames = useMemo(() => `Flex ${className}`, [className])\n  const _themed = useMemo(() => [flexTheme, flexDirectionTheme, ...themed], [\n    flexTheme,\n    flexDirectionTheme,\n    themed,\n  ])\n\n  return (\n    <Base className={classNames} themed={_themed} {...propsRest}>\n      {children}\n    </Base>\n  )\n})\n\nexport default Flex\n","import React from 'react';\nimport { Icon, IconInterface } from '../Icon';\n\nexport function Code(props: IconInterface) {\n  return (\n    <Icon {...props}>\n      <path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/>\n    </Icon>\n  );\n}\n\nexport default Code\n    ","import React from 'react';\nimport { Icon, IconInterface } from '../Icon';\n\nexport function PlayCircle(props: IconInterface) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z\"/>\n    </Icon>\n  );\n}\n\nexport default PlayCircle\n    ","import React from 'react';\nimport { Icon, IconInterface } from '../Icon';\n\nexport function ViewList(props: IconInterface) {\n  return (\n    <Icon {...props}>\n      <path d=\"M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z\"/>\n    </Icon>\n  );\n}\n\nexport default ViewList\n    ","import React from 'react'\n\nexport const JsonView = React.memo(function JsonView({ items }: any) {\n  return (\n    <pre>\n      <code className=\"language-javascript\">\n        {JSON.stringify(items, null, 2)}\n      </code>\n    </pre>\n  )\n})\n\nexport default JsonView\n","import { useState, useEffect, useMemo } from 'react';\n\nexport function useCacheState<T>(\n  key: string,\n  initialState?: T,\n  storage?: string\n) {\n  const [state, setState] = useState(initialState);\n\n  const windowStorage =\n    storage === 'sessionStorage' ? window.sessionStorage : window.localStorage;\n\n  useEffect(() => {\n    const cached = windowStorage.getItem(key);\n    const data = !cached ? cached : JSON.parse(cached);\n\n    setItem(data || initialState);\n  }, []);\n\n  function setItem(newState: T) {\n    if (newState === state) return;\n    const data = JSON.stringify(newState);\n\n    setState(newState);\n    return windowStorage.setItem(key, data);\n  }\n\n  function removeItem() {\n    setState(undefined);\n    windowStorage.removeItem(key);\n  }\n\n  return useMemo(() => ({ state, setItem, removeItem }), [\n    [state, setItem, removeItem],\n  ]);\n}\n","import React, { useMemo } from 'react'\n\nimport { Copy } from '../MaterialIcons/Copy'\nimport { Delete } from '../MaterialIcons/Delete'\nimport { Edit } from '../MaterialIcons/Edit'\nimport { Download } from '../MaterialIcons/Download'\nimport { TableButtonInterface, TableLinkInterface } from './table.types'\nimport { ButtonIcon } from '../ButtonIcon'\n// const ButtonIcon = styled.a`\n//   background: #0000;\n//   border: none;\n//   color: #fff;\n//   cursor: pointer;\n//   outline: none;\n//   padding: 0;\n//   transform: translateY(4px);\n//   white-space: nowrap;\n// `;\n\nexport const TableButton = React.memo(function TableButton({\n  icon: Component,\n  uid,\n  ...propsRest\n}: TableButtonInterface) {\n  const icon = useMemo(() => Component, [Component])\n  return <ButtonIcon data-uid={uid} icon={icon} {...propsRest} />\n})\n\nexport function TableCopyButton({\n  onClick,\n  uid,\n  ...propsRest\n}: TableButtonInterface) {\n  const icon = useMemo(() => Copy, [Copy])\n\n  return (\n    <TableButton\n      name=\"copy\"\n      onClick={onClick}\n      icon={icon}\n      title=\"Copy\"\n      {...propsRest}\n    />\n  )\n}\n\nexport const TableDeleteButton = function TableDeleteButton({\n  onClick,\n  uid,\n  ...propsRest\n}: TableButtonInterface) {\n  const icon = useMemo(() => Delete, [Delete])\n\n  return (\n    <TableButton\n      name=\"delete\"\n      onClick={onClick}\n      icon={icon}\n      title=\"Delete\"\n      {...propsRest}\n    />\n  )\n}\n\nexport const TableDownloadButton = function TableDownloadButton({\n  onClick,\n  uid,\n  ...propsRest\n}: TableButtonInterface) {\n  const icon = useMemo(() => Download, [Download])\n\n  return (\n    <TableButton\n      name=\"Download\"\n      onClick={onClick}\n      icon={icon}\n      title=\"Download\"\n      {...propsRest}\n    />\n  )\n}\n\nexport const TableEditLink = function TableEditLink({\n  children,\n  uid,\n  ...propsRest\n}: TableLinkInterface) {\n  const icon = useMemo(() => Edit, [Edit])\n\n  return (\n    <TableButton\n      as=\"a\"\n      name=\"Edit\"\n      icon={icon}\n      title=\"Edit\"\n      data-uid={uid}\n      {...propsRest}\n    >\n      {children}\n    </TableButton>\n  )\n}\n\nexport default TableButton\n","import React, { Fragment, useCallback, useMemo } from 'react'\n\nimport { useCacheState } from '../reusable/cacheState'\nimport {\n  TableCopyButton,\n  TableDeleteButton,\n  TableDownloadButton,\n  TableEditLink,\n} from './TableButton'\nimport {\n  TableBodyInterface,\n  TableToolbarButtonInterface,\n  TableToolbarCopyButtonInterface,\n  TableToolbarDownloadButtonInterface,\n  TableRowInterface,\n  TableRowDetailType,\n} from './table.types'\n\ninterface RowInterface {\n  column: TableRowInterface[]\n  rowDetail?: TableRowDetailType\n}\n\nexport const TableBody = React.memo(function TableBody({\n  allSelected,\n  baseRoute = '',\n  dispatch,\n  handleAdd,\n  handleDeleteSelected,\n  itemsToArray,\n  loading,\n  onRowClick,\n  rows = [],\n  selected,\n  tableName,\n  ...propsRest\n}: TableBodyInterface) {\n  const { state: expandRows, setItem: setExpandRows } = useCacheState<string[]>(\n    `${tableName}ExpandRows`,\n    []\n  )\n\n  const handleChange = useCallback(\n    function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n      e.preventDefault()\n      dispatch({\n        type: 'TOGGLE_SELECTED_ITEMS',\n        selected: [e.currentTarget.name],\n      })\n    },\n    [dispatch]\n  )\n\n  const handleDelete = useCallback(function handleDelete(\n    e: React.MouseEvent<HTMLElement>\n  ) {\n    e.preventDefault()\n    // onDelete && onDelete(e)\n  },\n  [])\n\n  const handleExpandRows = useCallback(\n    function handleExpandRows(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n\n      const id = e.currentTarget.dataset.uid\n      const isStringEqual = (r: string) => r === id\n\n      if (expandRows.find(isStringEqual)) {\n        setExpandRows(expandRows.filter(r => !isStringEqual(r)))\n      } else {\n        setExpandRows([...expandRows, id])\n      }\n    },\n    [setExpandRows]\n  )\n\n  const handleRowClick = useCallback(\n    function handleRowClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      const id = e.currentTarget.dataset.uid\n      onRowClick && onRowClick(e, id)\n    },\n    [onRowClick]\n  )\n\n  const body = useMemo(\n    () =>\n      rows.map(({ column, rowDetail }: RowInterface, i: number) => {\n        const RowDetail = rowDetail\n        return (\n          <Fragment key={i}>\n            <tr>\n              {column.map((item: TableRowInterface) => {\n                return (\n                  <Fragment key={item.key}>\n                    {item.component({\n                      dispatch,\n                      expandRows,\n                      handleAdd,\n                      handleChange,\n                      handleDelete,\n                      handleDeleteSelected,\n                      handleExpandRows,\n                      handleRowClick,\n                      itemsToArray,\n                      loading,\n                      selected,\n                      allSelected,\n                      Copy: (props: TableToolbarCopyButtonInterface) => (\n                        <TableCopyButton {...props} />\n                      ),\n                      Edit: (props: TableToolbarButtonInterface) => (\n                        <TableEditLink {...props} href={`${baseRoute}/edit`} />\n                      ),\n\n                      Delete: (props: TableToolbarButtonInterface) => (\n                        <TableDeleteButton onClick={handleDelete} {...props} />\n                      ),\n                      Download: (\n                        props: TableToolbarDownloadButtonInterface\n                      ) => <TableDownloadButton {...props} />,\n                    })}\n                  </Fragment>\n                )\n              })}\n            </tr>\n            {rowDetail && <RowDetail expandRows={expandRows} />}\n          </Fragment>\n        )\n      }),\n    [\n      expandRows,\n      handleAdd,\n      handleChange,\n      handleDelete,\n      handleDeleteSelected,\n      handleExpandRows,\n      rows,\n    ]\n  )\n\n  return (\n    <tbody className=\"TableBody\" {...propsRest}>\n      {body}\n    </tbody>\n  )\n})\n\nexport default TableBody\n","import React, { Fragment, useMemo } from 'react'\n\nimport { TableViewInterface } from './table.types'\nimport TableBody from './TableBody'\n\nexport const TableView = React.memo(function TableView({\n  allSelected,\n  baseRoute = '',\n  dispatch,\n  handleAdd,\n  handleDeleteSelected,\n  headings,\n  itemsToArray,\n  loading,\n  rows,\n  selected,\n  tableName,\n  ...propsRest\n}: TableViewInterface) {\n  const tableHeadings = useMemo(\n    () =>\n      headings && (\n        <thead>\n          <tr>\n            {headings.map((heading, i) =>\n              typeof heading === 'function' ? (\n                <th key={i}>{heading()}</th>\n              ) : (\n                <th key={i}>{heading}</th>\n              )\n            )}\n          </tr>\n        </thead>\n      ),\n    [headings]\n  )\n\n  return (\n    <Fragment>\n      {tableHeadings}\n\n      <TableBody\n        allSelected={allSelected}\n        baseRoute={baseRoute}\n        className=\"TableView\"\n        dispatch={dispatch}\n        handleAdd={handleAdd}\n        handleDeleteSelected={handleDeleteSelected}\n        rows={rows}\n        tableName={tableName}\n        loading={loading}\n        selected={selected}\n        itemsToArray={itemsToArray}\n        {...propsRest}\n      />\n    </Fragment>\n  )\n})\n\nexport default TableView\n","import React, { useCallback, useMemo } from 'react'\n\nimport { Plus } from '../MaterialIcons/Plus'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\nimport { TableToolbarButtonInterface } from './table.types'\n\nexport const ToolbarAddButton = function ToolbarAddButton({\n  onClick,\n  ...propsRest\n}: TableToolbarButtonInterface) {\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onClick && onClick(e)\n    },\n    [onClick]\n  )\n\n  const icon = useMemo(() => Plus, [Plus])\n\n  return (\n    <ButtonIcon\n      as=\"a\"\n      alt=\"add\"\n      appearance=\"active\"\n      uid=\"add\"\n      onClick={handleClick}\n      icon={icon}\n      css={`\n        svg.Icon {\n          padding-right: 5px;\n        }\n      `}\n      {...propsRest}\n    >\n      Add\n    </ButtonIcon>\n  )\n}\n\nexport default ToolbarAddButton\n","import React, { useCallback, useMemo } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { TableToolbarCopyButtonInterface } from './table.types'\n\nimport { Copy } from '../MaterialIcons/Copy'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\n\nexport const ToolbarCopyButton = function ToolbarCopyButton({\n  data,\n  onClick,\n  ...propsRest\n}: TableToolbarCopyButtonInterface) {\n  const text = useMemo(\n    () => (typeof data === 'string' ? data : JSON.stringify(data, null, 2)),\n    [data]\n  )\n\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onClick && onClick(e)\n      //TODO: add copied notification\n    },\n    [onClick]\n  )\n\n  const icon = useMemo(() => Copy, [Copy])\n\n  return (\n    <CopyToClipboard text={text} copy={handleClick}>\n      <ButtonIcon\n        alt=\"copy\"\n        appearance=\"active\"\n        uid=\"copy\"\n        icon={icon}\n        css={`\n          svg.Icon {\n            padding-right: 5px;\n          }\n        `}\n        {...propsRest}\n      >\n        Copy\n      </ButtonIcon>\n    </CopyToClipboard>\n  )\n}\n\nexport default ToolbarCopyButton\n","import React, { useCallback, useMemo } from 'react'\n\nimport { Delete } from '../MaterialIcons/Delete'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\nimport { TableToolbarButtonInterface } from './table.types'\n\nexport const ToolbarDeleteButton = function ToolbarDeleteButton({\n  onClick,\n  ...propsRest\n}: TableToolbarButtonInterface) {\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onClick && onClick(e)\n    },\n    [onClick]\n  )\n\n  const icon = useMemo(() => Delete, [Delete])\n\n  return (\n    <ButtonIcon\n      alt=\"delete\"\n      appearance=\"active\"\n      uid=\"delete\"\n      onClick={handleClick}\n      icon={icon}\n      css={`\n        svg.Icon {\n          padding-right: 5px;\n        }\n      `}\n      {...propsRest}\n    >\n      Delete\n    </ButtonIcon>\n  )\n}\n\nexport default ToolbarDeleteButton\n","import React, { useCallback, useMemo } from 'react'\nimport fileDownload from 'js-file-download'\nimport { TableToolbarDownloadButtonInterface } from './table.types'\nimport { Download } from '../MaterialIcons/Download'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\n\nexport const ToolbarDownloadButton = function ToolbarDownloadButton({\n  onClick,\n  data,\n  fileName,\n  ...propsRest\n}: TableToolbarDownloadButtonInterface) {\n  const text = useMemo(\n    () => (typeof data === 'string' ? data : JSON.stringify(data, null, 2)),\n    [data]\n  )\n\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      text && fileDownload(text, fileName)\n      onClick && onClick(e)\n    },\n    [onClick]\n  )\n\n  const icon = useMemo(() => Download, [Download])\n\n  return (\n    <ButtonIcon\n      alt=\"download\"\n      appearance=\"active\"\n      uid=\"delete\"\n      onClick={handleClick}\n      icon={icon}\n      css={`\n        svg.Icon {\n          padding-right: 5px;\n        }\n      `}\n      {...propsRest}\n    >\n      Download\n    </ButtonIcon>\n  )\n}\n\nexport default ToolbarDownloadButton\n","import React, { useCallback, useMemo } from 'react'\n\nimport { Edit } from '../MaterialIcons/Edit'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\nimport { TableToolbarButtonInterface } from './table.types'\n\nexport const ToolbarEditButton = function ToolbarEditButton({\n  onClick,\n  ...propsRest\n}: TableToolbarButtonInterface) {\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onClick && onClick(e)\n    },\n    [onClick]\n  )\n\n  const icon = useMemo(() => Edit, [Edit])\n\n  return (\n    <ButtonIcon\n      as=\"a\"\n      alt=\"edit\"\n      appearance=\"active\"\n      uid=\"edit\"\n      onClick={handleClick}\n      icon={icon}\n      css={`\n        svg.Icon {\n          padding-right: 5px;\n        }\n      `}\n      {...propsRest}\n    >\n      Edit\n    </ButtonIcon>\n  )\n}\n\nexport default ToolbarEditButton\n","import React, { useCallback, useMemo } from 'react'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\nimport { TableToolbarButtonInterface } from './table.types'\nimport { PlayCircle } from '../MaterialIcons/PlayCircle'\n\nexport const ToolbarExecuteButton = function ToolbarExecuteButton({\n  onClick,\n  ...propsRest\n}: TableToolbarButtonInterface) {\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onClick && onClick(e)\n    },\n    [onClick]\n  )\n\n  const icon = useMemo(() => PlayCircle, [PlayCircle])\n\n  return (\n    <ButtonIcon\n      alt=\"execute\"\n      appearance=\"active\"\n      uid=\"execute\"\n      onClick={handleClick}\n      icon={icon}\n      css={`\n        svg.Icon {\n          padding-right: 5px;\n        }\n      `}\n      {...propsRest}\n    >\n      Run\n    </ButtonIcon>\n  )\n}\n\nexport default ToolbarExecuteButton\n","import { TableInterface } from './table.types'\n\nexport function tableContainerTheme({ height }) {\n  return {\n    height: height || '100%',\n    overflow: 'auto',\n  }\n}\n\nexport function tableTheme({\n  condensed,\n  hover,\n  theme: { animation, border, color, elevate, unit },\n}: TableInterface) {\n  return {\n    borderCollapse: 'collapse',\n    transition: animation.easeMedium(),\n\n    'td, th': {\n      lineHeight: condensed ? 2 : 2.5,\n      padding: 0,\n\n      '&:first-child': {\n        paddingLeft: unit[4],\n      },\n      '&:last-child': {\n        paddingRight: unit[4],\n      },\n    },\n\n    td: {\n      borderTop: border.thin,\n    },\n\n    'tr:hover': {\n      background: hover ? color['grey-800'] : '',\n      boxShadow: hover ? elevate[2] : '',\n    },\n\n    a: {\n      background: 'none',\n      display: 'block',\n      height: '100%',\n      marginRight: '3px',\n      border: border.thinTransparent,\n    },\n\n    'a:hover, a:active': {\n      background: 'none',\n      border: border.thinTransparent,\n      color: color.link,\n    },\n  }\n}\n\nexport function tableCaptionTheme({ theme: {} }: TableInterface) {\n  return {\n    height: 0,\n    visibility: 'hidden',\n  }\n}\n\nexport function tableViewsButtonTheme({ theme: {} }: TableInterface) {\n  return {\n    display: 'flex',\n    marginLeft: 'auto',\n  }\n}\n","import React, { useCallback, useMemo } from 'react'\n\nimport ButtonGroup from '../ButtonGroup/ButtonGroup'\nimport ButtonIcon from '../ButtonIcon/ButtonIcon'\nimport { Base } from '../Base'\nimport { Code } from '../MaterialIcons/Code'\nimport { TableToolbarViewsButtonInterface } from './table.types'\nimport { ViewList } from '../MaterialIcons/ViewList'\nimport { tableViewsButtonTheme } from './table.theme'\n\nexport const ToolbarViewsButton = function ToolbarViewsButton({\n  className,\n  currentView,\n  onClick,\n  themed,\n  ...propsRest\n}: TableToolbarViewsButtonInterface) {\n  const classNames = useMemo(() => `ToolbarViewsButton ${className}`, [\n    className,\n  ])\n  const _themed = useMemo(() => [tableViewsButtonTheme, ...themed], [\n    tableViewsButtonTheme,\n    themed,\n  ])\n\n  const handleClick = useCallback(\n    function handleClick(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n\n      const id = e.currentTarget.dataset.uid\n      onClick && onClick(e, { id })\n    },\n    [onClick]\n  )\n\n  const selectedStyle = useCallback(\n    view => (currentView === view ? 'border-bottom: 1px solid #fff;' : ''),\n    [currentView]\n  )\n\n  const ComponentListAlt = useMemo(() => ViewList, [ViewList])\n  const ComponentCode = useMemo(() => Code, [Code])\n\n  return (\n    <Base className={classNames} themed={_themed} {...propsRest}>\n      <ButtonGroup>\n        <ButtonIcon\n          alt=\"Tabular\"\n          appearance=\"active\"\n          icon={ComponentListAlt}\n          onClick={handleClick}\n          styled={selectedStyle('table')}\n          title=\"Table\"\n          uid=\"table\"\n          css={`\n            svg.Icon {\n              padding-right: 5px;\n            }\n          `}\n        >\n          Tabular\n        </ButtonIcon>\n        <ButtonIcon\n          Json\n          alt=\"json\"\n          appearance=\"secondary\"\n          icon={ComponentCode}\n          onClick={handleClick}\n          styled={selectedStyle('json')}\n          title=\"JSON\"\n          uid=\"json\"\n          css={`\n            svg.Icon {\n              padding-right: 5px;\n            }\n          `}\n        >\n          JSON\n        </ButtonIcon>\n      </ButtonGroup>\n    </Base>\n  )\n}\n\nToolbarViewsButton.defaultProps = {\n  className: '',\n  themed: [],\n}\n\nexport default ToolbarViewsButton\n","import React, { useMemo } from 'react'\nimport Base from '../Base/Base'\nimport { tableCaptionTheme } from './table.theme'\nimport { TableCaptionInterface } from './table.types'\n\nexport const TableCaption = function TableCaption({\n  children,\n  className,\n  themed,\n  ...propsRest\n}: TableCaptionInterface) {\n  const classNames = useMemo(() => `TableCaption ${className}`, [className])\n  const _themed = useMemo(() => [tableCaptionTheme, ...themed], [\n    tableCaptionTheme,\n    themed,\n  ])\n\n  return (\n    <Base as=\"caption\" className={classNames} themed={_themed} {...propsRest}>\n      {children}\n    </Base>\n  )\n}\n\nTableCaption.defaultProps = {\n  className: '',\n  themed: [],\n}\n\nexport default TableCaption\n","import React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n} from 'react'\nimport styled from 'styled-components'\n\nimport Base from '../Base/Base'\nimport { JsonView } from './JsonView'\nimport { TableView } from './TableView'\nimport { Toolbar } from '../Toolbar/Toolbar'\nimport { ToolbarAddButton } from './ToolbarAddButton'\nimport { ToolbarCopyButton } from './ToolbarCopyButton'\nimport { ToolbarDeleteButton } from './ToolbarDeleteButton'\nimport { ToolbarDownloadButton } from './ToolbarDownloadButton'\nimport { ToolbarEditButton } from './ToolbarEditButton'\nimport { ToolbarExecuteButton } from './ToolbarExecuteButton'\nimport { ToolbarViewsButton } from './ToolbarViewsButton'\nimport { tableTheme, tableContainerTheme } from './table.theme'\nimport { useCacheState } from '../reusable/cacheState'\nimport { TableCaption } from './TableCaption'\nimport {\n  TableInterface,\n  TableInitialValueInterface,\n  TableReducerType,\n  TableToolbarInterface,\n  SelectToolbarInterface,\n} from './table.types'\n\nconst SelectedText = styled.span`\n  display: inline-block;\n`\n\nexport const Table = React.memo(function Table({\n  baseRoute = '',\n  className = '',\n  caption,\n  headings,\n  hook,\n  initialValue,\n  name,\n  numbered,\n  onAdd,\n  onCopy,\n  onDelete,\n  onDeleteSelected,\n  onDownload,\n  onEdit,\n  onExecute,\n  rows,\n  onRowClick,\n  title,\n  condensed,\n  hover,\n  toolbar = [],\n  height,\n  themed: propsThemed = [],\n  ...propsRest\n}: TableInterface) {\n  const classNames = useMemo(() => `TableContainer ${className}`, [className])\n  const themed = useMemo(() => [tableTheme, ...propsThemed], [\n    tableTheme,\n    propsThemed,\n  ])\n\n  const {\n    loading,\n    selected,\n    dispatch: dispatchHook,\n    itemsToArray,\n    items,\n  } = hook()\n  const itemsMemo = useMemo(() => items, [items])\n  const itemListMemo = useMemo(() => initialValue || itemsToArray(), [\n    initialValue,\n    itemsToArray,\n  ])\n\n  const initialState: TableInitialValueInterface = {\n    variables: {},\n    itemList: [],\n  }\n\n  useEffect(() => {\n    dispatch({\n      type: 'SET_ITEM_LIST',\n      itemList: itemListMemo, // initialValue || itemListMemo,\n    })\n  }, [itemListMemo])\n\n  const reducer: TableReducerType = useCallback(function reducer(\n    state,\n    action\n  ) {\n    switch (action.type) {\n      case 'SET_ITEM_LIST':\n        return { ...state, itemList: action.itemList }\n      case 'SET_VARIABLES':\n        return { ...state, variables: action.variables }\n      default:\n        return state\n    }\n  },\n  [])\n\n  const [{ itemList }, dispatch] = useReducer(reducer, initialState)\n\n  const { state: currentView, setItem: setCurrentView } = useCacheState(\n    `${name}_Table`,\n    'table'\n  )\n\n  const handleAdd = useCallback(\n    function handleAdd(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onAdd && onAdd(e)\n    },\n    [onAdd]\n  )\n\n  const handleDelete = useCallback(\n    function handleDelete(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onDelete && onDelete(e)\n    },\n    [onDelete]\n  )\n\n  const handleDeleteSelected = useCallback(\n    function handleDeleteSelected(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n\n      const result = window.confirm(`Drop collections?\\n${selected.join('\\n')}`)\n\n      if (result) {\n        onDeleteSelected && onDeleteSelected(e)\n      }\n    },\n    [onDeleteSelected]\n  )\n\n  const handleEdit = useCallback(\n    function handleEdit(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n      onEdit && onEdit(e)\n    },\n    [onEdit]\n  )\n\n  const handleExecute = useCallback(\n    function handleExecute(e: React.MouseEvent<HTMLElement>) {\n      e.preventDefault()\n\n      onExecute().then((result: any) => {\n        if (result) {\n          dispatch({\n            type: 'SET_ITEM_LIST',\n            itemList: result,\n          })\n        }\n      })\n    },\n    [dispatch, onExecute]\n  )\n\n  const handleSwitchView = useCallback(\n    function handleSwitchView(\n      e: React.MouseEvent<HTMLElement>,\n      { id }: { id: string }\n    ) {\n      e.preventDefault()\n\n      if (id !== currentView) {\n        setCurrentView(id)\n      }\n    },\n    [setCurrentView]\n  )\n\n  const [allSelected, setAllSelected] = React.useState(false)\n\n  const handleSelectHeadingChange = React.useCallback(\n    function handleSelectHeadingChange(e: React.ChangeEvent<HTMLInputElement>) {\n      setAllSelected(e.currentTarget.checked)\n      dispatchHook({\n        type: 'SET_SELECTED',\n        selected: e.currentTarget.checked ? Object.keys(items) : [],\n      })\n    },\n    [allSelected, dispatch, items]\n  )\n\n  const makeHeadings = (heading: any) =>\n    typeof heading === 'function'\n      ? heading({ allSelected, handleSelectHeadingChange })\n      : heading\n\n  const headingsMemo = useMemo(() => headings.map(makeHeadings), [headings])\n\n  const rowsMemo = useMemo(\n    () => (typeof rows === 'function' ? rows(itemList) : rows),\n    [itemList, rows]\n  )\n  return (\n    <Fragment>\n      {toolbar.length > 0 ? (\n        <TableToolbar\n          baseRoute={baseRoute}\n          borderBottom=\"thin\"\n          currentView={currentView}\n          data={itemListMemo}\n          items={selected}\n          onAdd={handleAdd}\n          onCopy={onCopy}\n          onDelete={handleDelete}\n          onDeleteSelected={handleDeleteSelected}\n          onDownload={onDownload}\n          onEdit={handleEdit}\n          onExecute={handleExecute}\n          onSwitchView={handleSwitchView}\n          paddingBottom={2}\n          selectToolbar={SelectToolbar}\n          title={title}\n          toolbar={toolbar}\n        />\n      ) : null}\n      {currentView === 'table' ? (\n        <Base\n          className={classNames}\n          themed={[tableContainerTheme]}\n          height={height}\n          {...propsRest}\n        >\n          <Base\n            as=\"table\"\n            className=\"Table\"\n            themed={themed}\n            condensed={condensed}\n            hover={hover}\n          >\n            {caption ? <TableCaption>{caption}</TableCaption> : null}\n            <TableView\n              allSelected={allSelected}\n              baseRoute={baseRoute}\n              dispatch={dispatchHook}\n              handleAdd={handleAdd}\n              handleDeleteSelected={handleDeleteSelected}\n              headings={headingsMemo}\n              itemsToArray={itemsToArray}\n              loading={loading}\n              rows={rowsMemo}\n              selected={selected}\n              tableName={name}\n              onRowClick={onRowClick}\n            />\n          </Base>\n        </Base>\n      ) : (\n        <Base\n          className={classNames}\n          themed={[tableContainerTheme]}\n          height={height}\n          {...propsRest}\n        >\n          <JsonView items={itemsMemo} />\n        </Base>\n      )}\n    </Fragment>\n  )\n})\n\nconst SelectToolbar = React.memo(function SelectToolbar({\n  selected,\n  handleDeleteSelected,\n}: SelectToolbarInterface) {\n  return (\n    <div>\n      <SelectedText>{selected} selected </SelectedText>\n      <ToolbarDeleteButton\n        alt=\"delete\"\n        onClick={handleDeleteSelected}\n        title=\"Delete Collection\"\n      />\n    </div>\n  )\n})\n\nconst TableToolbar = React.memo(function TableToolbar({\n  baseRoute,\n  items,\n  onDeleteSelected,\n  onSwitchView,\n  selectToolbar,\n  currentView,\n  data,\n  onAdd,\n  onCopy,\n  onDelete,\n  onDownload,\n  onEdit,\n  onExecute,\n  title,\n  toolbar,\n}: TableToolbarInterface) {\n  const buttons = (button: string) => {\n    switch (button) {\n      case 'add':\n        return (\n          <ToolbarAddButton\n            alt=\"add\"\n            key=\"add\"\n            onClick={onAdd}\n            href={`/${baseRoute}/new`}\n          />\n        )\n\n      case 'copy':\n        return (\n          <ToolbarCopyButton\n            alt=\"copy\"\n            key=\"copy\"\n            data={data}\n            onClick={onCopy}\n          />\n        )\n      case 'edit':\n        return (\n          <ToolbarEditButton\n            alt=\"edit\"\n            key=\"edit\"\n            onClick={onEdit}\n            href={`/${baseRoute}/edit`}\n          />\n        )\n      case 'delete':\n        return (\n          <ToolbarDeleteButton\n            alt=\"delete\"\n            key=\"delete\"\n            onClick={onDelete}\n            title=\"Delete\"\n          />\n        )\n      case 'download':\n        return (\n          <ToolbarDownloadButton\n            alt=\"download\"\n            key=\"download\"\n            data={data}\n            onClick={onDownload}\n            fileName={\n              title ? `guru_download_${title}.json` : `guru_download.json`\n            }\n          />\n        )\n      case 'execute':\n        return (\n          <ToolbarExecuteButton\n            alt=\"execute\"\n            key=\"execute\"\n            onClick={onExecute}\n            title=\"Execute\"\n          />\n        )\n      case 'views':\n        return (\n          <ToolbarViewsButton\n            key=\"views\"\n            onClick={onSwitchView}\n            currentView={currentView}\n          />\n        )\n      default:\n        return null\n    }\n  }\n\n  const toolbarContent = useMemo(() => {\n    return (\n      <Fragment>\n        {toolbar.map((button: any) => {\n          return typeof button === 'function'\n            ? button({ onSwitchView, currentView, onAdd })\n            : buttons(button)\n        })}\n      </Fragment>\n    )\n  }, [buttons, currentView, onAdd, onSwitchView, toolbar])\n\n  return (\n    <Toolbar\n      baseRoute={baseRoute}\n      items={items}\n      onDeleteSelected={onDeleteSelected}\n      onSwitchView={onSwitchView}\n      selectToolbar={selectToolbar}\n      borderBottom=\"thin\"\n      paddingBottom={2}\n    >\n      {toolbarContent}\n    </Toolbar>\n  )\n})\n\nexport default Table\n","import { useMemo } from 'react'\nimport {\n  useCollectionHashReducer,\n  itemsToArray,\n} from '../reusable/collectionHash'\n\nconst items = [...new Array(100)]\n\nexport function useTable() {\n  const initialState = {\n    uid: 'id',\n    items: items.map((_, i) => ({\n      id: `id_${i}`,\n      name: `Project ${i}`,\n      endpoint: `http://project${i}.com`,\n    })),\n  }\n\n  const [collection, dispatch] = useCollectionHashReducer(initialState)\n\n  return useMemo(\n    () => ({\n      ...collection,\n      dispatch,\n      itemsToArray: () => itemsToArray(collection.items),\n    }),\n    [collection, dispatch]\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nimport { TableRowSelectInterface } from './table.types'\nimport { Checkbox } from '../Checkbox'\nexport const TableRowSelect = function TableRowSelect({\n  handleChange,\n  id,\n  checked = false,\n  ...propsRest\n}: TableRowSelectInterface) {\n  const [isChecked, setChecked] = useState(checked)\n\n  useEffect(() => {\n    if (checked !== isChecked) {\n      setChecked(checked)\n    }\n  }, [checked])\n\n  const changed = function handleClick(e: React.ChangeEvent<HTMLInputElement>) {\n    setChecked(!isChecked)\n    handleChange && handleChange(e)\n  }\n\n  return (\n    <td style={{ width: '48px' }}>\n      <Checkbox\n        checked={isChecked}\n        onChange={changed}\n        name={id}\n        {...propsRest}\n      />\n    </td>\n  )\n}\n\nexport default TableRowSelect\n","import React from 'react'\n\nimport { Checkbox } from '../Checkbox'\n\nexport const AllSelectedHeading = React.memo(function AllSelectedHeading({\n  onChange,\n  checked = false,\n}: {\n  checked: boolean\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}) {\n  return <Checkbox name=\"allSelected\" checked={checked} onChange={onChange} />\n})\n\nexport default AllSelectedHeading\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport { Flex } from '../Flex/Flex'\nimport styled from 'styled-components'\nimport { ThemeProvider } from '../ThemeContext/ThemeProvider'\nimport { Table } from './Table'\nimport { useTable } from './table.example'\nimport { TableRowSelect } from './TableRowSelect'\nimport { AllSelectedHeading } from './AllSelectedHeading'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Edit = makeShortcode(\"Edit\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"table\"\n    }}>{`Table`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Table} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"default\"\n    }}>{`Default`}</h2>\n    <Playground __position={1} __code={'<ThemeProvider>\\n  <Table\\n    height=\\\"250px\\\"\\n    name=\\\"TableDeafult\\\"\\n    caption=\\\"Table caption\\\"\\n    headings={[\\'\\', \\'ID\\', \\'Name\\', \\'Endpoint\\', \\'\\']}\\n    baseRoute=\\\"/table/#\\\"\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }, index) => ({\\n        column: [\\n          {\\n            key: \\'index\\',\\n            component: ({ handleChange, selected }) => <td>{index}</td>,\\n          },\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => (\\n              <td>\\n                <a href=\\\"#\\\">{endpoint}</a>\\n              </td>\\n            ),\\n          },\\n          {\\n            key: \\'actions\\',\\n            component: ({ Edit }) => (\\n              <td style={{ textAlign: \\'right\\' }}>\\n                <Edit appearance=\\\"tertiary\\\" uid={name} />\\n              </td>\\n            ),\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect,\n      AllSelectedHeading\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table height='250px' name='TableDeafult' caption=\"Table caption\" headings={['', 'ID', 'Name', 'Endpoint', '']} baseRoute='/table/#' hook={useTable} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }, index) => ({\n          column: [{\n            key: 'index',\n            component: ({\n              handleChange,\n              selected\n            }) => <td>{index}</td>\n          }, {\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td><a href=\"#\">{endpoint}</a></td>\n          }, {\n            key: \"actions\",\n            component: ({\n              Edit\n            }) => <td style={{\n              textAlign: \"right\"\n            }}>\n                  <Edit appearance='tertiary' uid={name} mdxType=\"Edit\" />\n                </td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"selectable\"\n    }}>{`Selectable`}</h2>\n    <Playground __position={2} __code={'<ThemeProvider>\\n  <Table\\n    height=\\\"250px\\\"\\n    name=\\\"TableSelect\\\"\\n    selectable\\n    headings={[\\'\\', \\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }) => ({\\n        column: [\\n          {\\n            key: \\'select\\',\\n            component: ({ handleChange, selected }) => (\\n              <TableRowSelect\\n                id={id}\\n                handleChange={handleChange}\\n                selected={selected}\\n              />\\n            ),\\n          },\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => (\\n              <td>\\n                <a href=\\\"#\\\">{endpoint}</a>\\n              </td>\\n            ),\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect,\n      AllSelectedHeading\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table height=\"250px\" name=\"TableSelect\" selectable headings={['', 'ID', 'Name', 'Endpoint']} hook={useTable} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }) => ({\n          column: [{\n            key: 'select',\n            component: ({\n              handleChange,\n              selected\n            }) => <TableRowSelect id={id} handleChange={handleChange} selected={selected} mdxType=\"TableRowSelect\" />\n          }, {\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td>\n                  <a href=\"#\">{endpoint}</a>\n                </td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"hover\"\n    }}>{`Hover`}</h2>\n    <Playground __position={3} __code={'<ThemeProvider>\\n  <Table\\n    height=\\\"250px\\\"\\n    name=\\\"TableHover\\\"\\n    hover\\n    headings={[\\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }) => ({\\n        column: [\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => (\\n              <td>\\n                <a href=\\\"#\\\">{endpoint}</a>\\n              </td>\\n            ),\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect,\n      AllSelectedHeading\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table height=\"250px\" name=\"TableHover\" hover headings={['ID', 'Name', 'Endpoint']} hook={useTable} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }) => ({\n          column: [{\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td>\n                  <a href=\"#\">{endpoint}</a>\n                </td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"condensed\"\n    }}>{`Condensed`}</h2>\n    <Playground __position={4} __code={'<ThemeProvider>\\n  <Table\\n    height=\\\"250px\\\"\\n    name=\\\"TableCondensed\\\"\\n    condensed\\n    headings={[\\'ID\\', \\'Name\\', \\'Endpoint\\']}\\n    hook={useTable}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }) => ({\\n        column: [\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => (\\n              <td>\\n                <a href=\\\"#\\\">{endpoint}</a>\\n              </td>\\n            ),\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect,\n      AllSelectedHeading\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table height=\"250px\" name=\"TableCondensed\" condensed headings={['ID', 'Name', 'Endpoint']} hook={useTable} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }) => ({\n          column: [{\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td>\n                  <a href=\"#\">{endpoint}</a>\n                </td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"toolbar\"\n    }}>{`Toolbar`}</h2>\n    <Playground __position={5} __code={'<ThemeProvider>\\n  <Table\\n    height=\\\"250px\\\"\\n    baseRoute=\\\"/table/#\\\"\\n    name=\\\"TableToolbar\\\"\\n    caption=\\\"Table caption\\\"\\n    headings={[\\n      ({ handleSelectHeadingChange }) => (\\n        <AllSelectedHeading onChange={handleSelectHeadingChange} />\\n      ),\\n      \\'ID\\',\\n      \\'Name\\',\\n      \\'Endpoint\\',\\n    ]}\\n    hook={useTable}\\n    toolbar={[\\'add\\', \\'copy\\', \\'download\\', \\'views\\']}\\n    rows={items =>\\n      items.map(({ id, name, endpoint }, index) => ({\\n        column: [\\n          {\\n            key: \\'select\\',\\n            component: ({ handleChange, allSelected }) => (\\n              <TableRowSelect\\n                id={id}\\n                handleChange={handleChange}\\n                checked={allSelected}\\n              />\\n            ),\\n          },\\n          {\\n            key: \\'id\\',\\n            component: () => <td>{id}</td>,\\n          },\\n          {\\n            key: \\'name\\',\\n            component: () => <td>{name}</td>,\\n          },\\n          {\\n            key: \\'endpoint\\',\\n            component: () => (\\n              <td>\\n                <a href=\\\"#\\\">{endpoint}</a>\\n              </td>\\n            ),\\n          },\\n        ],\\n      }))\\n    }\\n  />\\n</ThemeProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Flex,\n      styled,\n      ThemeProvider,\n      Table,\n      useTable,\n      TableRowSelect,\n      AllSelectedHeading\n    }} mdxType=\"Playground\">\n  <ThemeProvider mdxType=\"ThemeProvider\">\n    <Table height='250px' baseRoute='/table/#' name='TableToolbar' caption=\"Table caption\" headings={[({\n          handleSelectHeadingChange\n        }) => <AllSelectedHeading onChange={handleSelectHeadingChange} mdxType=\"AllSelectedHeading\" />, 'ID', 'Name', 'Endpoint']} hook={useTable} toolbar={['add', 'copy', 'download', 'views']} rows={items => items.map(({\n          id,\n          name,\n          endpoint\n        }, index) => ({\n          column: [{\n            key: 'select',\n            component: ({\n              handleChange,\n              allSelected\n            }) => <TableRowSelect id={id} handleChange={handleChange} checked={allSelected} mdxType=\"TableRowSelect\" />\n          }, {\n            key: 'id',\n            component: () => <td>{id}</td>\n          }, {\n            key: 'name',\n            component: () => <td>{name}</td>\n          }, {\n            key: 'endpoint',\n            component: () => <td><a href=\"#\">{endpoint}</a></td>\n          }]\n        }))} mdxType=\"Table\" />\n  </ThemeProvider>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  ","import { useMemo, useEffect, useState } from 'react'\n\nexport function useGetItems(hook: any) {\n  const { items, itemsToArray } = hook()\n  const [state, setState] = useState([])\n\n  useEffect(() => {\n    setState(itemsToArray(items))\n  }, [items])\n\n  return useMemo(() => state, [state])\n}\n\nexport function useGetActiveItem<T>(hook: any, initialState: T) {\n  const [state, setState] = useState<T>(initialState)\n\n  const { active, items } = hook()\n\n  useEffect(() => {\n    if (items && items[active]) {\n      setState(items[active])\n    }\n  }, [active, items])\n\n  return useMemo(() => state, [state])\n}\n\nexport function useResetActive(hook: any) {\n  const { active, dispatch } = hook()\n\n  useEffect(() => {\n    if (active === '') return\n\n    dispatch({\n      type: 'SET_ACTIVE',\n      active: '',\n    })\n  }, [])\n}\n\nexport function useSetActive(hook: any, value: any) {\n  const { active, dispatch } = hook()\n\n  useEffect(() => {\n    if (active === value) return\n    dispatch({\n      type: 'SET_ACTIVE',\n      active: value,\n    })\n  }, [active, value])\n}\n","export const COLLECTION_HASH_INITIAL_STATE = {\n  active: '',\n  items: [],\n  loading: false,\n  selected: [],\n  uid: 'id',\n};\n","import { useReducer } from 'react';\nimport { COLLECTION_HASH_INITIAL_STATE } from './collectionHashConstants';\nimport {\n  BuildInitialValueType,\n  CollectionHashActionInterface,\n  CollectionHashInitialValueInterface,\n  CollectionHashReducerType,\n  CollectionHashStateInterface,\n  ReducerType,\n  ItemsToArrayType,\n} from './collectionHash.types';\n\nconst buildInitialValue: BuildInitialValueType = initialState => ({\n  ...COLLECTION_HASH_INITIAL_STATE,\n  ...initialState,\n});\n\nexport const createInitialState: BuildInitialValueType = initialState =>\n  buildInitialValue(initialState);\n\nexport const itemsToArray: ItemsToArrayType = function itemsToArray(items) {\n  let list = [];\n\n  for (let item in items) {\n    list.push(items[item]);\n  }\n\n  return list;\n};\n\nexport const useCollectionHashReducer: CollectionHashReducerType = function useCollectionHashReducer(\n  initialState,\n  extendReducer = state => state\n) {\n  const initialValue: CollectionHashInitialValueInterface = buildInitialValue(\n    initialState\n  );\n\n  function removeItem(list: { [key: string]: string }, itemsToRemove: any[]) {\n    let items: { [key: string]: string } = {};\n\n    for (let item in list) {\n      if (!itemsToRemove.includes(item)) {\n        items[item] = list[item];\n      }\n    }\n\n    return items;\n  }\n\n  function transformCollectionToObject(items: any[]) {\n    if (!Array.isArray(items)) {\n      return undefined;\n    }\n\n    const reducer = (acc: { [key: string]: string }, item: any) => ({\n      ...acc,\n      [item[initialValue.uid]]: item,\n    });\n    return items.reduce(reducer, {});\n  }\n\n  function reducer(\n    state: CollectionHashStateInterface,\n    action: CollectionHashActionInterface,\n    initialValue: CollectionHashInitialValueInterface,\n    extendReducer: ReducerType\n  ) {\n    const notArray = (value: any) => !Array.isArray(value);\n    const notString = (value: any) => typeof value !== 'string';\n    const notDefined = (value: any) => value == null;\n\n    switch (action.type) {\n      case 'INSERT_ITEMS': {\n        const items = Array.isArray(action.items)\n          ? transformCollectionToObject(action.items)\n          : {\n              [action.items[initialValue.uid]]: action.items,\n            };\n        return {\n          ...state,\n          items: {\n            ...state.items,\n            ...items,\n          },\n        };\n      }\n\n      case 'REDUCER': {\n        return action.reducer(state);\n      }\n\n      case 'REMOVE_ITEMS': {\n        if (notArray(action.remove)) {\n          return state;\n        }\n\n        return {\n          ...state,\n          active: action.remove.includes(state.active) ? '' : state.active,\n          selected: state.selected.filter(\n            item => !action.remove.includes(item)\n          ),\n          items: removeItem(state.items, action.remove),\n        };\n      }\n\n      case 'REPLACE_ITEMS': {\n        const transformedData = transformCollectionToObject(action.items);\n        return {\n          ...state,\n          items: transformedData,\n        };\n      }\n\n      case 'RESET': {\n        return initialValue;\n      }\n\n      case 'SET_ACTIVE': {\n        if (notString(action.active)) {\n          return state;\n        }\n\n        return {\n          ...state,\n          active: notDefined(action.active) ? '' : action.active.trim(),\n        };\n      }\n\n      case 'SET_LOADING': {\n        return {\n          ...state,\n          loading: !!action.loading,\n        };\n      }\n\n      case 'SET_SELECTED': {\n        return {\n          ...state,\n          selected: action.selected,\n        };\n      }\n\n      case 'TOGGLE_SELECTED_ITEMS': {\n        let selected = [...state.selected];\n\n        for (let select of action.selected) {\n          const index = selected.indexOf(select);\n          const _select = select.trim();\n\n          if (state.items[index]) {\n            selected =\n              index === 0\n                ? selected.slice(1)\n                : index === selected.length - 1\n                ? selected.slice(0, selected.length - 1)\n                : [...selected.slice(0, index), ...selected.slice(index + 1)];\n          } else {\n            selected.push(_select);\n          }\n        }\n\n        return {\n          ...state,\n          selected,\n        };\n      }\n\n      case 'UPDATE_ITEM': {\n        if (!state.items[action.select]) {\n          return state;\n        }\n\n        const item = {\n          [action.item.name || action.select]: {\n            ...state.items[action.select],\n            ...action.item,\n          },\n        };\n\n        const updateItemInList = () => ({\n          ...state.items,\n          ...item,\n        });\n\n        let removeCloneAndUpdateItem = () => ({\n          ...removeItem(state.items, [action.select]),\n          ...item,\n        });\n\n        const updatedItems = action.item[initialValue.uid]\n          ? removeCloneAndUpdateItem()\n          : updateItemInList();\n\n        const setSelectedItem = (list: any[], item: any, update: any) => {\n          const replaceSelectedItem = () => {\n            const index = list.indexOf(item);\n            return index === 0\n              ? [update, ...list.slice(1)]\n              : index === list.length - 1\n              ? [...list.slice(0, list.length - 1), update]\n              : [...list.slice(0, index), update, ...list.slice(index + 1)];\n          };\n\n          return state.selected.includes(action.select)\n            ? replaceSelectedItem()\n            : state.selected;\n        };\n\n        return {\n          ...state,\n          active:\n            state.active === action.select ? action.item.name : state.active,\n          selected: setSelectedItem(\n            state.selected,\n            action.select,\n            action.item.name\n          ),\n          items: updatedItems,\n        };\n      }\n\n      default:\n        return extendReducer ? extendReducer(state, action) : state;\n    }\n  }\n\n  function crudReducer(\n    state: CollectionHashStateInterface,\n    action: CollectionHashActionInterface\n  ) {\n    return reducer(state, action, initialValue, extendReducer);\n  }\n\n  return useReducer(crudReducer, initialValue);\n};\n","export * from './collectionHashConstants';\nexport * from './collectionHashReducer';\nexport * from './collectionHash.hooks';\nexport * from './collectionHash.types';\n"],"sourceRoot":""}